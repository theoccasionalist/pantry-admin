{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./auth.config.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/callback/callback.component.ts","./src/app/components/callback/callback.component.html","./src/app/components/cart-print/cart-print.component.ts","./src/app/components/cart-print/cart-print.component.html","./src/app/components/cart/cart.component.ts","./src/app/components/cart/cart.component.html","./src/app/components/family-print/family-print.component.ts","./src/app/components/family-print/family-print.component.html","./src/app/components/family/family.component.ts","./src/app/components/family/family.component.html","./src/app/components/log-in/log-in.component.ts","./src/app/components/log-in/log-in.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/order-delete-modal/order-delete-modal.component.ts","./src/app/components/order-delete-modal/order-delete-modal.component.html","./src/app/components/order-grid-buttons/order-grid-buttons.component.ts","./src/app/components/order-grid-buttons/order-grid-buttons.component.html","./src/app/components/order-overview/order-overview.component.ts","./src/app/components/order-overview/order-overview.component.html","./src/app/components/order/order.component.ts","./src/app/components/order/order.component.html","./src/app/components/orders/orders.component.ts","./src/app/components/orders/orders.component.html","./src/app/components/pantry-overview/pantry-overview.component.ts","./src/app/components/pantry-overview/pantry-overview.component.html","./src/app/components/product-add/product-add.component.ts","./src/app/components/product-add/product-add.component.html","./src/app/components/product-delete-modal/product-delete-modal.component.ts","./src/app/components/product-delete-modal/product-delete-modal.component.html","./src/app/components/product-edit/product-edit.component.ts","./src/app/components/product-edit/product-edit.component.html","./src/app/components/product-grid-buttons/product-grid-buttons.component.ts","./src/app/components/product-grid-buttons/product-grid-buttons.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/components/shop-edit/shop-edit.component.ts","./src/app/components/shop-edit/shop-edit.component.html","./src/app/components/shop/shop.component.ts","./src/app/components/shop/shop.component.html","./src/app/components/sub-type-edit/sub-type-edit.component.ts","./src/app/components/sub-type-edit/sub-type-edit.component.html","./src/app/components/type-add/type-add.component.ts","./src/app/components/type-add/type-add.component.html","./src/app/components/type-delete-modal/type-delete-modal.component.ts","./src/app/components/type-delete-modal/type-delete-modal.component.html","./src/app/components/type-edit/type-edit.component.ts","./src/app/components/type-edit/type-edit.component.html","./src/app/components/type-grid-buttons/type-grid-buttons.component.ts","./src/app/components/type-grid-buttons/type-grid-buttons.component.html","./src/app/components/types/types.component.ts","./src/app/components/types/types.component.html","./src/app/guards/auth.guard.ts","./src/app/models/order.model.ts","./src/app/models/product.model.ts","./src/app/models/type.model.ts","./src/app/services/auth.service.ts","./src/app/services/data.service.ts","./src/app/services/interceptor.service.ts","./src/app/services/order.service.ts","./src/app/services/pantry-panel.service.ts","./src/app/services/product.service.ts","./src/app/services/shop.service.ts","./src/app/services/type.service.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default {\r\n    domain: 'young-cell-9742.auth0.com',\r\n    client_id: 'baw80wc6kObTX8PwZQTfcqaExteejyaS',\r\n    redirect_uri: `${window.location.origin}/callback`\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PantryOverviewComponent } from './components/pantry-overview/pantry-overview.component';\r\nimport { OrderOverviewComponent } from './components/order-overview/order-overview.component';\r\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\r\nimport { ProductAddComponent } from './components/product-add/product-add.component';\r\nimport { TypeAddComponent } from './components/type-add/type-add.component';\r\nimport { TypeEditComponent } from './components/type-edit/type-edit.component';\r\nimport { SubTypeEditComponent } from './components/sub-type-edit/sub-type-edit.component';\r\nimport { ShopEditComponent } from './components/shop-edit/shop-edit.component';\r\nimport { OrderComponent } from './components/order/order.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { LogInComponent } from './components/log-in/log-in.component';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { InterceptorService } from './services/interceptor.service';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: 'log-in', component: LogInComponent},\r\n  {path: 'orders', component: OrderOverviewComponent, canActivate: [AuthGuard]},\r\n  {path: 'order/:id', component: OrderComponent, canActivate: [AuthGuard]},\r\n  {path: 'pantry', component: PantryOverviewComponent, canActivate: [AuthGuard]},\r\n  {path: 'product', component: ProductAddComponent, canActivate: [AuthGuard]},\r\n  {path: 'product/:id', component: ProductEditComponent, canActivate: [AuthGuard]},\r\n  {path: 'shop', component: ShopEditComponent, canActivate: [AuthGuard]},\r\n  {path: 'sub-types', component: SubTypeEditComponent, canActivate: [AuthGuard]},\r\n  {path: 'type', component: TypeAddComponent, canActivate: [AuthGuard]},\r\n  {path: 'type/:id', component: TypeEditComponent, canActivate: [AuthGuard]},\r\n  {path: '', redirectTo: 'log-in', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: InterceptorService,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from './services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'front-end';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {NgxPrintModule} from 'ngx-print';\r\nimport { TypesComponent } from './components/types/types.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { OrderOverviewComponent } from './components/order-overview/order-overview.component';\r\nimport { PantryOverviewComponent } from './components/pantry-overview/pantry-overview.component';\r\nimport { ProductsComponent } from './components/products/products.component';\r\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\r\nimport { ProductAddComponent } from './components/product-add/product-add.component';\r\nimport { TypeAddComponent } from './components/type-add/type-add.component';\r\nimport { TypeEditComponent } from './components/type-edit/type-edit.component';\r\nimport { SubTypeEditComponent } from './components/sub-type-edit/sub-type-edit.component';\r\nimport { ShopComponent } from './components/shop/shop.component';\r\nimport { ShopEditComponent } from './components/shop-edit/shop-edit.component';\r\nimport { ProductGridButtonsComponent } from './components/product-grid-buttons/product-grid-buttons.component';\r\nimport { TypeGridButtonsComponent } from './components/type-grid-buttons/type-grid-buttons.component';\r\nimport { ProductDeleteModalComponent } from './components/product-delete-modal/product-delete-modal.component';\r\nimport { TypeDeleteModalComponent } from './components/type-delete-modal/type-delete-modal.component';\r\nimport { OrdersComponent } from './components/orders/orders.component';\r\nimport { OrderGridButtonsComponent } from './components/order-grid-buttons/order-grid-buttons.component';\r\nimport { OrderComponent } from './components/order/order.component';\r\nimport { CartComponent } from './components/cart/cart.component';\r\nimport { FamilyComponent } from './components/family/family.component';\r\nimport { FamilyPrintComponent } from './components/family-print/family-print.component';\r\nimport { CartPrintComponent } from './components/cart-print/cart-print.component';\r\nimport { OrderDeleteModalComponent } from './components/order-delete-modal/order-delete-modal.component';\r\nimport { LogInComponent } from './components/log-in/log-in.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport {APP_BASE_HREF} from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TypesComponent,\r\n    NavbarComponent,\r\n    OrderOverviewComponent,\r\n    PantryOverviewComponent,\r\n    ProductsComponent,\r\n    ProductEditComponent,\r\n    ProductAddComponent,\r\n    TypeAddComponent,\r\n    TypeEditComponent,\r\n    SubTypeEditComponent,\r\n    ShopComponent,\r\n    ShopEditComponent,\r\n    ProductGridButtonsComponent,\r\n    TypeGridButtonsComponent,\r\n    ProductDeleteModalComponent,\r\n    TypeDeleteModalComponent,\r\n    OrdersComponent,\r\n    OrderGridButtonsComponent,\r\n    OrderComponent,\r\n    CartComponent,\r\n    FamilyComponent,\r\n    FamilyPrintComponent,\r\n    CartPrintComponent,\r\n    OrderDeleteModalComponent,\r\n    LogInComponent,\r\n    CallbackComponent,\r\n  ],\r\n  imports: [\r\n    AgGridModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    DragDropModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatExpansionModule,\r\n    MatOptionModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    NgxPrintModule,\r\n    ReactiveFormsModule,\r\n    ScrollingModule,\r\n  ],\r\n  entryComponents: [\r\n    OrderDeleteModalComponent,\r\n    OrderGridButtonsComponent,\r\n    ProductDeleteModalComponent,\r\n    ProductGridButtonsComponent,\r\n    TypeDeleteModalComponent,\r\n    TypeGridButtonsComponent\r\n  ],\r\n  providers: [\r\n    {provide: APP_BASE_HREF, useValue: 'https://damp-brook-50473.herokuapp.com'},\r\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 2000}}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.css']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.handleAuthCallback();\r\n  }\r\n\r\n}\r\n","<mat-spinner></mat-spinner>\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Order } from 'src/app/models/order.model';\n\n@Component({\n  selector: 'app-cart-print',\n  templateUrl: './cart-print.component.html',\n  styleUrls: ['./cart-print.component.css']\n})\nexport class CartPrintComponent implements OnInit {\n  columns: string[] = ['column1', 'column2'];\n  @Input() order: Order;\n  @Input() sliceId: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"flex-container\">\r\n    <div *ngFor=\"let type of order.cart\">\r\n        <table class=\"no-border\">\r\n            <tr class=\"no-border\"><td class=\"no-border\">\r\n                <mat-toolbar class=\"items-toolbar top-table\">{{type.typeName}}</mat-toolbar>\r\n                <table mat-table [dataSource]=\"type.products\">\r\n                    <ng-container matColumnDef=\"column1\">\r\n                    <th class=\"half\" mat-header-cell *matHeaderCellDef>Product</th>\r\n                    <td class=\"half\" mat-cell *matCellDef=\"let product\"><div>{{product.productName}}</div></td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"column2\">\r\n                    <th mat-header-cell *matHeaderCellDef><span class=\"margin-left\">Amount</span></th>\r\n                    <td mat-cell *matCellDef=\"let product\"><span class=\"margin-left\">{{product.amount}}</span></td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\r\n                </table>\r\n                <div class=\"items-toolbar bottom-table\">\r\n                    <span>{{'Family: ' + order.family.lastName}}</span>\r\n                    <span>{{' Order Id: ' + sliceId}}</span>\r\n                </div>\r\n            </td></tr>\r\n        </table>\r\n    </div>    \r\n</div>\r\n   ","import { Component, OnInit, Input } from '@angular/core';\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\nimport { Order } from 'src/app/models/order.model';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  cart: CartItemsByType[];\n  columns: string[] = ['column1', 'column2'];\n  @Input() order: Order;\n  panelOpenState = true;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.cart = this.order.cart;\n  }\n}\n","<mat-expansion-panel (opened)=\"panelOpenState=true\" (closed)=\"panelOpenState=false\" [expanded]=\"panelOpenState\">\r\n    <mat-expansion-panel-header>\r\n        <mat-panel-title>Cart</mat-panel-title>\r\n        <mat-panel-description>{{panelOpenState ? 'close' : 'open'}}</mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <div class=\"flex-container\">\r\n        <div  *ngFor=\"let type of cart\">\r\n            <div class=\"margin-left\">\r\n                <mat-toolbar class=\"items-toolbar\">{{type.typeName}}</mat-toolbar>\r\n                <table mat-table [dataSource]=\"type.products\">\r\n                    <ng-container matColumnDef=\"column1\">\r\n                    <th mat-header-cell *matHeaderCellDef>Name</th>\r\n                    <td mat-cell *matCellDef=\"let product\">{{product.productName}}</td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"column2\">\r\n                    <th mat-header-cell *matHeaderCellDef>Amount</th>\r\n                    <td mat-cell *matCellDef=\"let product\">{{product.amount}}</td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\r\n                </table>\r\n                <div class=\"items-toolbar bottom-table\"></div>\r\n            </div>\r\n        </div>    \r\n    </div>   \r\n    <mat-action-row (click)=\"panelOpenState = false\"></mat-action-row> \r\n</mat-expansion-panel>   \r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Order } from 'src/app/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-family-print',\r\n  templateUrl: './family-print.component.html',\r\n  styleUrls: ['./family-print.component.css']\r\n})\r\nexport class FamilyPrintComponent implements OnInit {\r\n  @Input() order: Order;\r\n  @Input() sliceId: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"info-header\">Contact</div>   \n<mat-card>                \n    <div id=\"contact-inner-grid\">\n        <div>\n            <div class=\"info info-label\">First Name:</div>\n            <div class=\"info info-label\">Last Name:</div>\n            <div class=\"info info-label\">Zip Code:</div>\n            <div class=\"info info-label\">Phone Number:</div>\n            <div class=\"info info-label\">Email Address:</div>\n        </div>\n        <div>\n            <div class=\"info\">{{order.family.firstName}}</div>\n            <div class=\"info\">{{order.family.lastName}}</div>\n            <div class=\"info\">{{order.family.zipCode}}</div>\n            <div class=\"info\">{{order.family.phoneNumber}}</div>\n            <div class=\"info\">{{order.family.emailAddress ? order.family.emailAddress : 'Not Provided' }}</div>\n        </div>\n    </div>        \n</mat-card>\n<div id=\"house-pick-up-grid\">\n    <div>\n        <header class=\"info-header\">Household</header>   \n        <mat-card>\n            <div id=\"household-inner-grid\">   \n                <div>\n                    <div class=\"info\">Family Size:</div>\n                    <div class=\"info\">School Children:</div>\n                    <div class=\"info\">Infants:</div>\n                </div>\n                <div>\n                    <div class=\"info\">{{order.family.familySize}}</div>\n                    <div class=\"info\">{{order.family.schoolChildren ? order.family.schoolChildren : 'None' }}</div>\n                    <div class=\"info\">{{order.family.infants ? 'Yes' : 'No'}}</div>\n                </div>\n            </div>    \n        </mat-card>    \n    </div>\n    <div>\n        <header class=\"info-header\">Pick Up</header>   \n        <mat-card>\n            <div id=\"pick-up-inner-grid\">   \n                <div>\n                    <div class=\"info\">Date:</div>\n                    <div class=\"info\">Location:</div>\n                    <div class=\"info\">Order Id:</div>\n                </div>\n                <div>\n                    <div class=\"info\">{{order.pickUpDate}}</div>\n                    <div class=\"info\">{{order.family.referral ? 'CELC' : 'Broad St.' }}</div>\n                    <div class=\"info\">{{sliceId}}</div>\n                </div>\n            </div>    \n        </mat-card>\n    </div>     \n</div> \n","import { Component, OnInit, Input } from '@angular/core';\nimport { Order } from 'src/app/models/order.model';\nimport { Family } from 'src/app/models/family.model';\n\n@Component({\n  selector: 'app-family',\n  templateUrl: './family.component.html',\n  styleUrls: ['./family.component.css']\n})\nexport class FamilyComponent implements OnInit {\n  family: Family;\n  @Input() order: Order;\n  panelOpenState = true;\n  pickUpDate: string;\n  @Input() sliceId: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.family = this.order.family;\n    this.pickUpDate = this.order.pickUpDate;\n  }\n\n}\n","<mat-expansion-panel (opened)=\"panelOpenState=true\" (closed)=\"panelOpenState=false\" [expanded]=\"panelOpenState\">\r\n    <mat-expansion-panel-header>\r\n        <mat-panel-title>Guest and Pick Up Information</mat-panel-title>\r\n        <mat-panel-description>{{panelOpenState ? 'close' : 'open'}}</mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <mat-card id=\"info-outer-grid\">\r\n        <div>\r\n            <div class=\"info-header\">Contact</div>   \r\n            <mat-card class=\"info-card\">                \r\n                <div id=\"contact-inner-grid\">\r\n                    <div>\r\n                        <div class=\"info info-label\">First Name:</div>\r\n                        <div class=\"info info-label\">Last Name:</div>\r\n                        <div class=\"info info-label\">Zip Code:</div>\r\n                        <div class=\"info info-label\">Phone Number:</div>\r\n                        <div class=\"info info-label\">Email Address:</div>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"info\">{{family.firstName}}</div>\r\n                        <div class=\"info\">{{family.lastName}}</div>\r\n                        <div class=\"info\">{{family.zipCode}}</div>\r\n                        <div class=\"info\">{{family.phoneNumber}}</div>\r\n                        <div class=\"info\">{{family.emailAddress ? family.emailAddress : 'Not Provided' }}</div>\r\n                    </div>\r\n                </div>        \r\n            </mat-card>\r\n        </div>    \r\n        <div>\r\n            <div class=\"info-header\">Household</div>   \r\n            <mat-card class=\"info-card\">\r\n                <div id=\"household-inner-grid\">   \r\n                    <div>\r\n                        <div class=\"info info-label\">Family Size:</div>\r\n                        <div class=\"info info-label\">School Children:</div>\r\n                        <div class=\"info info-label\">Infants:</div>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"info\">{{family.familySize}}</div>\r\n                        <div class=\"info\">{{family.schoolChildren ? family.schoolChildren : 'None' }}</div>\r\n                        <div class=\"info\">{{family.infants ? 'Yes' : 'No'}}</div>\r\n                    </div>\r\n                </div>    \r\n            </mat-card>    \r\n        </div>\r\n        <div>\r\n            <div class=\"info-header\">Pick Up</div>   \r\n            <mat-card class=\"info-card\">\r\n                <div id=\"pick-up-inner-grid\">   \r\n                    <div>\r\n                        <div class=\"info info-label\">Date:</div>\r\n                        <div class=\"info info-label\">Location:</div>\r\n                        <div class=\"info info-label\">Order Id:</div>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"info\">{{pickUpDate}}</div>\r\n                        <div class=\"info\">{{family.referral ? 'CELC' : 'Broad St.' }}</div>\r\n                        <div class=\"info\">{{sliceId}}</div>\r\n                    </div>\r\n                </div>    \r\n            </mat-card>    \r\n        </div>      \r\n    </mat-card>\r\n</mat-expansion-panel>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css']\r\n})\r\nexport class LogInComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  toOrders() {\r\n    this.router.navigate([`/orders`]);\r\n  }\r\n\r\n}\r\n","<div id=\"grid-container\"> \r\n    <mat-card>   \r\n    <img id=\"logo\" src=\"../../../assets/images/bsfp-logo-login.png\" alt=\"bsfp-logo-login\">\r\n    <div id=\"message-button-container\">\r\n        <mat-toolbar>Welcome!</mat-toolbar>  \r\n        <mat-card>\r\n            Pantry Manager! \r\n            <button mat-raised-button (click)=\"authService.login()\" *ngIf=\"!authService.loggedIn\">Log In</button>\r\n            <button mat-raised-button (click)=\"toOrders()\" *ngIf=\"authService.loggedIn\">To Family</button>\r\n        </mat-card>\r\n    </div>   \r\n    </mat-card>\r\n</div>    \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onOrderClick() {\r\n    this.router.navigate([`/orders`]);\r\n  }\r\n\r\n  onPantryClick() {\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n}\r\n","<mat-toolbar>\r\n    <button class=\"order-button-margin\" mat-raised-button (click)=\"onOrderClick()\">Order Manager</button>\r\n    <span></span>\r\n    <button mat-raised-button (click)=\"onPantryClick()\">Pantry Manager</button>\r\n    <span id=\"title\">Online Manager</span> \r\n    <button mat-raised-button (click)=\"authService.logout()\">Log Out</button>\r\n</mat-toolbar>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-order-delete-modal',\r\n  templateUrl: './order-delete-modal.component.html',\r\n  styleUrls: ['./order-delete-modal.component.css']\r\n})\r\nexport class OrderDeleteModalComponent implements OnInit {\r\n  sliceId: string;\r\n\r\n  constructor(private dataService: DataService, public dialogRef: MatDialogRef<OrderDeleteModalComponent>,\r\n              @Inject (MAT_DIALOG_DATA) public order: Order, private orderService: OrderService, private router: Router, \r\n              private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.sliceId = this.order._id.slice(-5);\r\n  }\r\n\r\n  onProceedClick() {\r\n    this.orderService.deleteOrder(this.order._id).subscribe((response: any) => {\r\n      this.showResponseStatus(response.status);\r\n      this.dialogRef.close();\r\n      this.router.navigate(['/orders']);\r\n    });\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/orders`]);\r\n  }\r\n\r\n  showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`Order Id ${this.sliceId} successfully deleted.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`Order Id ${this.sliceId} failed to delete.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateOrders();\r\n  }\r\n}\r\n","<mat-card>\r\n    <p>This will permanently delete order i.d. {{sliceId}}.  Please assure that this order has been accommodated.</p>\r\n</mat-card>\r\n<p id=\"proceed-prompt\">Do you wish to proceed?</p>\r\n<span>\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button (click)=\"onProceedClick()\">Proceed</button>\r\n</span>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { OrderDeleteModalComponent } from '../order-delete-modal/order-delete-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-order-grid-buttons',\r\n  templateUrl: './order-grid-buttons.component.html',\r\n  styleUrls: ['./order-grid-buttons.component.css']\r\n})\r\nexport class OrderGridButtonsComponent implements OnInit {\r\n  data: any;\r\n  params: any;\r\n\r\n  constructor(private dialog: MatDialog, private router: Router, private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params) {\r\n    this.data =  params.data;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onDeleteClick() {\r\n    this.data.received === 'Yes' ?\r\n      this.dialog.open(OrderDeleteModalComponent, {\r\n      data: this.data,\r\n      disableClose: true,\r\n      panelClass: ['delete-dialog-container'],\r\n      width: '34rem'})\r\n    :\r\n      this.snackBar.open('Orders must be marked as received before deleting.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']});\r\n  }\r\n\r\n  onViewClick() {\r\n    this.router.navigate(['/order', this.data._id]);\r\n  }\r\n\r\n}\r\n","<button id=\"view-button\" (click)=\"onViewClick()\">View</button>\n<button id=\"delete-button\" (click)=\"onDeleteClick()\">Delete</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-overview',\n  templateUrl: './order-overview.component.html',\n  styleUrls: ['./order-overview.component.css']\n})\nexport class OrderOverviewComponent implements OnInit {\n\n  ngOnInit() {\n  }\n\n}\n","<mat-card id=\"top-container\">\r\n    <app-orders></app-orders>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-order-view',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.css']\r\n})\r\nexport class OrderComponent implements OnInit, OnDestroy {\r\n  loading = true;\r\n  order: Order;\r\n  sliceId: string;\r\n  subscription = new Subscription();\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private dataService: DataService, private router: Router,\r\n              private orderService: OrderService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.activatedRoute.params.pipe(\r\n        switchMap(params => this.dataService.getOrderById(params.id)),\r\n        take(1)\r\n      ).subscribe((order: Order) => {\r\n        this.rerouteOnEmptyOrder(order);\r\n        this.order = order;\r\n        this.sliceId = order._id.slice(-5);\r\n        this.sortProductsByName();\r\n        this.sortTypesByName();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onBackClick() {\r\n    this.router.navigate(['/orders']);\r\n  }\r\n\r\n  onReceivedClick() {\r\n    const received = {received: !this.order.received};\r\n    this.orderService.updateOrderReceived(this.order._id, received).subscribe((response: any) => {\r\n      this.showResponseStatus(response.status);\r\n    });\r\n  }\r\n\r\n  rerouteOnEmptyOrder(order: any) {\r\n    if (order === undefined || Object.entries(order).length === 0 && order.constructor === Object) {\r\n      this.snackBar.open('Order not found. Please try again.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      this.router.navigate([`/orders`]);\r\n    }\r\n  }\r\n\r\n  showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      let update: string;\r\n      this.order.received ? update = 'unreceived' : update = 'received';\r\n      this.snackBar.open(`Order marked as ${update}.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']});\r\n      this.order.received = !this.order.received;\r\n    } else {\r\n      this.snackBar.open('Order failed to update.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']});\r\n    }\r\n    this.dataService.updateOrders();\r\n  }\r\n\r\n  sortProductsByName() {\r\n    this.order.cart.forEach((typeInCart: CartItemsByType) => {\r\n      typeInCart.products.sort(\r\n        (before, after) => before.productName.trim().toLowerCase() > after.productName.trim().toLowerCase() ? 1 : -1);\r\n    });\r\n  }\r\n\r\n  sortTypesByName() {\r\n    this.order.cart.sort((before, after) => before.typeName.trim().toLowerCase() > after.typeName.trim().toLowerCase() ? 1 : -1);\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\" class=\"margin-bottom\">\r\n        <span id=\"title\">Order</span>\r\n        <button mat-raised-button (click)=\"onBackClick()\">Back</button>    \r\n        <button mat-raised-button printSectionId=\"print-section\" [useExistingCss]=\"true\" ngxPrint>Print</button>        \r\n        <button mat-raised-button [ngClass]=\"{'unreceived': !order.received }\" *ngIf=\"!order.received\" (click)=\"onReceivedClick()\">Mark Received</button>  \r\n        <button mat-raised-button [ngClass]=\"{'received': order.received }\" *ngIf=\"order.received\" (click)=\"onReceivedClick()\">Mark Unreceived</button>\r\n    </span>\r\n    <cdk-virtual-scroll-viewport itemSize=\"\">\r\n        <div id=\"expand-grid\">\r\n            <app-family [order]=\"order\" [sliceId]=\"sliceId\"></app-family>\r\n            <app-cart [order]=\"order\"></app-cart>\r\n        </div>\r\n    </cdk-virtual-scroll-viewport>\r\n</mat-card>\r\n<div id=\"print-section\" *ngIf=\"!loading\">\r\n    <header>\r\n        <div class=\"header-content\">Broad St. Food Pantry Online Order</div>\r\n    </header>\r\n    <div class=\"seperator\">Guest and Pick Up Information</div>\r\n    <app-family-print [order]=\"order\" [sliceId]=\"sliceId\"></app-family-print>\r\n    <div class=\"seperator\">Cart</div>\r\n    <app-cart-print [order]=\"order\" [sliceId]=\"sliceId\"></app-cart-print>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { OrderGridButtonsComponent } from '../order-grid-buttons/order-grid-buttons.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit, OnDestroy {\r\n  columnDefs = [\r\n    {headerName: 'First Name', field: 'firstName'},\r\n    {headerName: 'Last Name', field: 'lastName'},\r\n    {headerName: 'Family Size', field: 'familySize'},\r\n    {headerName: 'Children', field: 'schoolChildren',\r\n      comparator: (firstSchool, secondSchool) => this.schoolComparator(firstSchool, secondSchool)},\r\n    {headerName: 'Infants', field: 'infants'},\r\n    {headerName: 'Phone', field: 'phoneNumber'},\r\n    {headerName: 'Email', field: 'emailAddress'},\r\n    {headerName: 'Location', field: 'location'},\r\n    {headerName: 'Pick Up', field: 'pickUpDate', width: 90},\r\n    {headerName: 'Received', field: 'received', width: 90},\r\n    {headerName: '', field: 'action', filter: false, sortable: false, width: 150, cellRendererFramework: OrderGridButtonsComponent}\r\n  ];\r\n  defaultColDef = {\r\n    filter: true,\r\n    filterParams: {\r\n      suppressAndOrCondition: true\r\n    },\r\n    resizable: true,\r\n    sortable: true,\r\n    width: 100\r\n  };\r\n  gridOptions: any;\r\n  loading = true;\r\n  orders: Order[];\r\n  subscription = new Subscription();\r\n  rowData = [];\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n        this.dataService.getOrders().subscribe((orders: Order[]) => {\r\n        this.orders = orders;\r\n        this.rowData = this.getFormattedFields();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private getFormattedFields() {\r\n    const rowData = [];\r\n    this.orders.forEach((order: Order) => {\r\n      const rowEntry = {};\r\n      const family  = order.family;\r\n      Object.defineProperty(rowEntry, '_id', {value: order._id});\r\n      Object.defineProperty(rowEntry, 'firstName', {value: family.firstName});\r\n      Object.defineProperty(rowEntry, 'lastName', {value: family.lastName});\r\n      Object.defineProperty(rowEntry, 'familySize', {value: order.family.familySize});\r\n      family.schoolChildren ?\r\n        Object.defineProperty(rowEntry, 'schoolChildren', {value: family.schoolChildren}) :\r\n        Object.defineProperty(rowEntry, 'schoolChildren', {value: 'None'});\r\n      family.infants ?\r\n        Object.defineProperty(rowEntry, 'infants', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'infants', {value: 'No'});\r\n      Object.defineProperty(rowEntry, 'phoneNumber', {value: family.phoneNumber});\r\n      family.emailAddress ?\r\n        Object.defineProperty(rowEntry, 'emailAddress', {value: family.emailAddress}) :\r\n        Object.defineProperty(rowEntry, 'emailAddress', {value: '-'});\r\n      family.referral ?\r\n        Object.defineProperty(rowEntry, 'location', {value: 'CELC'}) :\r\n        Object.defineProperty(rowEntry, 'location', {value: 'Broad St.'});\r\n      Object.defineProperty(rowEntry, 'pickUpDate', {value: order.pickUpDate});\r\n      order.received ?\r\n        Object.defineProperty(rowEntry, 'received', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'received', {value: 'No'});\r\n      rowData.push(rowEntry);\r\n    });\r\n    return rowData;\r\n  }\r\n\r\n  private schoolComparator(firstPoints: any, secondPoints: any) {\r\n    if (isNaN(firstPoints)) {\r\n      firstPoints = 0;\r\n    }\r\n    if (isNaN(secondPoints)) {\r\n      secondPoints = 0;\r\n    }\r\n    return firstPoints > secondPoints ? 1 : -1;\r\n  }\r\n\r\n  updateOrders() {\r\n    this.dataService.updateOrders();\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"ag-grid-container\" *ngIf=\"!loading\">\r\n    <span id=\"button-grid-container\">\r\n        <span id=\"orders-title\">Orders</span>\r\n        <button mat-raised-button (click)=\"updateOrders()\">Refresh Orders</button>\r\n    </span>\r\n    <cdk-virtual-scroll-viewport  itemSize=\"\">    \r\n        <ag-grid-angular \r\n        style=\"width: 1140px; height: 500px;\" \r\n        class=\"ag-theme-balham\"\r\n        [columnDefs]=\"columnDefs\"\r\n        [defaultColDef]=\"defaultColDef\"\r\n        [suppressCellSelection]=\"true\"\r\n        [pagination]=\"true\"\r\n        [paginationAutoPageSize]=\"true\"\r\n        [rowData]=\"rowData\">\r\n        </ag-grid-angular>\r\n    </cdk-virtual-scroll-viewport >    \r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { PantryPanelService } from 'src/app/services/pantry-panel.service';\r\nimport { Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-pantry-overview',\r\n  templateUrl: './pantry-overview.component.html',\r\n  styleUrls: ['./pantry-overview.component.css']\r\n})\r\nexport class PantryOverviewComponent implements OnInit, OnDestroy {\r\n  loading = true;\r\n  productPanelOpenState = false;\r\n  shopPanelOpenState = false;\r\n  subscription = new Subscription();\r\n  typePanelOpenState = false;\r\n\r\n  constructor(public pantryPanelService: PantryPanelService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.pantryPanelService.getPanelOpenStates().subscribe((panelOpenStates) => {\r\n        this.productPanelOpenState = panelOpenStates.get('product');\r\n        this.typePanelOpenState = panelOpenStates.get('type');\r\n        this.shopPanelOpenState = panelOpenStates.get('shop');\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\n    <mat-spinner></mat-spinner>\n</div>\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\n    <cdk-virtual-scroll-viewport  itemSize=\"\">\n        <mat-expansion-panel \n        (opened) =\"pantryPanelService.setPanelOpenStates('shop',true)\" \n        (closed)=\"pantryPanelService.setPanelOpenStates('shop',false)\" \n        [expanded]=\"shopPanelOpenState\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Shop Manager\n                </mat-panel-title>\n                <mat-panel-description>\n                    {{shopPanelOpenState ? 'close' : 'open'}}\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <app-shop></app-shop>\n        </mat-expansion-panel>\n        <mat-expansion-panel \n        (opened) =\"pantryPanelService.setPanelOpenStates('type',true)\" \n        (closed)=\"pantryPanelService.setPanelOpenStates('type',false)\" \n        [expanded]=\"typePanelOpenState\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Type Manager\n                </mat-panel-title>\n                <mat-panel-description>\n                    {{typePanelOpenState ? 'close' : 'open'}}\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <app-types></app-types>\n        </mat-expansion-panel>\n        <mat-expansion-panel \n        (opened) =\"pantryPanelService.setPanelOpenStates('product',true)\" \n        (closed)=\"pantryPanelService.setPanelOpenStates('product',false)\" \n        [expanded]=\"productPanelOpenState\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Product Manager\n                </mat-panel-title>\n                <mat-panel-description>\n                    {{productPanelOpenState ? 'close' : 'open'}}\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <app-products></app-products>\n        </mat-expansion-panel>\n    </cdk-virtual-scroll-viewport> \n</mat-card>\n\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder, ValidatorFn } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\nexport const minMaxValidator: ValidatorFn = (formGroup: FormGroup) => {\r\n  const minFamSize = formGroup.get('minFamSize').value;\r\n  const maxFamSize = formGroup.get('maxFamSize').value;\r\n  if (minFamSize !== '' && maxFamSize !== '') {\r\n    return minFamSize > maxFamSize ? {minMax: true} : null;\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'app-product-add',\r\n  templateUrl: './product-add.component.html',\r\n  styleUrls: ['./product-add.component.css']\r\n})\r\nexport class ProductAddComponent implements OnInit {\r\n  limitDeleted = false;\r\n  loading = true;\r\n  prodSizeAmount: FormArray;\r\n  product = new Product();\r\n  productForm = new FormGroup({\r\n    productName: new FormControl('', Validators.required),\r\n    points: new FormControl('', Validators.required),\r\n    school: new FormControl('', Validators.required),\r\n    infant: new FormControl('', Validators.required),\r\n  });\r\n  requiredError = 'This field is required.';\r\n\r\n  constructor(protected dataService: DataService, protected formBuilder: FormBuilder, protected productService: ProductService,\r\n              protected snackBar: MatSnackBar, protected router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.loading = !this.loading;\r\n  }\r\n\r\n  addSizeAmount() {\r\n    this.prodSizeAmount.push(this.formBuilder.group({\r\n      minFamSize: ['', [Validators.required]],\r\n      maxFamSize: ['', Validators.required],\r\n      maxAmount: ['', Validators.required]\r\n    }, { validator: minMaxValidator }\r\n    ));\r\n  }\r\n\r\n  deleteSizeAmount(index: number) {\r\n    this.limitDeleted = true;\r\n    this.prodSizeAmount.removeAt(index);\r\n    if (!this.prodSizeAmount.length) {\r\n      this.productForm.removeControl('prodSizeAmount');\r\n    }\r\n  }\r\n\r\n  initSizeAmount() {\r\n    this.prodSizeAmount = new FormArray([]);\r\n    this.addSizeAmount();\r\n    this.productForm.addControl('prodSizeAmount', this.prodSizeAmount);\r\n  }\r\n\r\n  onAddClick() {\r\n    if (this.productForm.valid) {\r\n      this.setProductValues();\r\n      this.productService.addProduct(this.product).subscribe((response: any) => {\r\n        this.showResponseStatus(response.status);\r\n        this.router.navigate([`/pantry`]);\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  setProductValues() {\r\n    this.product.productName = this.productForm.get('productName').value;\r\n    this.productForm.get('prodSizeAmount') && this.prodSizeAmount.length ?\r\n      this.product.prodSizeAmount = this.productForm.get('prodSizeAmount').value :\r\n      this.product.prodSizeAmount = undefined;\r\n    this.productForm.get('points') && this.productForm.get('points').value ?\r\n      this.product.points = this.productForm.get('points').value :\r\n      this.product.points = undefined;\r\n    this.productForm.get('school') && this.productForm.get('school').value ?\r\n      this.product.school = this.productForm.get('school').value :\r\n      this.product.school = undefined;\r\n    this.productForm.get('infant') && this.productForm.get('infant').value ?\r\n      this.product.infant = this.productForm.get('infant').value :\r\n      this.product.infant = undefined;\r\n  }\r\n\r\n  showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`${this.product.productName} successfully updated.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`${this.product.productName} failed to update.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateProducts();\r\n    this.dataService.updateShop();\r\n    this.dataService.updateTypes();\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span *ngIf=\"!product.productName\" class=\"product-title\">Product Create</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n        <button mat-raised-button (click)=\"onAddClick()\" [disabled]=\"!productForm.valid\">Save Product and Exit</button>        \r\n    </span>\r\n    <div id=\"grid-container\">\r\n        <mat-card class=\"left-form\" [formGroup]=\"productForm\">\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Product Name</mat-label>\r\n                <input matInput formControlName=\"productName\">\r\n                <mat-error *ngIf=\"productForm.get('productName').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Points</mat-label>\r\n                <mat-select matInput formControlName=\"points\">\r\n                    <mat-option [value]=false>None</mat-option>\r\n                    <mat-option [value]=1>1</mat-option>\r\n                    <mat-option [value]=2>2</mat-option>\r\n                    <mat-option [value]=3>3</mat-option>\r\n                    <mat-option [value]=4>4</mat-option>\r\n                    <mat-option [value]=5>5</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('points').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>After School?</mat-label>\r\n                <mat-select matInput formControlName=\"school\">\r\n                    <mat-option [value]=true>Yes</mat-option>\r\n                    <mat-option [value]=false>No</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('school').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Infant?</mat-label>\r\n                <mat-select matInput formControlName=\"infant\">\r\n                    <mat-option [value]=true>Yes</mat-option>\r\n                    <mat-option [value]=false>No</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('infant').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </mat-card>\r\n        <mat-card id=\"right-form\" [formGroup]=\"productForm\">\r\n            <mat-card id=\"init-size-amount\" *ngIf=\"!productForm.get('prodSizeAmount')\">\r\n                <span>This product does not currently have family size limits.</span>\r\n                <button mat-raised-button (click)=\"initSizeAmount()\">Create Limits</button> \r\n            </mat-card>\r\n            <span id=\"add-limit\" *ngIf=\"productForm.get('prodSizeAmount')\">\r\n                <span>Product Limits per Range of Family Size:</span>\r\n                <button mat-raised-button (click)=\"addSizeAmount()\">Add Another Limit</button>  \r\n            </span>\r\n            <cdk-virtual-scroll-viewport  itemSize=\"\" *ngIf=\"productForm.get('prodSizeAmount')\">\r\n                <mat-card class=\"prod-size-amount-card\" *ngFor=\"let element of productForm.get('prodSizeAmount')['controls']; let i = index\" formArrayName=\"prodSizeAmount\">\r\n                    <ng-container [formGroupName]=\"i\">\r\n                        <div class=\"prod-size-amount-form\">\r\n                            <mat-form-field >\r\n                                <mat-label>Minimum Family Size</mat-label>\r\n                                <mat-select matInput formControlName=\"minFamSize\">\r\n                                    <mat-option [value]=1>1</mat-option>\r\n                                    <mat-option [value]=2>2</mat-option>\r\n                                    <mat-option [value]=3>3</mat-option>\r\n                                    <mat-option [value]=4>4</mat-option>\r\n                                    <mat-option [value]=5>5</mat-option>\r\n                                    <mat-option [value]=6>6</mat-option>\r\n                                    <mat-option [value]=7>7</mat-option>\r\n                                    <mat-option [value]=8>8</mat-option>\r\n                                    <mat-option [value]=9>9</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('minFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                            <mat-label>Maximum Family Size</mat-label>\r\n                            <mat-select matInput formControlName=\"maxFamSize\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('maxFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>        \r\n                            <mat-form-field>\r\n                            <mat-label>Product Limit</mat-label>\r\n                            <mat-select matInput formControlName=\"maxAmount\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('maxAmount').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <span>\r\n                                <button mat-raised-button (click)=\"deleteSizeAmount(i)\">Delete Limit</button>\r\n                            </span>  \r\n                        </div> \r\n                        <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].hasError('minMax')\">Minimum size must be equal to or smaller than maximum size.</mat-error>    \r\n                    </ng-container>      \r\n                </mat-card>\r\n            </cdk-virtual-scroll-viewport>          \r\n        </mat-card>\r\n    </div>\r\n</mat-card>\r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-delete-modal',\r\n  templateUrl: './product-delete-modal.component.html',\r\n  styleUrls: ['./product-delete-modal.component.css']\r\n})\r\nexport class ProductDeleteModalComponent implements OnInit {\r\n\r\n  constructor(private dataService: DataService, public dialogRef: MatDialogRef<ProductDeleteModalComponent>,\r\n              @Inject (MAT_DIALOG_DATA) public product: Product, private productService: ProductService, \r\n              private router: Router, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {}\r\n\r\n\r\n  private deleteProduct() {\r\n    this.productService.deleteProduct(this.product._id).subscribe((response: any) => {\r\n      this.showResponseStatus(response.status);\r\n    });\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  onProceedClick() {\r\n    this.deleteProduct();\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  private showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`${this.product.productName} successfully deleted.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`${this.product.productName} failed to delete.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateProducts();\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateShop();\r\n  }\r\n}\r\n","<mat-card>\n    <p>This action will permanently delete {{product.productName}}.  Permanently deleting a product removes it\n    from the shop and from types that contain it.</p>\n</mat-card>\n<p id=\"proceed-prompt\">Do you wish to proceed?</p>\n<span>\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\n    <button mat-raised-button (click)=\"onProceedClick()\">Proceed</button>\n</span>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { minMaxValidator, ProductAddComponent } from '../product-add/product-add.component';\r\nimport { combineLatest } from 'rxjs';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-product-edit',\r\n  templateUrl: '../product-edit/product-edit.component.html',\r\n  styleUrls: ['../product-add/product-add.component.css']\r\n})\r\nexport class ProductEditComponent extends ProductAddComponent implements OnInit {\r\n  inShop = false;\r\n  loading = true;\r\n  prodSizeAmount: FormArray;\r\n  product: Product;\r\n  productForm: FormGroup;\r\n  requiredError = 'This field is required';\r\n  shop: Shop;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, protected dataService: DataService, protected formBuilder: FormBuilder,\r\n              protected productService: ProductService, protected snackBar: MatSnackBar,\r\n              protected router: Router) {\r\n                super(dataService, formBuilder, productService, snackBar, router);\r\n              }\r\n\r\n  ngOnInit() {\r\n    combineLatest([\r\n      this.activatedRoute.params.pipe(\r\n        switchMap(params => this.dataService.getProductById(params.id)),\r\n        take(1)),\r\n      this.dataService.getShop()\r\n      ]).subscribe(([product, shop]) => {\r\n      this.rerouteOnEmptyProduct(product);\r\n      this.product = product;\r\n      this.productForm = new FormGroup({\r\n        productName: new FormControl(this.product.productName, Validators.required),\r\n        points: new FormControl(this.product.points ? this.product.points : false, Validators.required),\r\n        school: new FormControl(this.product.school ? this.product.school : false, Validators.required),\r\n        infant: new FormControl(this.product.infant ? this.product.infant : false, Validators.required),\r\n      });\r\n      this.setProdSizeAmountForm();\r\n      this.shop = shop;\r\n      this.setInShop();\r\n      this.loading = !this.loading;\r\n    });\r\n  }\r\n\r\n  onUpdateClick() {\r\n    if (this.productForm.valid) {\r\n      this.setProductValues();\r\n      this.productService.updateProduct(this.product._id, this.product).subscribe((response: any) => {\r\n        if (response.status === 200) {\r\n          this.snackBar.open(`${this.product.productName} updated successfully.`, 'Dismiss', {\r\n            panelClass: ['green-snackbar']\r\n          });\r\n          this.router.navigate([`/pantry`]);\r\n        } else {\r\n          this.snackBar.open(`${this.product.productName} failed to update.`, 'Dismiss', {\r\n            panelClass: ['red-snackbar']\r\n          });\r\n          this.router.navigate([`/pantry`]);\r\n        }\r\n        this.dataService.updateProducts();\r\n        this.dataService.updateShop();\r\n        this.dataService.updateTypes();\r\n      });\r\n    }\r\n  }\r\n\r\n  rerouteOnEmptyProduct(product: any) {\r\n    if (product === undefined || Object.entries(product).length === 0 && product.constructor === Object) {\r\n      this.snackBar.open('Product not found. Please try again.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      this.router.navigate([`/pantry`]);\r\n    }\r\n  }\r\n\r\n  setInShop() {\r\n    this.shop.shop.forEach((type: Type) => {\r\n      type.products.forEach((product: Product) => {\r\n        if (this.product._id === product._id) {\r\n          this.inShop = true;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  setProdSizeAmountForm() {\r\n    if (this.product.prodSizeAmount) {\r\n      this.prodSizeAmount = new FormArray([]);\r\n      this.product.prodSizeAmount.forEach(element => {\r\n        this.prodSizeAmount.push(this.formBuilder.group({\r\n          minFamSize: [element.minFamSize, Validators.required],\r\n          maxFamSize: [element.maxFamSize, Validators.required],\r\n          maxAmount: [element.maxAmount, Validators.required]\r\n        },\r\n        { validator: minMaxValidator }\r\n        ));\r\n        this.productForm.addControl('prodSizeAmount', this.prodSizeAmount);\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span class=\"product-title\">Product Edit</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>    \r\n        <button mat-raised-button *ngIf=\"product.productName\" (click)=\"onUpdateClick()\" [disabled]=\"(productForm.pristine && !limitDeleted) || !productForm.valid\">Save Update and Exit</button>  \r\n    </span>\r\n    <div id=\"grid-container\">\r\n        <mat-card class=\"left-form\" [ngClass]=\"{'in-shop-left-form': inShop}\" [formGroup]=\"productForm\">\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Product Name</mat-label>\r\n                <input matInput formControlName=\"productName\">\r\n                <mat-error *ngIf=\"productForm.get('productName').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Points</mat-label>\r\n                <mat-select matInput formControlName=\"points\">\r\n                    <mat-option [value]=false>None</mat-option>\r\n                    <mat-option [value]=1>1</mat-option>\r\n                    <mat-option [value]=2>2</mat-option>\r\n                    <mat-option [value]=3>3</mat-option>\r\n                    <mat-option [value]=4>4</mat-option>\r\n                    <mat-option [value]=5>5</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('points').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>After School?</mat-label>\r\n                <mat-select matInput formControlName=\"school\">\r\n                    <mat-option [value]=true>Yes</mat-option>\r\n                    <mat-option [value]=false>No</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('school').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Infant?</mat-label>\r\n                <mat-select matInput formControlName=\"infant\">\r\n                    <mat-option [value]=true>Yes</mat-option>\r\n                    <mat-option [value]=false>No</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('infant').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div id=\"shop\" *ngIf=\"inShop\">Currently in the Shop</div>   \r\n        </mat-card>\r\n        <mat-card id=\"right-form\" [formGroup]=\"productForm\">\r\n            <mat-card id=\"init-size-amount\" *ngIf=\"!productForm.get('prodSizeAmount')\">\r\n                <span>This product does not currently have family size limits.</span>\r\n                <button mat-raised-button (click)=\"initSizeAmount()\">Create Limits</button> \r\n            </mat-card>\r\n            <span id=\"add-limit\" *ngIf=\"productForm.get('prodSizeAmount')\">\r\n                <span>Product Limits per Range of Family Size:</span>\r\n                <button mat-raised-button (click)=\"addSizeAmount()\">Add Another Limit</button>  \r\n            </span>\r\n            <cdk-virtual-scroll-viewport  itemSize=\"\" *ngIf=\"productForm.get('prodSizeAmount')\">\r\n                <mat-card class=\"prod-size-amount-card\" *ngFor=\"let element of productForm.get('prodSizeAmount')['controls']; let i = index\" formArrayName=\"prodSizeAmount\">\r\n                    <ng-container [formGroupName]=\"i\">\r\n                        <div class=\"prod-size-amount-form\">\r\n                            <mat-form-field >\r\n                                <mat-label>Minimum Family Size</mat-label>\r\n                                <mat-select matInput formControlName=\"minFamSize\">\r\n                                    <mat-option [value]=1>1</mat-option>\r\n                                    <mat-option [value]=2>2</mat-option>\r\n                                    <mat-option [value]=3>3</mat-option>\r\n                                    <mat-option [value]=4>4</mat-option>\r\n                                    <mat-option [value]=5>5</mat-option>\r\n                                    <mat-option [value]=6>6</mat-option>\r\n                                    <mat-option [value]=7>7</mat-option>\r\n                                    <mat-option [value]=8>8</mat-option>\r\n                                    <mat-option [value]=9>9</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('minFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                            <mat-label>Maximum Family Size</mat-label>\r\n                            <mat-select matInput formControlName=\"maxFamSize\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('maxFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>        \r\n                            <mat-form-field>\r\n                            <mat-label>Product Limit</mat-label>\r\n                            <mat-select matInput formControlName=\"maxAmount\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('maxAmount').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <span>\r\n                                <button mat-raised-button (click)=\"deleteSizeAmount(i)\">Delete Limit</button>\r\n                            </span>  \r\n                        </div> \r\n                        <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].hasError('minMax')\">Minimum size must be equal to or smaller than maximum size.</mat-error>    \r\n                    </ng-container>      \r\n                </mat-card>\r\n            </cdk-virtual-scroll-viewport>          \r\n        </mat-card>\r\n    </div>\r\n</mat-card>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ProductDeleteModalComponent } from '../product-delete-modal/product-delete-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-product-grid-buttons',\r\n  templateUrl: './product-grid-buttons.component.html',\r\n  styleUrls: ['./product-grid-buttons.component.css']\r\n})\r\nexport class ProductGridButtonsComponent implements OnInit {\r\n  data: any;\r\n  params: any;\r\n\r\n  constructor(private dialog: MatDialog, private router: Router) { }\r\n\r\n  agInit(params) {\r\n    this.data =  params.data;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onDeleteClick() {\r\n    this.dialog.open(ProductDeleteModalComponent, {\r\n      data: this.data,\r\n      disableClose: true,\r\n      panelClass: ['delete-dialog-container'],\r\n      width: '34rem'\r\n    });\r\n  }\r\n\r\n  onEditClick() {\r\n    this.router.navigate(['/product', this.data._id]);\r\n  }\r\n}\r\n","<button id=\"edit-button\" (click)=\"onEditClick()\">Edit</button>\n<button id=\"delete-button\"  (click)=\"onDeleteClick()\">Delete</button>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { Router } from '@angular/router';\r\nimport { ProductGridButtonsComponent } from '../product-grid-buttons/product-grid-buttons.component';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { combineLatest, Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\nexport class ProductsComponent implements OnInit, OnDestroy {\r\n  columnDefs = [\r\n    {headerName: 'Name', field: 'productName'},\r\n    {headerName: 'Points', field: 'points', comparator: (firstPoints, secondPoints) => this.pointsComparator(firstPoints, secondPoints)},\r\n    {headerName: 'After School', field: 'school', width: 120},\r\n    {headerName: 'Infant', field: 'infant'},\r\n    {headerName: 'Product Limit', field: 'productLimit', width: 120},\r\n    {headerName: 'Type', field: 'type'},\r\n    {headerName: 'Super Type', field: 'superType', width: 120},\r\n    {headerName: 'Type Limit', field: 'typeLimit'},\r\n    {headerName: 'In Shop', field: 'inShop'},\r\n    {headerName: '', field: 'action', filter: false, sortable: false, width: 150, cellRendererFramework: ProductGridButtonsComponent}\r\n  ];\r\n  defaultColDef = {\r\n    filter: true,\r\n    filterParams: {\r\n      suppressAndOrCondition: true\r\n    },\r\n    resizable: true,\r\n    sortable: true,\r\n    width: 100\r\n  };\r\n  private gridApi;\r\n  loading = true;\r\n  products: Product[];\r\n  rowData = [];\r\n  shop: Shop;\r\n  subscription = new Subscription();\r\n  types: Type[];\r\n\r\n  constructor(private dataService: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getShop(),\r\n        this.dataService.getTypes(),\r\n        this.dataService.getProducts()\r\n      ]).subscribe(([shop, types, products]) => {\r\n        this.shop = shop;\r\n        this.types = types;\r\n        this.products = products;\r\n        console.log(this.products);\r\n        this.rowData = this.getFormattedFields();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private getInShopStatus(productToCheck: Product) {\r\n    let inShop = false;\r\n    this.shop.shop.forEach((type: Type) => {\r\n      type.products.forEach((product: Product) => {\r\n        if (product._id === productToCheck._id) {\r\n          inShop = true;\r\n        }\r\n      });\r\n    });\r\n    return inShop;\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridApi.setRowData(this.rowData);\r\n  }\r\n\r\n  private getProductTypeName(productToCheck: Product) {\r\n    let typeName = 'None';\r\n    this.types.forEach((type: Type)  => {\r\n      type.products.forEach((product: Product) => {\r\n        if (product._id === productToCheck._id ) {\r\n          typeName = type.typeName;\r\n        }\r\n      });\r\n    });\r\n    return typeName;\r\n  }\r\n\r\n  private getProductSuperTypeName(productToCheck: Product) {\r\n    let superTypeName = 'None';\r\n    this.types.forEach((type: Type) => {\r\n      type.products.forEach((product: Product) => {\r\n        if (product._id === productToCheck._id) {\r\n          if (type.superTypeId) {\r\n            this.types.forEach((superType: Type) => {\r\n              if (type.superTypeId === superType._id) {\r\n                superTypeName = superType.typeName;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return superTypeName;\r\n  }\r\n\r\n  private getTypeLimitStatus(productToCheck: Product) {\r\n    let hasTypeLimit = false;\r\n    this.types.forEach((type: Type) => {\r\n      type.products.forEach((product: Product) => {\r\n        if (product._id === productToCheck._id) {\r\n          if (type.typeSizeAmount) {\r\n            hasTypeLimit = true;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return hasTypeLimit;\r\n  }\r\n\r\n  private getFormattedFields() {\r\n    const rowData = [];\r\n    this.products.forEach((product: Product) => {\r\n      const rowEntry = {};\r\n      Object.defineProperty(rowEntry, '_id', {value: product._id});\r\n      Object.defineProperty(rowEntry, 'productName', {value: product.productName});\r\n      product.points ?\r\n        Object.defineProperty(rowEntry, 'points', {value: product.points}) :\r\n        Object.defineProperty(rowEntry, 'points', {value: 'None'});\r\n      product.school ?\r\n        Object.defineProperty(rowEntry, 'school', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'school', {value: 'No'});\r\n      product.infant ?\r\n        Object.defineProperty(rowEntry, 'infant', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'infant', {value: 'No'});\r\n      product.prodSizeAmount ?\r\n        Object.defineProperty(rowEntry, 'productLimit', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'productLimit', {value: 'No'});\r\n      Object.defineProperty(rowEntry, 'type', {value: this.getProductTypeName(product)});\r\n      Object.defineProperty(rowEntry, 'superType', {value: this.getProductSuperTypeName(product)});\r\n      this.getTypeLimitStatus(product) ?\r\n        Object.defineProperty(rowEntry, 'typeLimit', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'typeLimit', {value: 'No'});\r\n      this.getInShopStatus(product) ?\r\n        Object.defineProperty(rowEntry, 'inShop', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'inShop', {value: 'No'});\r\n      rowData.push(rowEntry);\r\n    });\r\n    return rowData;\r\n  }\r\n\r\n  onCreateProductClick() {\r\n    this.router.navigate(['/product']);\r\n  }\r\n\r\n  private pointsComparator(firstPoints: any, secondPoints: any) {\r\n    if (isNaN(firstPoints)) {\r\n      firstPoints = 0;\r\n    }\r\n    if (isNaN(secondPoints)) {\r\n      secondPoints = 0;\r\n    }\r\n    return firstPoints > secondPoints ? 1 : -1;\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div id=\"ag-grid-super-container\">\r\n    <mat-card id=\"ag-grid-sub-container\" *ngIf=\"!loading\">\r\n        <span id=\"button-grid-container\">\r\n            <span id=\"products-title\">Products</span>\r\n            <button mat-raised-button (click)=\"onCreateProductClick()\">Create Product</button>\r\n        </span>\r\n        <ag-grid-angular \r\n        style=\"width: 1120px; height: 500px;\" \r\n        class=\"ag-theme-balham\"\r\n        [columnDefs]=\"columnDefs\"\r\n        [defaultColDef]=\"defaultColDef\"\r\n        [suppressCellSelection]=\"true\"\r\n        [pagination]=\"true\"\r\n        [paginationAutoPageSize]=\"true\"\r\n        [rowData]=\"rowData\">\r\n        </ag-grid-angular>\r\n    </mat-card>\r\n</div>\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { ShopType } from 'src/app/models/shop-type.model';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-shop-edit',\r\n  templateUrl: './shop-edit.component.html',\r\n  styleUrls: ['./shop-edit.component.css']\r\n})\r\nexport class ShopEditComponent implements OnInit, OnDestroy {\r\n  availableTypes: ShopType[];\r\n  loading = true;\r\n  shop: Shop;\r\n  private subscription = new Subscription();\r\n  types: Type[];\r\n  typesInShop: ShopType[];\r\n\r\n  constructor(private dataService: DataService, private snackBar: MatSnackBar, private router: Router, private shopService: ShopService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getShop(),\r\n        this.dataService.getTypes()\r\n      ]).subscribe(([shop, types]) => {\r\n    this.initShop(shop, types);\r\n    this.setInShopSubTypes();\r\n    this.setAvailableSuperTypes();\r\n    this.setAvailableSubTypes();\r\n    this.removeProductLessType();\r\n    this.sortTypesByName(this.availableTypes);\r\n    this.sortTypesByName(this.typesInShop);\r\n    this.loading = false;\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  dropType(event: CdkDragDrop<Type[]>) {\r\n    event.previousContainer === event.container ?\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex) :\r\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n    this.sortTypesByName(this.availableTypes);\r\n    this.sortTypesByName(this.typesInShop);\r\n  }\r\n\r\n  private initShop(shop: Shop, types: Type[]) {\r\n    this.availableTypes = [];\r\n    this.shop = null;\r\n    this.types = [];\r\n    this.typesInShop = [];\r\n    const shopClone = cloneDeep(shop);\r\n    const typesClone = cloneDeep(types);\r\n    this.shop = shopClone;\r\n    this.typesInShop = this.shop.shop;\r\n    this.types = typesClone;\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate(['/pantry']);\r\n  }\r\n\r\n  onSaveClick() {\r\n    this.unwrapSubTypes();\r\n    this.shop.shop = this.typesInShop;\r\n    this.shopService.updateShop(this.shop._id, this.shop).subscribe((response: any) => {\r\n      this.showResponseStatus(response.status);\r\n      this.router.navigate([`/pantry`]);\r\n    });\r\n  }\r\n\r\n  private removeProductLessType() {\r\n    this.availableTypes.forEach((availableType: ShopType) => {\r\n      if (!availableType.products.length && !availableType.subTypes) {\r\n        this.availableTypes = this.availableTypes.filter((productLessType: ShopType) => availableType._id !== productLessType._id);\r\n      }\r\n    });\r\n  }\r\n\r\n  private setAvailableSubTypes() {\r\n    this.types.forEach((type: Type) => {\r\n      this.availableTypes.forEach((availableType: ShopType) => {\r\n        if (availableType._id === type.superTypeId) {\r\n          if (!availableType.subTypes) {\r\n            availableType.subTypes = [];\r\n          }\r\n          availableType.subTypes.push(type);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private setAvailableSuperTypes() {\r\n    this.types.forEach((type: Type) => {\r\n      if (!this.typesInShop.some((typeInShop: ShopType) => typeInShop._id === type._id) && !type.superTypeId) {\r\n          this.availableTypes.push(type);\r\n      }\r\n    });\r\n  }\r\n\r\n  private setInShopSubTypes() {\r\n    const subTypesInShop: ShopType[] = [];\r\n    this.typesInShop.forEach((typeInShop: ShopType) => {\r\n      if (typeInShop.superTypeId) {\r\n        subTypesInShop.push(typeInShop);\r\n        this.typesInShop = this.typesInShop.filter((type: ShopType) => type._id !== typeInShop._id);\r\n      }\r\n    });\r\n    this.setInShopSubTypesHelper(subTypesInShop);\r\n  }\r\n\r\n  private setInShopSubTypesHelper(subTypesInShop: ShopType[]) {\r\n    subTypesInShop.forEach((subType: ShopType) => {\r\n      const superType = this.typesInShop.find((typeInShop: Type) => typeInShop._id === subType.superTypeId);\r\n      if (!superType.subTypes) {\r\n        superType.subTypes = [];\r\n      }\r\n      superType.subTypes.push(subType);\r\n    });\r\n  }\r\n\r\n  private showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`Shop successfully updated.`, 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`Shop failed to update.`, 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateShop();\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateProducts();\r\n  }\r\n\r\n  private sortTypesByName(shopTypes: ShopType[]) {\r\n    shopTypes.sort((beforeType: Type, afterType: Type) => {\r\n      return beforeType.typeName > afterType.typeName ? 1 : -1;\r\n    });\r\n    shopTypes.forEach((shopType: ShopType) => {\r\n      if (shopType.subTypes) {\r\n        shopType.subTypes.sort((beforeSubType: Type, afterSubType: Type) => {\r\n          return beforeSubType.typeName > afterSubType.typeName ? 1 : -1;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private unwrapSubTypes() {\r\n    this.typesInShop.forEach((typeInShop: ShopType) => {\r\n      if (typeInShop.subTypes) {\r\n        typeInShop.subTypes.forEach((subType: ShopType) => {\r\n          this.typesInShop.push(subType);\r\n        });\r\n        typeInShop.subTypes = undefined;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\n    <mat-spinner></mat-spinner>\n</div>\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\n    <span id=\"top-buttons\">\n        <span>Shop Edit</span>\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\n        <button mat-raised-button (click)=\"onSaveClick()\">Save and Exit</button>\n    </span>\n    <div id=\"grid-container\">\n        <mat-card class=\"drag-drop-header\" id=\"left-header\">Available Types</mat-card>\n        <mat-card class=\"drag-drop-header\">Types in Shop</mat-card> \n        <cdk-virtual-scroll-viewport class=\"viewport\" itemSize=\"\">\n            <mat-card class=\"type-container\" #availableTypesList=\"cdkDropList\" [cdkDropListData]=\"availableTypes\" [cdkDropListConnectedTo]=\"[typesInShopList]\" (cdkDropListDropped)=\"dropType($event)\" cdkDropList>\n                <mat-card class=\"margin-top\" *ngFor=\"let availableType of availableTypes\" cdkDrag>{{availableType.typeName}}\n                    <ng-container *ngIf=\"availableType.subTypes\">\n                        <span></span>\n                        <mat-card class=\"margin-top\" id=\"available-sub-type-card\" *ngFor=\"let subType of availableType.subTypes\">{{subType.typeName}}</mat-card>\n                    </ng-container>\n                </mat-card>\n            </mat-card>\n        </cdk-virtual-scroll-viewport>    \n        <cdk-virtual-scroll-viewport class=\"viewport\" itemSize=\"\"> \n            <mat-card class=\"type-container\" #typesInShopList=\"cdkDropList\" [cdkDropListData]=\"typesInShop\" [cdkDropListConnectedTo]=\"[availableTypesList]\" (cdkDropListDropped)=\"dropType($event)\" cdkDropList>\n                <mat-card class=\"margin-top\" *ngFor=\"let typeInShop of typesInShop\" cdkDrag>{{typeInShop.typeName}}\n                    <ng-container *ngIf=\"typeInShop.subTypes\">\n                        <span></span>\n                        <mat-card class=\"margin-top\"  *ngFor=\"let subType of typeInShop.subTypes\">{{subType.typeName}}</mat-card>\n                    </ng-container>\n                </mat-card>\n            </mat-card>\n        </cdk-virtual-scroll-viewport>  \n    </div>\n</mat-card>\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { Router } from '@angular/router';\r\nimport { ShopType } from 'src/app/models/shop-type.model';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.css']\r\n})\r\nexport class ShopComponent implements OnInit, OnDestroy {\r\n  currentTypes: ShopType[];\r\n  loading = true;\r\n  shop: Shop;\r\n  shopTypes: ShopType[];\r\n  typesInShop: ShopType[];\r\n  private subscription = new Subscription();\r\n\r\n  constructor(private dataService: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.dataService.getShop().subscribe((shop: Shop) => {\r\n        this.loading = true;\r\n        this.initShop(shop);\r\n        this.setSubTypes();\r\n        this.sortShop();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  initShop(shop: Shop) {\r\n    this.currentTypes = [];\r\n    this.typesInShop = [];\r\n    this.shopTypes = [];\r\n    const shopClone = cloneDeep(shop);\r\n    this.currentTypes = shopClone.shop;\r\n  }\r\n\r\n  onEditClick() {\r\n    this.router.navigate(['/shop']);\r\n  }\r\n\r\n  private setSubTypes() {\r\n    this.currentTypes.forEach((currentType: ShopType) => {\r\n      if (!currentType.superTypeId) {\r\n        this.shopTypes.push(currentType);\r\n      }\r\n    });\r\n    this.shopTypes.forEach((shopType: ShopType) => {\r\n      this.currentTypes.forEach((currentType: ShopType) => {\r\n        if (currentType.superTypeId === shopType._id) {\r\n          if (!shopType.subTypes) {\r\n            shopType.subTypes = [];\r\n          }\r\n          shopType.subTypes.push(currentType);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private sortShop() {\r\n    this.shopTypes.forEach((shopType: ShopType) => {\r\n      shopType.products.sort((beforeProduct: Product, afterProduct: Product) => {\r\n        return beforeProduct.productName > afterProduct.productName ? 1 : -1;\r\n      });\r\n      if (shopType.subTypes) {\r\n        shopType.subTypes.forEach((subType: Type) => {\r\n          subType.products.sort((beforeSubProduct: Product, afterSubProduct: Product) => {\r\n            return beforeSubProduct.productName > afterSubProduct.productName ? 1 : -1;\r\n          });\r\n        });\r\n        shopType.subTypes.sort((beforeSubType: Type, afterSubType: Type) => {\r\n          return beforeSubType.typeName > afterSubType.typeName ? 1 : -1;\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<mat-card id=\"top-container\" >\r\n    <span id=\"top-button\" class=\"margin-bottom\">\r\n        <span id=\"shop-title\">Current Shop</span>\r\n        <button mat-raised-button (click)=\"onEditClick()\">Edit Shop</button>\r\n    </span>\r\n    <mat-card id=\"shop-container\" class=\"margin-bottom\">\r\n        <mat-expansion-panel class=\"type-card margin-bottom\" *ngFor=\"let type of shopTypes\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>{{type.typeName}}</mat-panel-title>\r\n                <mat-panel-description>\r\n                    Click Here\r\n                </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <mat-card class=\"product-card margin-bottom\" *ngFor=\"let product of type.products\">{{product.productName}}</mat-card>\r\n            <mat-card class=\"sub-type-card margin-bottom\" *ngFor=\"let subType of type.subTypes\">\r\n                <div class=\"margin-bottom\">{{subType.typeName}}</div>\r\n                <mat-card class=\"sub-product-card margin-bottom\" *ngFor=\"let subProduct of subType.products\">{{subProduct.productName}}</mat-card>\r\n            </mat-card>\r\n        </mat-expansion-panel>\r\n    </mat-card>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { TypeService } from 'src/app/services/type.service';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { ShopType } from 'src/app/models/shop-type.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Subscription, forkJoin, from as ObservableFrom, combineLatest } from 'rxjs';\r\nimport { concatMap } from 'rxjs/operators';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sub-type-edit',\r\n  templateUrl: './sub-type-edit.component.html',\r\n  styleUrls: ['./sub-type-edit.component.css']\r\n})\r\nexport class SubTypeEditComponent implements OnInit, OnDestroy {\r\n  loading = true;\r\n  possibleSubs: ShopType[];\r\n  possibleSupers: ShopType[];\r\n  shop: Shop;\r\n  private subscription = new Subscription();\r\n  types: Type[];\r\n\r\n  constructor(private dataService: DataService, private router: Router, private snackBar: MatSnackBar,\r\n              private typeService: TypeService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getShop(),\r\n        this.dataService.getTypes(),\r\n      ]).subscribe(([shop, types]) => {\r\n          this.shop = shop;\r\n          this.initComponentVariables(shop);\r\n          this.types = types;\r\n          this.initDragDropArrays();\r\n          this.initDragDropValues();\r\n          this.sortTypesByName(this.possibleSubs);\r\n          this.sortTypesByName(this.possibleSupers);\r\n          this.possibleSupers.forEach((superType: ShopType) => {\r\n            this.sortTypesByName(superType.subTypes);\r\n          });\r\n          this.loading = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  dropIntoSubs(event: CdkDragDrop<ShopType[]>) {\r\n    const superTypeToAdd: ShopType = event.previousContainer.data[event.previousIndex];\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n      this.dropIntoSubsSetArrayValues(superTypeToAdd);\r\n    }\r\n    this.sortTypesByName(this.possibleSubs);\r\n    this.sortTypesByName(this.possibleSupers);\r\n  }\r\n\r\n  private dropIntoSubsSetArrayValues(superTypeToAdd: ShopType) {\r\n    this.possibleSupers.push(superTypeToAdd);\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      if (!superType.subTypes.length  && !this.possibleSubs.some((subType: ShopType) => subType._id === superType._id)\r\n       && superType.products.length) {\r\n        this.possibleSubs.push(superType);\r\n      }\r\n    });\r\n  }\r\n\r\n  dropIntoSupers(event: CdkDragDrop<ShopType[]>, newSuperType: ShopType) {\r\n    const typeToMove: ShopType = event.previousContainer.data[event.previousIndex];\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else if (typeToMove._id !== newSuperType._id  &&\r\n      (this.getInShopStatus(typeToMove) && this.getInShopStatus(newSuperType) ||\r\n      (!this.getInShopStatus(typeToMove) && !this.getInShopStatus(newSuperType)))) {\r\n        transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n        this.dropIntoSupersSetArrayValues(typeToMove);\r\n    } else if (typeToMove._id === newSuperType._id) {\r\n        this.snackBar.open('Cannot put a type within itself.', `Dismiss`, {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open('Both the super-type and sub-type must currently be in the shop.', `Dismiss`, {\r\n        duration: 4000,\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.sortTypesByName(this.possibleSupers);\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      this.sortTypesByName(superType.subTypes);\r\n    });\r\n  }\r\n\r\n  private dropIntoSupersSetArrayValues(typeToMove: ShopType) {\r\n    this.possibleSupers = this.possibleSupers.filter((superTypeToRemove: ShopType) => superTypeToRemove._id !== typeToMove._id);\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      if (superType.subTypes.length || !superType.products.length) {\r\n        this.possibleSubs = this.possibleSubs.filter((subType: ShopType) => subType._id !== superType._id);\r\n      }\r\n      if (!superType.subTypes.length  && !this.possibleSubs.some((subType: ShopType) => subType._id === superType._id)\r\n      && superType.products.length) {\r\n        this.possibleSubs.push(superType);\r\n      }\r\n    });\r\n  }\r\n\r\n  getInShopStatus(typeToCheck: Type) {\r\n    let inShop = false;\r\n    this.shop.shop.forEach((type: Type) => {\r\n      if (type._id === typeToCheck._id) {\r\n        inShop = true;\r\n      }\r\n    });\r\n    return inShop;\r\n  }\r\n\r\n  initComponentVariables(shop: Shop) {\r\n    this.possibleSubs = [];\r\n    this.possibleSupers = [];\r\n    const shopClone = cloneDeep(shop);\r\n    this.shop = shopClone;\r\n  }\r\n\r\n  private initDragDropArrays() {\r\n    this.types.forEach(type => {\r\n      const emptyArray: ShopType[] = [];\r\n      this.possibleSubs.push({_id: type._id, typeName: type.typeName, subTypes: emptyArray, products: type.products});\r\n      this.possibleSupers.push({_id: type._id, typeName: type.typeName, subTypes: emptyArray, products: type.products});\r\n    });\r\n  }\r\n\r\n  private initDragDropValues() {\r\n    this.types.forEach((type: Type) => {\r\n      if (!type.products.length) {\r\n        this.possibleSubs = this.possibleSubs.filter((emptyType: ShopType) => type._id !== emptyType._id);\r\n      }\r\n    });\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      this.types.forEach((type: Type) => {\r\n        if (type.superTypeId === superType._id) {\r\n          const newSubType = this.possibleSubs.find((subType: ShopType) => subType._id === type._id);\r\n          superType.subTypes.push(newSubType);\r\n          this.possibleSubs = this.possibleSubs.filter((subType: ShopType) => subType._id !== newSubType._id);\r\n          this.possibleSubs = this.possibleSubs.filter((subType: ShopType) => subType._id !== superType._id);\r\n          this.possibleSupers = this.possibleSupers.filter((superTypeRemove: ShopType) => superTypeRemove._id !== newSubType._id);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private showResponseStatus(status: number) {\r\n    if (status === 200) {\r\n      this.snackBar.open('Types updated successfully', 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open('Types update failed.', 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateShop();\r\n    this.dataService.updateProducts();\r\n  }\r\n\r\n  sortTypesByName(dragDropArray: ShopType[]) {\r\n    dragDropArray.sort((before, after) => before.typeName.trim().toLowerCase() > after.typeName.trim().toLowerCase() ? 1 : -1);\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  onSaveClick() {\r\n    this.loading = true;\r\n    if (this.getTypeIdsToUpdate().length) {\r\n      forkJoin([\r\n        this.typeService.removeSuperTypeIdMany(this.getTypeIdsToRemove()),\r\n        ObservableFrom(this.getTypeIdsToUpdate()).pipe(\r\n          concatMap((update: {\r\n            superTypeId: string,\r\n            updateIds: string[]\r\n          }) => this.typeService.updateSuperTypeIdMany(update.superTypeId, update.updateIds)))\r\n        ]).subscribe(([remove, update]) => {\r\n          let response: number;\r\n          const typedRemove: any = remove;\r\n          const typedUpdate: any = update;\r\n          typedRemove.status === 200 && typedUpdate.status === 200 ? response = 200 : response = 400;\r\n          this.showResponseStatus(response);\r\n          this.router.navigate([`/pantry`]);\r\n\r\n        });\r\n    } else {\r\n      this.typeService.removeSuperTypeIdMany(this.getTypeIdsToRemove()).subscribe((response: any) => {\r\n        this.showResponseStatus(response.status);\r\n        this.router.navigate([`/pantry`]);\r\n      });\r\n    }\r\n  }\r\n\r\n  private getTypeIdsToRemove(): string[] {\r\n    const typeIdsToRemove: string[] = [];\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      typeIdsToRemove.push(superType._id);\r\n    });\r\n    return typeIdsToRemove;\r\n  }\r\n\r\n  private getTypeIdsToUpdate(): any[] {\r\n    const updateObjects: {\r\n      superTypeId: string,\r\n      updateIds: string[]\r\n    }[] = [];\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      if (superType.subTypes.length) {\r\n        const idsToUpdate: string[] = [];\r\n        superType.subTypes.forEach((subType: ShopType) => {\r\n          idsToUpdate.push(subType._id);\r\n        });\r\n        updateObjects.push({superTypeId: superType._id, updateIds: idsToUpdate});\r\n      }\r\n    });\r\n    return updateObjects;\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span>Set Sub-Types</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n        <button mat-raised-button (click)=\"onSaveClick()\">Save and Exit</button>\r\n    </span>\r\n    <div id=\"grid-container\" cdkDropListGroup>\r\n        <mat-card class=\"drag-drop-header\" id=\"left-header\">Available Sub-Types</mat-card>\r\n        <mat-card class=\"drag-drop-header\">Available Super-Types</mat-card> \r\n        <cdk-virtual-scroll-viewport id=\"sub-type-viewport\" itemSize=\"\">\r\n            <mat-card id=\"sub-type-container\" [cdkDropListData]=\"possibleSubs\" (cdkDropListDropped)=\"dropIntoSubs($event)\" cdkDropList>\r\n                <mat-card class=\"sub-type-card type-name\" *ngFor=\"let subType of possibleSubs\" cdkDrag>{{subType.typeName}}<div class=\"in-shop\" *ngIf=\"getInShopStatus(subType)\">In Shop</div></mat-card>\r\n            </mat-card>\r\n        </cdk-virtual-scroll-viewport>\r\n        <cdk-virtual-scroll-viewport id=\"super-type-viewport\" itemSize=\"\">  \r\n            <mat-card id=\"super-type-container\">\r\n                <ng-container *ngFor=\"let superType of possibleSupers\">\r\n                    <mat-card class=\"super-type-card-container\" [cdkDropListData]=\"superType.subTypes\" (cdkDropListDropped)=\"dropIntoSupers($event, superType)\" cdkDropList>\r\n                        <span class=\"type-name\">{{superType.typeName}}<div class=\"in-shop\" *ngIf=\"getInShopStatus(superType)\">In Shop</div></span>\r\n                        <mat-card class=\"super-type-card type-name\" *ngFor=\"let subType of superType.subTypes\" cdkDrag>\r\n                            {{subType.typeName}}\r\n                        </mat-card>\r\n                    </mat-card>\r\n                </ng-container>\r\n            </mat-card>\r\n        </cdk-virtual-scroll-viewport>\r\n    </div>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { minMaxValidator } from '../product-add/product-add.component';\r\nimport { Type } from '../../models/type.model';\r\nimport { TypeService } from 'src/app/services/type.service';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { combineLatest, Subscription } from 'rxjs';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-type-add',\r\n  templateUrl: './type-add.component.html',\r\n  styleUrls: ['./type-add.component.css']\r\n})\r\nexport class TypeAddComponent implements OnInit, OnDestroy {\r\n  availableProducts: Product[] = [];\r\n  availableSubTypes: Type[] = [];\r\n  currentTypeName: string;\r\n  deletedOrMoved = false;\r\n  loading = true;\r\n  newSubTypes: Type[] = [];\r\n  products: Product[];\r\n  productsInType: Product[] = [];\r\n  requiredError = 'This field is required.';\r\n  subscription = new Subscription();\r\n  superTypeOptions: Type[] = [];\r\n  type = new Type();\r\n  typeForm = new FormGroup({\r\n    typeName: new FormControl('', Validators.required),\r\n    superType: new FormControl('')\r\n  });\r\n  types: Type[];\r\n  typeSizeAmount: FormArray;\r\n\r\n  constructor(protected dataService: DataService, protected formBuilder: FormBuilder, protected snackBar: MatSnackBar,\r\n              protected typeService: TypeService, protected router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getProducts(),\r\n        this.dataService.getTypes()\r\n      ]).subscribe(([products, types]) => {\r\n        this.products = products;\r\n        this.types = types;\r\n        this.initAvailableProducts();\r\n        this.loading = !this.loading;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  addSizeAmount() {\r\n    this.typeSizeAmount.push(this.formBuilder.group({\r\n      minFamSize: ['', [Validators.required]],\r\n      maxFamSize: ['', Validators.required],\r\n      maxAmount: ['', Validators.required]\r\n    }, { validator: minMaxValidator }\r\n    ));\r\n  }\r\n\r\n  deleteSizeAmount(index: number) {\r\n    this.deletedOrMoved = true;\r\n    this.typeSizeAmount.removeAt(index);\r\n    if (!this.typeSizeAmount.length) {\r\n      this.typeForm.removeControl('typeSizeAmount');\r\n    }\r\n  }\r\n\r\n  dropProduct(event: CdkDragDrop<Product[]>) {\r\n    this.deletedOrMoved = true;\r\n    event.previousContainer === event.container ?\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex) :\r\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n    this.sortProductsByName(this.availableProducts);\r\n    this.sortProductsByName(this.productsInType);\r\n  }\r\n\r\n  initSizeAmount() {\r\n    this.typeSizeAmount = new FormArray([]);\r\n    this.addSizeAmount();\r\n    this.typeForm.addControl('typeSizeAmount', this.typeSizeAmount);\r\n  }\r\n\r\n  onChangeTypeName() {\r\n    this.currentTypeName = this.typeForm.get('typeName').value;\r\n  }\r\n\r\n  onAddClick() {\r\n    if (this.typeForm.valid) {\r\n      this.setTypeValues();\r\n      this.typeService.addType(this.type).subscribe((response: any) => this.showResponseStatus(response.status));\r\n    }\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  initAvailableProducts() {\r\n    const unavailableProducts: Product[] = [];\r\n    this.types.forEach(type => type.products.forEach(product => unavailableProducts.push(product)));\r\n    this.products.forEach(product => {\r\n      if (!unavailableProducts.some(unavailable => unavailable._id === product._id)) {\r\n        this.availableProducts.push(product);\r\n      }\r\n    });\r\n    this.sortProductsByName(this.availableProducts);\r\n  }\r\n\r\n  setTypeValues() {\r\n    this.type.typeName = this.typeForm.get('typeName').value;\r\n    if (this.typeForm.get('typeSizeAmount') && this.typeSizeAmount.length) {\r\n      this.type.typeSizeAmount = this.typeForm.get('typeSizeAmount').value;\r\n    }\r\n    this.productsInType.length ?\r\n      this.type.products = this.productsInType :\r\n      this.type.products = [];\r\n    if (this.typeForm.get('superType').value) {\r\n      this.type.superTypeId = this.typeForm.get('superType').value;\r\n    }\r\n  }\r\n\r\n  showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`${this.type.typeName} successfully updated.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`${this.type.typeName} failed to update.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateProducts();\r\n    this.dataService.updateShop();\r\n  }\r\n\r\n  sortProductsByName(dragDropCard: Product[]) {\r\n    dragDropCard.sort((before, after) => before.productName.trim().toLowerCase() > after.productName.trim().toLowerCase() ? 1 : -1);\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span *ngIf=\"!type.typeName\" class=\"type-title\">Type Create</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n        <button mat-raised-button (click)=\"onAddClick()\" [disabled]=\"!typeForm.valid\">Save Type and Exit</button>        \r\n    </span>\r\n    <div id=\"grid-container\">\r\n        <mat-card class=\"left-form\" [formGroup]=\"typeForm\">\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Type Name</mat-label>\r\n                <input matInput formControlName=\"typeName\"  (change)=\"onChangeTypeName()\">\r\n                <mat-error *ngIf=\"typeForm.get('typeName').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>   \r\n        </mat-card>\r\n        <mat-card id=\"right-form\" [formGroup]=\"typeForm\">\r\n            <mat-card id=\"init-size-amount\" *ngIf=\"!typeForm.get('typeSizeAmount')\">\r\n                <span>This type does not currently have family size limits.</span>\r\n                <button mat-raised-button (click)=\"initSizeAmount()\">Create Limits</button> \r\n            </mat-card>\r\n            <span id=\"add-limit\" *ngIf=\"typeForm.get('typeSizeAmount')\">\r\n                <span>Type Limits per Range of Family Size:</span>\r\n                <button mat-raised-button (click)=\"addSizeAmount()\">Add Another Limit</button> \r\n            </span>\r\n            <cdk-virtual-scroll-viewport id=\"limit-viewport\"  itemSize=\"\" *ngIf=\"typeForm.get('typeSizeAmount')\">\r\n                <mat-card class=\"type-size-amount-card\" *ngFor=\"let element of typeForm.get('typeSizeAmount')['controls']; let i = index\" formArrayName=\"typeSizeAmount\">\r\n                    <ng-container [formGroupName]=\"i\">\r\n                        <div class=\"type-size-amount-form\"> \r\n                            <mat-form-field >\r\n                            <mat-label>Minimum Family Size</mat-label>\r\n                            <mat-select matInput formControlName=\"minFamSize\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"typeForm.get('typeSizeAmount')['controls'][i].get('minFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                            <mat-label>Maximum Family Size</mat-label>\r\n                            <mat-select matInput formControlName=\"maxFamSize\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"typeForm.get('typeSizeAmount')['controls'][i].get('maxFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>        \r\n                            <mat-form-field>\r\n                            <mat-label>Type Limit</mat-label>\r\n                            <mat-select matInput formControlName=\"maxAmount\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"typeForm.get('typeSizeAmount')['controls'][i].get('maxAmount').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <span>\r\n                                <button mat-raised-button (click)=\"deleteSizeAmount(i)\">Delete Limit</button>\r\n                            </span>       \r\n                        </div>\r\n                        <mat-error *ngIf=\"typeForm.get('typeSizeAmount')['controls'][i].hasError('minMax')\">Minimum size must be equal to or smaller than maximum size.</mat-error>     \r\n                    </ng-container>      \r\n                </mat-card>\r\n            </cdk-virtual-scroll-viewport>          \r\n        </mat-card>\r\n    </div>\r\n    <mat-card id=\"add-product-container\">\r\n        <mat-card id=\"available-container\">Available Products\r\n            <cdk-virtual-scroll-viewport id=\"available-products-viewport\" itemSize=\"\" #productList=\"cdkDropList\" [cdkDropListData]=\"availableProducts\" [cdkDropListConnectedTo]=\"[productTypeList]\" (cdkDropListDropped)=\"dropProduct($event)\" cdkDropList>\r\n                <mat-card class=\"available-card\" *ngFor=\"let product of availableProducts\" cdkDrag>{{product.productName}}</mat-card>\r\n            </cdk-virtual-scroll-viewport>\r\n        </mat-card>\r\n        <mat-card id=\"in-type-container\">Products in this Type\r\n            <cdk-virtual-scroll-viewport id=\"in-type-products-viewport\" itemSize=\"\" #productTypeList=\"cdkDropList\" [cdkDropListData]=\"productsInType\" [cdkDropListConnectedTo]=\"[productList]\" (cdkDropListDropped)=\"dropProduct($event)\" cdkDropList>\r\n                <mat-card class=\"in-type-card\" *ngFor=\"let product of productsInType\" cdkDrag>{{product.productName}}</mat-card>\r\n            </cdk-virtual-scroll-viewport>  \r\n        </mat-card>\r\n    </mat-card>\r\n</mat-card>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { TypeService } from 'src/app/services/type.service';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-type-delete-modal',\r\n  templateUrl: './type-delete-modal.component.html',\r\n  styleUrls: ['./type-delete-modal.component.css']\r\n})\r\nexport class TypeDeleteModalComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<TypeDeleteModalComponent>, @Inject (MAT_DIALOG_DATA) public type: Type,\r\n              private dataService: DataService, private router: Router, private snackBar: MatSnackBar,\r\n              private typeService: TypeService) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  private deleteType() {\r\n    this.typeService.deleteType(this.type._id).subscribe((response: any) => this.showResponseStatus(response.status));\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  onProceedClick() {\r\n    this.deleteType();\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  private showResponseStatus(status: number) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`${this.type.typeName} successfully deleted.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`${this.type.typeName} failed to delete.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateShop();\r\n    this.dataService.updateProducts();\r\n  }\r\n}\r\n","<mat-card>\n    <p>This action will permanently delete {{type.typeName}}.  Permanently deleting a type removes it\n    from the shop and unassigns&mdash;but does not delete&mdash;any products currently assigned to it.</p>\n</mat-card>\n<p id=\"proceed-prompt\">Do you wish to proceed?</p>\n<span>\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\n    <button mat-raised-button (click)=\"onProceedClick()\">Proceed</button>\n</span>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { TypeAddComponent } from '../type-add/type-add.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { TypeService } from 'src/app/services/type.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { minMaxValidator } from '../product-add/product-add.component';\r\nimport { combineLatest } from 'rxjs';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-type-edit',\r\n  templateUrl: '../type-edit/type-edit.component.html',\r\n  styleUrls: ['../type-add/type-add.component.css']\r\n})\r\nexport class TypeEditComponent extends TypeAddComponent implements OnInit, OnDestroy {\r\n  inShop = false;\r\n  shop: Shop;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, protected dataService: DataService, protected formBuilder: FormBuilder,\r\n              protected typeService: TypeService, protected snackBar: MatSnackBar, protected router: Router) {\r\n      super(dataService, formBuilder, snackBar, typeService, router);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getShop(),\r\n        this.dataService.getTypes(),\r\n        this.activatedRoute.params.pipe(\r\n          switchMap(params => this.dataService.getTypeById(params.id)),\r\n          take(1)\r\n        ),\r\n        this.dataService.getProducts(),\r\n      ]).subscribe(([shop, types, type, products]) => {\r\n          this.rerouteOnEmptyType(type);\r\n          this.shop = shop;\r\n          this.types = types;\r\n          this.type = type;\r\n          this.products = products;\r\n          this.typeForm = new FormGroup({\r\n            typeName: new FormControl(this.type.typeName, Validators.required),\r\n            superType: new FormControl(this.type.superTypeId)\r\n          });\r\n          this.initAvailableProducts();\r\n          this.initProductsInType();\r\n          this.setTypeSizeAmountForm();\r\n          this.setInShop();\r\n          this.loading = !this.loading;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private initProductsInType() {\r\n    this.productsInType = this.type.products;\r\n  }\r\n\r\n  onUpdateClick() {\r\n    if (this.typeForm.valid) {\r\n      this.setTypeValues();\r\n      this.typeService.updateType(this.type._id, this.type).subscribe((response: any) => {\r\n        this.showResponseStatus(response.status);\r\n        this.dataService.updateTypes();\r\n        this.dataService.updateShop();\r\n        this.dataService.updateProducts();\r\n      });\r\n    }\r\n    this.router.navigate(['/pantry']);\r\n  }\r\n\r\n  rerouteOnEmptyType(type: any) {\r\n    if (type === undefined || Object.entries(type).length === 0 && type.constructor === Object) {\r\n      this.snackBar.open('Type not found. Please try again.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      this.router.navigate([`/pantry`]);\r\n    }\r\n  }\r\n\r\n  private setInShop() {\r\n    this.shop.shop.forEach((type: Type) => {\r\n      if (type._id === this.type._id) {\r\n        this.inShop = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  private setTypeSizeAmountForm() {\r\n    if (this.type.typeSizeAmount) {\r\n      this.typeSizeAmount = new FormArray([]);\r\n      this.type.typeSizeAmount.forEach(element => {\r\n        this.typeSizeAmount.push(this.formBuilder.group({\r\n          minFamSize: [element.minFamSize, Validators.required],\r\n          maxFamSize: [element.maxFamSize, Validators.required],\r\n          maxAmount: [element.maxAmount, Validators.required]\r\n        },\r\n        { validator: minMaxValidator }\r\n        ));\r\n        this.typeForm.addControl('typeSizeAmount', this.typeSizeAmount);\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span class=\"type-title\">Type Edit</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>    \r\n        <button mat-raised-button (click)=\"onUpdateClick()\" [disabled]=\"(typeForm.pristine && !deletedOrMoved) || !typeForm.valid\">Save Update and Exit</button> \r\n    </span>\r\n    <div id=\"grid-container\">\r\n        <mat-card class=\"left-form\" [ngClass]=\"{'in-shop-left-form': inShop}\" [formGroup]=\"typeForm\">\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Type Name</mat-label>\r\n                <input matInput formControlName=\"typeName\"  (change)=\"onChangeTypeName()\">\r\n                <mat-error *ngIf=\"typeForm.get('typeName').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div id=\"shop\" *ngIf=\"inShop\">Currently in the Shop</div>    \r\n        </mat-card>\r\n        <mat-card id=\"right-form\" [formGroup]=\"typeForm\">\r\n            <mat-card id=\"init-size-amount\" *ngIf=\"!typeForm.get('typeSizeAmount')\">\r\n                <span>This type does not currently have family size limits.</span>\r\n                <button mat-raised-button (click)=\"initSizeAmount()\">Create Limits</button> \r\n            </mat-card>\r\n            <span id=\"add-limit\" *ngIf=\"typeForm.get('typeSizeAmount')\">\r\n                <span>Type Limits per Range of Family Size:</span>\r\n                <button mat-raised-button (click)=\"addSizeAmount()\">Add Another Limit</button> \r\n            </span>\r\n            <cdk-virtual-scroll-viewport id=\"limit-viewport\"  itemSize=\"\" *ngIf=\"typeForm.get('typeSizeAmount')\">\r\n                <mat-card class=\"type-size-amount-card\" *ngFor=\"let element of typeForm.get('typeSizeAmount')['controls']; let i = index\" formArrayName=\"typeSizeAmount\">\r\n                    <ng-container [formGroupName]=\"i\">\r\n                        <div class=\"type-size-amount-form\"> \r\n                            <mat-form-field >\r\n                            <mat-label>Minimum Family Size</mat-label>\r\n                            <mat-select matInput formControlName=\"minFamSize\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"typeForm.get('typeSizeAmount')['controls'][i].get('minFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                            <mat-label>Maximum Family Size</mat-label>\r\n                            <mat-select matInput formControlName=\"maxFamSize\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"typeForm.get('typeSizeAmount')['controls'][i].get('maxFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>        \r\n                            <mat-form-field>\r\n                            <mat-label>Type Limit</mat-label>\r\n                            <mat-select matInput formControlName=\"maxAmount\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"typeForm.get('typeSizeAmount')['controls'][i].get('maxAmount').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <span>\r\n                                <button mat-raised-button (click)=\"deleteSizeAmount(i)\">Delete Limit</button>\r\n                            </span>       \r\n                        </div>\r\n                        <mat-error *ngIf=\"typeForm.get('typeSizeAmount')['controls'][i].hasError('minMax')\">Minimum size must be equal to or smaller than maximum size.</mat-error>     \r\n                    </ng-container>      \r\n                </mat-card>\r\n            </cdk-virtual-scroll-viewport>          \r\n        </mat-card>\r\n    </div>\r\n    <mat-card id=\"add-product-container\">\r\n        <mat-card id=\"available-container\">Available Products\r\n            <cdk-virtual-scroll-viewport id=\"available-products-viewport\" itemSize=\"\" #productList=\"cdkDropList\" [cdkDropListData]=\"availableProducts\" [cdkDropListConnectedTo]=\"[productTypeList]\" (cdkDropListDropped)=\"dropProduct($event)\" cdkDropList>\r\n                <mat-card class=\"available-card\" *ngFor=\"let product of availableProducts\" cdkDrag>{{product.productName}}</mat-card>\r\n            </cdk-virtual-scroll-viewport>\r\n        </mat-card>\r\n        <mat-card id=\"in-type-container\">Products in this Type\r\n            <cdk-virtual-scroll-viewport id=\"in-type-products-viewport\" itemSize=\"\" #productTypeList=\"cdkDropList\" [cdkDropListData]=\"productsInType\" [cdkDropListConnectedTo]=\"[productList]\" (cdkDropListDropped)=\"dropProduct($event)\" cdkDropList>\r\n                <mat-card class=\"in-type-card\" *ngFor=\"let product of productsInType\" cdkDrag>{{product.productName}}</mat-card>\r\n            </cdk-virtual-scroll-viewport>  \r\n        </mat-card>\r\n    </mat-card>\r\n</mat-card>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TypeDeleteModalComponent } from '../type-delete-modal/type-delete-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-type-grid-buttons',\r\n  templateUrl: './type-grid-buttons.component.html',\r\n  styleUrls: ['./type-grid-buttons.component.css']\r\n})\r\nexport class TypeGridButtonsComponent implements OnInit {\r\n  data: any;\r\n  params: any;\r\n\r\n  constructor(private dialog: MatDialog, private router: Router) { }\r\n\r\n  agInit(params) {\r\n    this.data =  params.data;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onDeleteClick() {\r\n    this.dialog.open(TypeDeleteModalComponent, {\r\n      data: this.data,\r\n      disableClose: true,\r\n      panelClass: ['delete-dialog-container'],\r\n      width: '34rem'\r\n    });\r\n  }\r\n\r\n  onEditClick() {\r\n    this.router.navigate(['/type', this.data._id]);\r\n  }\r\n}\r\n","<button id=\"edit-button\" (click)=\"onEditClick()\">Edit</button>\n<button id=\"delete-button\" (click)=\"onDeleteClick()\">Delete</button>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { TypeGridButtonsComponent } from '../type-grid-buttons/type-grid-buttons.component';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { combineLatest, Subscription } from 'rxjs';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-types',\r\n  templateUrl: './types.component.html',\r\n  styleUrls: ['./types.component.css']\r\n})\r\nexport class TypesComponent implements OnInit, OnDestroy {\r\n  columnDefs = [\r\n    {headerName: 'Type Name', field: 'typeName'},\r\n    {headerName: 'Product Count', field: 'productCount'},\r\n    {headerName: 'Type Limit', field: 'typeLimit'},\r\n    {headerName: 'Super Type', field: 'superType'},\r\n    {headerName: 'In Shop', field: 'inShop'},\r\n    {headerName: '', field: 'action', filter: false, sortable: false, width: 150, cellRendererFramework: TypeGridButtonsComponent}\r\n  ];\r\n  defaultColDef = {\r\n    filter: true,\r\n    filterParams: {\r\n      suppressAndOrCondition: true\r\n    },\r\n    resizable: true,\r\n    sortable: true,\r\n    width: 120\r\n  };\r\n  private gridApi;\r\n  loading = true;\r\n  rowData = [];\r\n  shop: Shop;\r\n  subscription = new Subscription();\r\n  types: Type[];\r\n\r\n  constructor(private dataService: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n      this.dataService.getShop(),\r\n      this.dataService.getTypes()\r\n      ]).subscribe(([shop, types]) => {\r\n        this.shop = shop;\r\n        this.types = types;\r\n        this.rowData = this.getFormattedFields();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridApi.setRowData(this.rowData);\r\n  }\r\n\r\n  private getInShopStatus(typeToCheck: Type) {\r\n    let inShop = false;\r\n    this.shop.shop.forEach((type: Type) => {\r\n      if (type._id === typeToCheck._id) {\r\n        inShop = true;\r\n      }\r\n    });\r\n    return inShop;\r\n  }\r\n\r\n  private getSuperTypeName(typeToCheck: Type) {\r\n    let superTypeName = 'None';\r\n    this.types.forEach((type: Type) => {\r\n      if (type._id === typeToCheck.superTypeId) {\r\n        superTypeName = type.typeName;\r\n      }\r\n    });\r\n    return superTypeName;\r\n  }\r\n\r\n  private getFormattedFields() {\r\n    const rowData = [];\r\n    this.types.forEach((type: Type) => {\r\n      const rowEntry = {};\r\n      Object.defineProperty(rowEntry, '_id', {value: type._id});\r\n      Object.defineProperty(rowEntry, 'typeName', {value: type.typeName});\r\n      type.products ?\r\n        Object.defineProperty(rowEntry, 'productCount', {value: type.products.length}) :\r\n        Object.defineProperty(rowEntry, 'productCount', {value: 0});\r\n      type.typeSizeAmount ?\r\n        Object.defineProperty(rowEntry, 'typeLimit', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'typeLimit', {value: 'No'});\r\n      Object.defineProperty(rowEntry, 'superType', {value: this.getSuperTypeName(type)});\r\n      this.getInShopStatus(type) ?\r\n        Object.defineProperty(rowEntry, 'inShop', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'inShop', {value: 'No'});\r\n      rowData.push(rowEntry);\r\n    });\r\n    return rowData;\r\n  }\r\n\r\n  onCreateTypeClick() {\r\n    this.router.navigate(['/type']);\r\n  }\r\n\r\n  onRowClicked() {\r\n    this.router.navigate(['/product']);\r\n  }\r\n\r\n  onSubTypesClick() {\r\n    this.router.navigate(['/sub-types']);\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div id=\"ag-grid-super-container\">\r\n    <mat-card id=\"ag-grid-sub-container\" *ngIf=\"!loading\">\r\n        <span id=\"button-grid-container\">\r\n            <span id=\"types-title\">Types</span>\r\n            <button mat-raised-button (click)=\"onSubTypesClick()\">Set Sub-Types</button>\r\n            <button mat-raised-button (click)=\"onCreateTypeClick()\">Create Type</button>\r\n        </span>\r\n        <ag-grid-angular \r\n        style=\"width: 760px; height: 500px;\" \r\n        class=\"ag-theme-balham\"\r\n        [columnDefs]=\"columnDefs\"\r\n        [defaultColDef]=\"defaultColDef\"\r\n        [suppressCellSelection]=\"true\"\r\n        [pagination]=\"true\"\r\n        [paginationAutoPageSize]=\"true\"\r\n        [rowData]=\"rowData\"\r\n        (gridReady)=\"onGridReady($event)\"\r\n        >\r\n        </ag-grid-angular>\r\n    </mat-card>\r\n</div>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean|UrlTree> | boolean {\r\n    return this.authService.isAuthenticated.pipe(\r\n      tap(loggedIn => {\r\n        if (!loggedIn) {\r\n          this.authService.login(state.url);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Family } from './family.model';\r\nimport { CartItemsByType } from './cart-items-by-type.model';\r\n\r\nexport class Order {\r\n    // tslint:disable-next-line:variable-name\r\n    _id: string;\r\n    family: Family;\r\n    cart: CartItemsByType[];\r\n    pickUpDate: string;\r\n    received: boolean;\r\n}\r\n","export class Product {\r\n    // tslint:disable-next-line:variable-name\r\n    _id: string;\r\n    productName: string;\r\n    prodSizeAmount?: {\r\n        minFamSize: number;\r\n        maxFamSize: number;\r\n        maxAmount: number;\r\n    } [];\r\n    points?: number;\r\n    school?: boolean;\r\n    infant?: boolean;\r\n}\r\n","import { Product } from './product.model';\r\n\r\nexport class Type {\r\n    // tslint:disable-next-line:variable-name\r\n    _id: string;\r\n    typeName: string;\r\n    typeSizeAmount?: {\r\n        minFamSize: number;\r\n        maxFamSize: number;\r\n        maxAmount: number;\r\n    } [];\r\n    products: Product[];\r\n    superTypeId?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { from, of, Observable, BehaviorSubject, combineLatest, throwError } from 'rxjs';\r\nimport { tap, catchError, concatMap, shareReplay } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport authConfig from '../../../auth.config';\r\nimport Auth0Client from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  loggedIn: boolean = null;\r\n\r\n  logOutClick = false;\r\n  private logOutClickSource = new BehaviorSubject(this.logOutClick);\r\n  currentLogOutClick = this.logOutClickSource.asObservable();\r\n\r\n  auth0Client = (from(createAuth0Client(authConfig)) as Observable<Auth0Client>).pipe(\r\n    shareReplay(1),\r\n    catchError(err => throwError(err))\r\n  );\r\n  isAuthenticated = this.auth0Client.pipe(\r\n    concatMap((client: Auth0Client) => from(client.isAuthenticated())),\r\n    tap(res => this.loggedIn = res)\r\n  );\r\n  handleRedirectCallback = this.auth0Client.pipe(\r\n    concatMap((client: Auth0Client) => from(client.handleRedirectCallback()))\r\n  );\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  getTokenSilently$(options?): Observable<string> {\r\n    return this.auth0Client.pipe(\r\n      concatMap((client: Auth0Client) => from(client.getTokenSilently(options)))\r\n    );\r\n  }\r\n\r\n  localAuthSetup() {\r\n    const checkAuth = this.isAuthenticated.pipe(\r\n      concatMap((loggedIn: boolean) => {\r\n        return of(loggedIn);\r\n      })\r\n    );\r\n    checkAuth.subscribe((response: { [key: string]: any } | boolean) => {\r\n      this.loggedIn = !!response;\r\n    });\r\n  }\r\n\r\n  login(redirectPath: string = `/orders`) {\r\n    this.auth0Client.subscribe((client: Auth0Client) => {\r\n      client.loginWithRedirect({\r\n        redirect_uri: `${window.location.origin}/callback`,\r\n        appState: { target: redirectPath }\r\n      });\r\n    });\r\n  }\r\n\r\n  handleAuthCallback() {\r\n    let targetRoute: string;\r\n    const authComplete = this.handleRedirectCallback.pipe(\r\n      tap(cbRes => {\r\n        targetRoute = cbRes.appState && cbRes.appState.target ? cbRes.appState.target : '/';\r\n      }),\r\n      concatMap(() => {\r\n        return combineLatest([\r\n          this.isAuthenticated\r\n        ]);\r\n      })\r\n    );\r\n    authComplete.subscribe(([loggedIn]) => {\r\n      this.router.navigate([targetRoute]);\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.auth0Client.subscribe((client: Auth0Client) => {\r\n      client.logout({\r\n        client_id: authConfig.client_id,\r\n        returnTo: `${window.location.origin}`\r\n      });\r\n    });\r\n  }\r\n\r\n  getLogOutClicked(): Observable<boolean> {\r\n    return this.currentLogOutClick;\r\n  }\r\n\r\n  logOutClicked() {\r\n    this.logOutClickSource.next(true);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TypeService } from './type.service';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { Type } from '../models/type.model';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductService } from './product.service';\r\nimport { Product } from '../models/product.model';\r\nimport { Shop } from '../models/shop.model';\r\nimport { ShopService } from './shop.service';\r\nimport { OrderService } from './order.service';\r\nimport { Order } from '../models/order.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  orders: Order[] = [];\r\n  products: Product[] = [];\r\n  shop: Shop = {_id: null, shop: []};\r\n  types: Type[] = [];\r\n\r\n  constructor(private snackBar: MatSnackBar, private orderService: OrderService, private productService: ProductService, \r\n              private shopService: ShopService, private typeService: TypeService) {\r\n                this.updateShop();\r\n                this.updateTypes();\r\n                this.updateProducts();\r\n                this.updateOrders();\r\n               }\r\n\r\n  private ordersSource = new BehaviorSubject(this.orders);\r\n  currentOrders = this.ordersSource.asObservable();\r\n\r\n  private productsSource = new BehaviorSubject(this.products);\r\n  currentProducts = this.productsSource.asObservable();\r\n\r\n  private shopSource = new BehaviorSubject(this.shop);\r\n  currentShop = this.shopSource.asObservable();\r\n\r\n  private typesSource = new BehaviorSubject(this.types);\r\n  currentTypes = this.typesSource.asObservable();\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    return this.currentOrders;\r\n  }\r\n\r\n  getOrderById(orderId: string) {\r\n    return this.currentOrders.pipe(map(\r\n      (orders: Order[]) => orders.find((order: Order) => order._id === orderId)\r\n    ));\r\n  }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.currentProducts;\r\n  }\r\n\r\n  getProductById(productId: string): Observable<Product> {\r\n    return this.currentProducts.pipe(map(\r\n      (products: Product[]) => products.find((product: Product) => product._id === productId)\r\n    ));\r\n  }\r\n\r\n  getShop(): Observable<Shop> {\r\n    return this.currentShop;\r\n  }\r\n\r\n  getTypes(): Observable<Type[]> {\r\n    return this.currentTypes;\r\n  }\r\n\r\n  getTypeById(typeId: string) {\r\n    return this.currentTypes.pipe(map(\r\n      (types: Type[]) => types.find((type: Type) => type._id === typeId)\r\n    ));\r\n  }\r\n\r\n  updateOrders() {\r\n    this.orderService.getOrders().subscribe((orders: Order[]) => {\r\n      this.ordersSource.next(orders);\r\n    });\r\n  }\r\n\r\n  updateProducts() {\r\n    this.productService.getProducts().subscribe((products: Product[]) => {\r\n      console.log(products);\r\n      this.productsSource.next(products);\r\n    });\r\n  }\r\n\r\n  updateShop() {\r\n    this.shopService.getShop().subscribe((shop: Shop) => {\r\n      if (shop.shop.some((currentType: Type) => !currentType.products.length)) {\r\n        shop.shop.forEach((type: Type) => {\r\n          if (!type.products.length) {\r\n            shop.shop = shop.shop.filter((emptyType: Type) => emptyType._id !== type._id);\r\n          }\r\n        });\r\n        this.shopService.updateShop(shop._id, shop).subscribe((response: any) => {\r\n          response.status === 200 ?\r\n            this.shopSource.next(shop) :\r\n            this.snackBar.open('Database error. Failed to update.', 'Dismiss', {\r\n              panelClass: ['red-snackbar']});\r\n        });\r\n      } else {\r\n        this.shopSource.next(shop);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateTypes() {\r\n    this.typeService.getTypes().subscribe((types: Type[]) => {\r\n      this.typesSource.next(types);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { mergeMap, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return this.authService.getTokenSilently$().pipe(\r\n      mergeMap(token => {\r\n        const tokenReq = req.clone({\r\n          setHeaders: { Authorization: `Bearer ${token}` }\r\n        });\r\n        return next.handle(tokenReq);\r\n      }),\r\n      catchError(err => throwError(err))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Order } from '../models/order.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  uri = 'https://damp-brook-50473.herokuapp.com/api';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getOrderById(orderId: string) {\r\n    return this.httpClient.get<Order>(`${this.uri}/orders/${orderId}`);\r\n  }\r\n\r\n  getOrders() {\r\n    return this.httpClient.get<Order[]>(`${this.uri}/orders/`);\r\n  }\r\n\r\n  updateOrderReceived(orderId: string, received: object) {\r\n    return this.httpClient.put(`${this.uri}/orders/update-received/${orderId}`, received);\r\n  }\r\n\r\n  deleteOrder(orderId: string) {\r\n    return this.httpClient.delete(`${this.uri}/orders/delete/${orderId}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PantryPanelService {\n  panelOpenStates = new Map <string, boolean>([\n    ['product', false],\n    ['type', false],\n    ['shop', false]\n  ]);\n\n  private panelOpenSource = new BehaviorSubject(this.panelOpenStates);\n  currentPanelOpen = this.panelOpenSource.asObservable();\n\n  constructor() { }\n\n  getPanelOpenStates(): Observable<Map<string, boolean>> {\n    return this.currentPanelOpen;\n  }\n\n  setPanelOpenStates(panel: string, state: boolean) {\n    this.panelOpenStates.set(panel, state);\n    this.panelOpenSource.next(this.panelOpenStates);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Product } from '../models/product.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  uri = 'https://damp-brook-50473.herokuapp.com/api';\r\n  products: Product[] = [];\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getProductById(productId: string) {\r\n    return this.httpClient.get<Product>(`${this.uri}/products/${productId}`);\r\n  }\r\n\r\n  getProducts() {\r\n    return this.httpClient.get<Product[]>(`${this.uri}/products`);\r\n  }\r\n\r\n  addProduct(product: object) {\r\n    return this.httpClient.post(`${this.uri}/products/add`, product);\r\n  }\r\n\r\n  updateProduct(productId: string, product: object) {\r\n    return this.httpClient.put(`${this.uri}/products/update/${productId}`, product);\r\n  }\r\n\r\n  deleteProduct(productId: string) {\r\n    return this.httpClient.delete(`${this.uri}/products/delete/${productId}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Shop } from '../models/shop.model';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShopService {\r\n  uri = 'https://damp-brook-50473.herokuapp.com/api';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getShop() {\r\n    return this.httpClient.get<Shop>(`${this.uri}/shop`).pipe(\r\n      map(result => result[0])\r\n    );\r\n  }\r\n\r\n  updateShop(shopId: string, shop: Shop) {\r\n    return this.httpClient.put<Shop>(`${this.uri}/shop/update/${shopId}`, shop);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Type } from '../models/type.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TypeService {\r\n  uri = 'https://damp-brook-50473.herokuapp.com/api';\r\n  types: Type[] = [];\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  addType(type: object) {\r\n    return this.httpClient.post(`${this.uri}/types/add`, type);\r\n  }\r\n\r\n  deleteType(typeId: string) {\r\n    return this.httpClient.delete(`${this.uri}/types/delete/${typeId}`);\r\n  }\r\n\r\n  getTypeById(typeId: string) {\r\n    return this.httpClient.get<Type>(`${this.uri}/types/${typeId}`);\r\n  }\r\n\r\n  getTypes() {\r\n    return this.httpClient.get<Type[]>(`${this.uri}/types`);\r\n  }\r\n\r\n  removeSuperTypeIdMany(removeIds: string[]) {\r\n    return this.httpClient.post(`${this.uri}/types/remove-super-type-many`, removeIds);\r\n  }\r\n\r\n  updateSuperTypeIdMany(superTypeId: string, updateIds: string[]) {\r\n    return this.httpClient.post(`${this.uri}/types/update-super-type-many/${superTypeId}`, updateIds);\r\n  }\r\n\r\n  updateType(typeId: string, type: object) {\r\n    return this.httpClient.put(`${this.uri}/types/update/${typeId}`, type);\r\n  }\r\n\r\n}\r\n\r\n\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\n\r\nenableProdMode();\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}