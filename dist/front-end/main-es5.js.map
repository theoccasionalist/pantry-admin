{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///auth.config.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/cart-print/cart-print.component.ts","webpack:///src/app/components/cart-print/cart-print.component.html","webpack:///src/app/components/cart/cart.component.ts","webpack:///src/app/components/cart/cart.component.html","webpack:///src/app/components/family-print/family-print.component.ts","webpack:///src/app/components/family-print/family-print.component.html","webpack:///src/app/components/family/family.component.ts","webpack:///src/app/components/family/family.component.html","webpack:///src/app/components/log-in/log-in.component.ts","webpack:///src/app/components/log-in/log-in.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/order-delete-modal/order-delete-modal.component.ts","webpack:///src/app/components/order-delete-modal/order-delete-modal.component.html","webpack:///src/app/components/order-grid-buttons/order-grid-buttons.component.ts","webpack:///src/app/components/order-grid-buttons/order-grid-buttons.component.html","webpack:///src/app/components/order-overview/order-overview.component.ts","webpack:///src/app/components/order-overview/order-overview.component.html","webpack:///src/app/components/order/order.component.ts","webpack:///src/app/components/order/order.component.html","webpack:///src/app/components/orders/orders.component.ts","webpack:///src/app/components/orders/orders.component.html","webpack:///src/app/components/pantry-overview/pantry-overview.component.ts","webpack:///src/app/components/pantry-overview/pantry-overview.component.html","webpack:///src/app/components/product-add/product-add.component.ts","webpack:///src/app/components/product-add/product-add.component.html","webpack:///src/app/components/product-delete-modal/product-delete-modal.component.ts","webpack:///src/app/components/product-delete-modal/product-delete-modal.component.html","webpack:///src/app/components/product-edit/product-edit.component.ts","webpack:///src/app/components/product-edit/product-edit.component.html","webpack:///src/app/components/product-grid-buttons/product-grid-buttons.component.ts","webpack:///src/app/components/product-grid-buttons/product-grid-buttons.component.html","webpack:///src/app/components/products/products.component.ts","webpack:///src/app/components/products/products.component.html","webpack:///src/app/components/shop-edit/shop-edit.component.ts","webpack:///src/app/components/shop-edit/shop-edit.component.html","webpack:///src/app/components/shop/shop.component.ts","webpack:///src/app/components/shop/shop.component.html","webpack:///src/app/components/sub-type-edit/sub-type-edit.component.ts","webpack:///src/app/components/sub-type-edit/sub-type-edit.component.html","webpack:///src/app/components/type-add/type-add.component.ts","webpack:///src/app/components/type-add/type-add.component.html","webpack:///src/app/components/type-delete-modal/type-delete-modal.component.ts","webpack:///src/app/components/type-delete-modal/type-delete-modal.component.html","webpack:///src/app/components/type-edit/type-edit.component.ts","webpack:///src/app/components/type-grid-buttons/type-grid-buttons.component.ts","webpack:///src/app/components/type-grid-buttons/type-grid-buttons.component.html","webpack:///src/app/components/types/types.component.ts","webpack:///src/app/components/types/types.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/models/order.model.ts","webpack:///src/app/models/product.model.ts","webpack:///src/app/models/type.model.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/interceptor.service.ts","webpack:///src/app/services/order.service.ts","webpack:///src/app/services/pantry-panel.service.ts","webpack:///src/app/services/product.service.ts","webpack:///src/app/services/shop.service.ts","webpack:///src/app/services/type.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","domain","client_id","audience","redirect_uri","window","location","origin","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","provide","useClass","multi","forRoot","imports","providers","AppComponent","authService","title","localAuthSetup","selector","templateUrl","styleUrls","AppModule","useValue","duration","declarations","entryComponents","bootstrap","CallbackComponent","handleAuthCallback","CartPrintComponent","columns","CartComponent","panelOpenState","cart","order","FamilyPrintComponent","FamilyComponent","family","pickUpDate","LogInComponent","router","navigate","NavbarComponent","onOrderClick","onPantryClick","OrderDeleteModalComponent","dataService","dialogRef","orderService","snackBar","sliceId","_id","slice","deleteOrder","subscribe","response","showResponseStatus","status","close","open","panelClass","updateOrders","onCancelClick","onProceedClick","OrderGridButtonsComponent","dialog","params","data","received","disableClose","width","onViewClick","onDeleteClick","OrderOverviewComponent","OrderComponent","activatedRoute","loading","subscription","add","pipe","getOrderById","rerouteOnEmptyOrder","sortProductsByName","sortTypesByName","unsubscribe","updateOrderReceived","undefined","Object","entries","length","constructor","update","forEach","typeInCart","products","sort","before","after","productName","trim","toLowerCase","typeName","OrdersComponent","columnDefs","headerName","field","comparator","firstSchool","secondSchool","schoolComparator","filter","sortable","cellRendererFramework","defaultColDef","filterParams","suppressAndOrCondition","resizable","rowData","getOrders","orders","getFormattedFields","rowEntry","defineProperty","value","firstName","lastName","familySize","schoolChildren","infants","phoneNumber","emailAddress","referral","push","firstPoints","secondPoints","isNaN","pantryPanelService","PantryOverviewComponent","productPanelOpenState","shopPanelOpenState","typePanelOpenState","getPanelOpenStates","panelOpenStates","get","minMaxValidator","formGroup","minFamSize","maxFamSize","minMax","ProductAddComponent","formBuilder","productService","limitDeleted","product","productForm","required","points","school","infant","requiredError","prodSizeAmount","group","maxAmount","validator","index","removeAt","removeControl","addSizeAmount","addControl","valid","setProductValues","addProduct","updateProducts","updateShop","updateTypes","ProductDeleteModalComponent","deleteProduct","ProductEditComponent","inShop","getProductById","getShop","shop","rerouteOnEmptyProduct","setProdSizeAmountForm","setInShop","updateProduct","type","element","ProductGridButtonsComponent","onEditClick","ProductsComponent","pointsComparator","getTypes","getProducts","types","productToCheck","gridApi","api","setRowData","superTypeName","superTypeId","superType","hasTypeLimit","typeLimits","getProductTypeName","getProductSuperTypeName","getTypeLimitStatus","getInShopStatus","ShopEditComponent","shopService","initShop","setInShopSubTypes","setAvailableSuperTypes","setAvailableSubTypes","removeProductLessType","availableTypes","typesInShop","event","previousContainer","container","previousIndex","currentIndex","shopClone","typesClone","unwrapSubTypes","availableType","subTypes","productLessType","some","typeInShop","subTypesInShop","setInShopSubTypesHelper","subType","find","shopTypes","beforeType","afterType","shopType","beforeSubType","afterSubType","ShopComponent","setSubTypes","sortShop","currentTypes","currentType","beforeProduct","afterProduct","beforeSubProduct","afterSubProduct","SubTypeEditComponent","typeService","initComponentVariables","initDragDropArrays","initDragDropValues","possibleSubs","possibleSupers","superTypeToAdd","dropIntoSubsSetArrayValues","filterIneligibleSubTypes","newSuperType","typeToMove","dropIntoSupersSetArrayValues","superTypeToRemove","enableTypeTracking","ineligibleType","typeToCheck","emptyArray","newSubType","superTypeRemove","dragDropArray","getTypeIdsToUpdate","removeSuperTypeIdMany","getTypeIdsToRemove","updateSuperTypeIdMany","updateIds","remove","typedRemove","typedUpdate","typeIdsToRemove","updateObjects","idsToUpdate","TypeAddComponent","availableProducts","availableSubTypes","deletedOrMoved","limitPanelOpenState","newSubTypes","productsInType","typeEdit","typeForm","typeComment","typeLimitsFormOpen","initAvailableProducts","typeSizeAmount","unavailableProducts","unavailable","typeLimitsForm","setTypeValues","addType","migrateTypeSizeAmount","removeFromSuperType","updateType","addTypeLimits","dragDropCard","TypeDeleteModalComponent","deleteType","TypeEditComponent","getTypeById","rerouteOnEmptyType","initEditTypeCommentForm","initProductsInType","initEditTypeLimitsForm","setSuperTypeName","TypeGridButtonsComponent","TypesComponent","getSuperTypeName","AuthGuard","next","state","isAuthenticated","loggedIn","login","url","providedIn","Order","Product","Type","AuthService","logOutClick","logOutClickSource","currentLogOutClick","asObservable","auth0Client","err","client","res","handleRedirectCallback","options","getTokenSilently","checkAuth","redirectPath","loginWithRedirect","appState","target","targetRoute","authComplete","cbRes","logout","returnTo","DataService","ordersSource","currentOrders","productsSource","currentProducts","shopSource","currentShop","typesSource","orderId","productId","typeId","updateShopRemoveEmptyTypes","preFilterShopLength","superTypeIds","includes","updateShopService","InterceptorService","getTokenSilently$","token","tokenReq","clone","setHeaders","Authorization","handle","OrderService","httpClient","apiUrl","put","PantryPanelService","Map","panelOpenSource","currentPanelOpen","panel","set","ProductService","post","ShopService","result","shopId","TypeService","removeIds","environment","production","bootstrapModule","console","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAe;;;AAAA;AACXC,YAAM,EAAE,8BADG;AAEXC,eAAS,EAAE,kCAFA;AAGXC,cAAQ,EAAE,+CAHC;AAIXC,kBAAY,YAAKC,MAAM,CAACC,QAAP,CAAgBC,MAArB;AAJD;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAkBA,QAAMC,MAAM,GAAW,CACrB;AAACC,UAAI,EAAE,UAAP;AAAmBC,eAAS,EAAE;AAA9B,KADqB,EAErB;AAACD,UAAI,EAAE,QAAP;AAAiBC,eAAS,EAAE;AAA5B,KAFqB,EAGrB;AAACD,UAAI,EAAE,QAAP;AAAiBC,eAAS,EAAE,0GAA5B;AAAoDC,iBAAW,EAAE,CAAC,6DAAD;AAAjE,KAHqB,EAIrB;AAACF,UAAI,EAAE,WAAP;AAAoBC,eAAS,EAAE,iFAA/B;AAA+CC,iBAAW,EAAE,CAAC,6DAAD;AAA5D,KAJqB,EAKrB;AAACF,UAAI,EAAE,QAAP;AAAiBC,eAAS,EAAE,6GAA5B;AAAqDC,iBAAW,EAAE,CAAC,6DAAD;AAAlE,KALqB,EAMrB;AAACF,UAAI,EAAE,SAAP;AAAkBC,eAAS,EAAE,iGAA7B;AAAkDC,iBAAW,EAAE,CAAC,6DAAD;AAA/D,KANqB,EAOrB;AAACF,UAAI,EAAE,aAAP;AAAsBC,eAAS,EAAE,oGAAjC;AAAuDC,iBAAW,EAAE,CAAC,6DAAD;AAApE,KAPqB,EAQrB;AAACF,UAAI,EAAE,MAAP;AAAeC,eAAS,EAAE,2FAA1B;AAA6CC,iBAAW,EAAE,CAAC,6DAAD;AAA1D,KARqB,EASrB;AAACF,UAAI,EAAE,WAAP;AAAoBC,eAAS,EAAE,sGAA/B;AAAqDC,iBAAW,EAAE,CAAC,6DAAD;AAAlE,KATqB,EAUrB;AAACF,UAAI,EAAE,MAAP;AAAeC,eAAS,EAAE,wFAA1B;AAA4CC,iBAAW,EAAE,CAAC,6DAAD;AAAzD,KAVqB,EAWrB;AAACF,UAAI,EAAE,UAAP;AAAmBC,eAAS,EAAE,2FAA9B;AAAiDC,iBAAW,EAAE,CAAC,6DAAD;AAA9D,KAXqB,EAYrB;AAACF,UAAI,EAAE,EAAP;AAAWG,gBAAU,EAAE,QAAvB;AAAiCC,eAAS,EAAE;AAA5C,KAZqB,CAAvB;;QA0BaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,iBARhB,CACT;AACEC,eAAO,EAAE,uEADX;AAEEC,gBAAQ,EAAE,iFAFZ;AAGEC,aAAK,EAAE;AAHT,OADS,C;AAMV,gBARQ,CAAC,6DAAaC,OAAb,CAAqBV,MAArB,CAAD,CAQR,EAPS,4DAOT;;;;0HAEUM,gB,EAAgB;AAAA;AAAA,kBATjB,4DASiB;AAAA,O;AATL,K;;;;;sEASXA,gB,EAAgB;cAX5B,sDAW4B;eAXnB;AACRK,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBV,MAArB,CAAD,CADD;AAERT,iBAAO,EAAE,CAAC,4DAAD,CAFD;AAGRqB,mBAAS,EAAE,CACT;AACEL,mBAAO,EAAE,uEADX;AAEEC,oBAAQ,EAAE,iFAFZ;AAGEC,iBAAK,EAAE;AAHT,WADS;AAHH,S;AAWmB,Q;;;;;;;;;;;;;;;;;;AC5C7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaI,Y;;;AAGX,4BAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAFpB,aAAAC,KAAA,GAAQ,WAAR;AAEgD;;;;mCAErC;AACT,eAAKD,WAAL,CAAiBE,cAAjB;AACD;;;;;;;uBAPUH,Y,EAAY,mI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACRzB;;;;;;;;;sEDQaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTI,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AERzyHaC,S;;;;;YAAAA,S;AAAS,kBAFR,4DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBALT,CACT;AAACb,eAAO,EAAE,0FAAV;AAAyCc,gBAAQ,EAAE;AAACC,kBAAQ,EAAE;AAAX;AAAnD,OADS,C;AAEV,gBApCQ,CACP,4DADO,EAEP,uEAFO,EAGP,qEAHO,EAIP,6FAJO,EAKP,qEALO,EAMP,0DANO,EAOP,qEAPO,EAQP,wEARO,EASP,oEATO,EAUP,yEAVO,EAWP,2EAXO,EAYP,gFAZO,EAaP,uEAbO,EAcP,+EAdO,EAeP,sEAfO,EAgBP,uEAhBO,EAiBP,yEAjBO,EAkBP,8EAlBO,EAmBP,4FAnBO,EAoBP,uEApBO,EAqBP,2EArBO,EAsBP,yDAtBO,EAuBP,kEAvBO,EAwBP,sEAxBO,CAoCR;;;;0HAGUF,S,EAAS;AAAA,uBAnElB,4DAmEkB,EAlElB,iFAkEkB,EAjElB,oFAiEkB,EAhElB,2GAgEkB,EA/DlB,8GA+DkB,EA9DlB,0FA8DkB,EA7DlB,qGA6DkB,EA5DlB,kGA4DkB,EA3DlB,yFA2DkB,EA1DlB,4FA0DkB,EAzDlB,uGAyDkB,EAxDlB,8EAwDkB,EAvDlB,4FAuDkB,EAtDlB,4HAsDkB,EArDlB,mHAqDkB,EApDlB,4HAoDkB,EAnDlB,mHAmDkB,EAlDlB,oFAkDkB,EAjDlB,sHAiDkB,EAhDlB,iFAgDkB,EA/ClB,8EA+CkB,EA9ClB,oFA8CkB,EA7ClB,qGA6CkB,EA5ClB,+FA4CkB,EA3ClB,sHA2CkB,EA1ClB,mFA0CkB,EAzClB,0FAyCkB;AAzCD,kBAGjB,4DAHiB,EAIjB,uEAJiB,EAKjB,qEALiB,EAMjB,6FANiB,EAOjB,qEAPiB,EAQjB,0DARiB,EASjB,qEATiB,EAUjB,wEAViB,EAWjB,oEAXiB,EAYjB,yEAZiB,EAajB,2EAbiB,EAcjB,gFAdiB,EAejB,uEAfiB,EAgBjB,+EAhBiB,EAiBjB,sEAjBiB,EAkBjB,uEAlBiB,EAmBjB,yEAnBiB,EAoBjB,8EApBiB,EAqBjB,4FArBiB,EAsBjB,uEAtBiB,EAuBjB,2EAvBiB,EAwBjB,yDAxBiB,EAyBjB,kEAzBiB,EA0BjB,sEA1BiB;AAyCC,O;AAfH,K;;;;;sEAeNA,S,EAAS;cArErB,sDAqEqB;eArEZ;AACRG,sBAAY,EAAE,CACZ,4DADY,EAEZ,iFAFY,EAGZ,oFAHY,EAIZ,2GAJY,EAKZ,8GALY,EAMZ,0FANY,EAOZ,qGAPY,EAQZ,kGARY,EASZ,yFATY,EAUZ,4FAVY,EAWZ,uGAXY,EAYZ,8EAZY,EAaZ,4FAbY,EAcZ,4HAdY,EAeZ,mHAfY,EAgBZ,4HAhBY,EAiBZ,mHAjBY,EAkBZ,oFAlBY,EAmBZ,sHAnBY,EAoBZ,iFApBY,EAqBZ,8EArBY,EAsBZ,oFAtBY,EAuBZ,qGAvBY,EAwBZ,+FAxBY,EAyBZ,sHAzBY,EA0BZ,mFA1BY,EA2BZ,0FA3BY,CADN;AA8BRZ,iBAAO,EAAE,CACP,4DADO,EAEP,uEAFO,EAGP,qEAHO,EAIP,6FAJO,EAKP,qEALO,EAMP,0DANO,EAOP,qEAPO,EAQP,wEARO,EASP,oEATO,EAUP,yEAVO,EAWP,2EAXO,EAYP,gFAZO,EAaP,uEAbO,EAcP,+EAdO,EAeP,sEAfO,EAgBP,uEAhBO,EAiBP,yEAjBO,EAkBP,8EAlBO,EAmBP,4FAnBO,EAoBP,uEApBO,EAqBP,2EArBO,EAsBP,yDAtBO,EAuBP,kEAvBO,EAwBP,sEAxBO,CA9BD;AAwDRa,yBAAe,EAAE,CACf,sHADe,EAEf,sHAFe,EAGf,4HAHe,EAIf,4HAJe,EAKf,mHALe,EAMf,mHANe,CAxDT;AAgERZ,mBAAS,EAAE,CACT;AAACL,mBAAO,EAAE,0FAAV;AAAyCc,oBAAQ,EAAE;AAACC,sBAAQ,EAAE;AAAX;AAAnD,WADS,CAhEH;AAmERG,mBAAS,EAAE,CAAC,4DAAD;AAnEH,S;AAqEY,Q;;;;;;;;;;;;;;;;;;ACzHtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,iB;;;AAEX,iCAAoBZ,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA4B;;;;mCAErC;AACT,eAAKA,WAAL,CAAiBa,kBAAjB;AACD;;;;;;;uBANUD,iB,EAAiB,0I;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA;AAAA;ACR9B;;;;;;;;;sEDQaA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTT,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;AER9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOwB;;AAAmD;;AAAO;;;;;;AAC1D;;AAAoD;;AAAK;;AAAuB;;AAAM;;;;;;AAA7B;;AAAA;;;;;;AAGzD;;AAAsC;;AAA0B;;AAAM;;AAAO;;;;;;AAC7E;;AAAuC;;AAA0B;;AAAkB;;AAAO;;;;;;AAAzB;;AAAA;;;;;;AAFrE;;AACI;;AACA;;AACJ;;;;;;AAEI;;AAAsC;;AAA0B;;AAAiD;;AAAO;;;;;;AAAxD;;AAAA;;;;;;AAChE;;AAAuC;;AAA0B;;AAAS;;AAAO;;;;;;AAFrF;;AACI;;AACA;;AACJ;;;;;;AACA;;;;;;AACA;;;;;;AAlBhB;;AACI;;AACI;;AAAsB;;AAClB;;AAA6C;;AAAiB;;AAC9D;;AACI;;AACI;;AACA;;AACJ;;AACA;;AAIA;;AAIA;;AACA;;AACJ;;AACA;;AACI;;AAAM;;AAAsC;;AAC5C;;AAAM;;AAA2B;;AACrC;;AACJ;;AAAK;;AACT;;AACJ;;;;;;;;AAvByD;;AAAA;;AAC5B;;AAAA;;AAKC;;AAAA;;AAIA;;AAAA;;AAIK;;AAAA;;AACP;;AAAA;;AAGN;;AAAA;;AACA;;AAAA;;;;QDfbS,kB;;;AAKX,oCAAc;AAAA;;AAJd,aAAAC,OAAA,GAAoB,CAAC,SAAD,EAAY,SAAZ,CAApB;AAIiB;;;;mCAEN,CACV;;;;;;;uBARUD,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,mvB;AAAA;AAAA;ACR/B;;AACI;;AA2BJ;;;;AA3BS;;AAAA;;;;;;;;;sEDOIA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTX,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;gBAE5B;;;gBACA;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWwB;;AAAsC;;AAAI;;;;;;AAC1C;;AAAuC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGvC;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAF3C;;AACI;;AACA;;AACJ;;;;;;AAEI;;AAAsC;;AAAuD;;;;;;AAAvD;;AAAA;;;;;;AACtC;;AAAuC;;AAAS;;;;;;AAFpD;;AACI;;AACA;;AACJ;;;;;;AACA;;;;;;AACA;;;;;;AAjBZ;;AACI;;AACI;;AAAmC;;AAAiB;;AACpD;;AACI;;AACI;;AACA;;AACJ;;AACA;;AAIA;;AAIA;;AACA;;AACJ;;AACA;;AACJ;;AACJ;;;;;;;;AAnB2C;;AAAA;;AAClB;;AAAA;;AAKC;;AAAA;;AAIA;;AAAA;;AAIK;;AAAA;;AACP;;AAAA;;;;QDdnBW,a;;;AAMX,+BAAc;AAAA;;AAJd,aAAAD,OAAA,GAAoB,CAAC,SAAD,EAAY,SAAZ,CAApB;AAEA,aAAAE,cAAA,GAAiB,IAAjB;AAEiB;;;;mCAEN;AACT,eAAKC,IAAL,GAAY,KAAKC,KAAL,CAAWD,IAAvB;AACD;;;;;;;uBAVUF,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,ilB;AAAA;AAAA;ACT1B;;AAAqB;AAAA,wCAAyB,IAAzB;AAA6B,WAA7B,EAA8B,QAA9B,EAA8B;AAAA,wCAA0B,KAA1B;AAA+B,WAA7D;;AACjB;;AACI;;AAAiB;;AAAI;;AACrB;;AAAuB;;AAAqC;;AAChE;;AACA;;AACI;;AAsBJ;;AACA;;AAAgB;AAAA,wCAA0B,KAA1B;AAA+B,WAA/B;;AAAiC;;AACrD;;;;AA9BoF;;AAGrD;;AAAA;;AAGjB;;AAAA;;;;;;;;;sEDGDA,a,EAAa;cALzB,uDAKyB;eALf;AACTb,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;gBAGvB;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQae,oB;;;AAIX,sCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBAPUA,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,oM;AAAA;AAAA;ACRjC;;AAAyB;;AAAO;;AAChC;;AACI;;AACI;;AACI;;AAA6B;;AAAW;;AACxC;;AAA6B;;AAAU;;AACvC;;AAA6B;;AAAS;;AACtC;;AAA6B;;AAAa;;AAC1C;;AAA6B;;AAAc;;AAC/C;;AACA;;AACI;;AAAkB;;AAA0B;;AAC5C;;AAAkB;;AAAyB;;AAC3C;;AAAkB;;AAAwB;;AAC1C;;AAAkB;;AAA4B;;AAC9C;;AAAkB;;AAA2E;;AACjG;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA4B;;AAAS;;AACrC;;AACI;;AACI;;AACI;;AAAkB;;AAAY;;AAC9B;;AAAkB;;AAAgB;;AAClC;;AAAkB;;AAAQ;;AAC9B;;AACA;;AACI;;AAAkB;;AAA2B;;AAC7C;;AAAkB;;AAAuE;;AACzF;;AAAkB;;AAAuC;;AAC7D;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAA4B;;AAAO;;AACnC;;AACI;;AACI;;AACI;;AAAkB;;AAAK;;AACvB;;AAAkB;;AAAS;;AAC3B;;AAAkB;;AAAS;;AAC/B;;AACA;;AACI;;AAAkB;;AAAoB;;AACtC;;AAAkB;;AAAiD;;AACnE;;AAAkB;;AAAW;;AACjC;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA3C8B;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAeQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAeA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;sEDzCzBA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTjB,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;gBAC9B;;;gBACA;;;;;;;;;;;;;;;;;;;;AEVH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASagB,e;;;AAOX,iCAAc;AAAA;;AAJd,aAAAJ,cAAA,GAAiB,IAAjB;AAIiB;;;;mCAEN;AACT,eAAKK,MAAL,GAAc,KAAKH,KAAL,CAAWG,MAAzB;AACA,eAAKC,UAAL,GAAkB,KAAKJ,KAAL,CAAWI,UAA7B;AACD;;;;;;;uBAZUF,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,wP;AAAA;AAAA;ACT5B;;AAAqB;AAAA,wCAAyB,IAAzB;AAA6B,WAA7B,EAA8B,QAA9B,EAA8B;AAAA,wCAA0B,KAA1B;AAA+B,WAA7D;;AACjB;;AACI;;AAAiB;;AAA6B;;AAC9C;;AAAuB;;AAAqC;;AAChE;;AACA;;AACI;;AACI;;AAAyB;;AAAO;;AAChC;;AACI;;AACI;;AACI;;AAA6B;;AAAW;;AACxC;;AAA6B;;AAAU;;AACvC;;AAA6B;;AAAS;;AACtC;;AAA6B;;AAAa;;AAC1C;;AAA6B;;AAAc;;AAC/C;;AACA;;AACI;;AAAkB;;AAAoB;;AACtC;;AAAkB;;AAAmB;;AACrC;;AAAkB;;AAAkB;;AACpC;;AAAkB;;AAAsB;;AACxC;;AAAkB;;AAA+D;;AACrF;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAyB;;AAAS;;AAClC;;AACI;;AACI;;AACI;;AAA6B;;AAAY;;AACzC;;AAA6B;;AAAgB;;AAC7C;;AAA6B;;AAAQ;;AACzC;;AACA;;AACI;;AAAkB;;AAAqB;;AACvC;;AAAkB;;AAA2D;;AAC7E;;AAAkB;;AAAiC;;AACvD;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAyB;;AAAO;;AAChC;;AACI;;AACI;;AACI;;AAA6B;;AAAK;;AAClC;;AAA6B;;AAAS;;AACtC;;AAA6B;;AAAS;;AAC1C;;AACA;;AACI;;AAAkB;;AAAc;;AAChC;;AAAkB;;AAA2C;;AAC7D;;AAAkB;;AAAW;;AACjC;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA9DoF;;AAGrD;;AAAA;;AAeW;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAeA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAeA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;sED/C7BA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTlB,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;gBAEzB;;;gBAGA;;;;;;;;;;;;;;;;;;;;AEdH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACMY;;AAAyC;AAAA;;AAAA;;AAAA,iBAAS,SAAAL,WAAA,QAAT;AAA4B,SAA5B;;AAA4D;;AAAM;;;;;;;;AAC3G;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AAAkD;;AAAS;;;;QDEnGwB,c;;;AAEX,8BAAmBxB,WAAnB,EAAqDyB,MAArD,EAAqE;AAAA;;AAAlD,aAAAzB,WAAA,GAAAA,WAAA;AAAkC,aAAAyB,MAAA,GAAAA,MAAA;AAAmB;;;;mCAE7D,CACV;;;mCAEU;AACT,eAAKA,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;;;;;uBATUF,c,EAAc,0I,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,iC;AAAA,c;AAAA,a;AAAA,yW;AAAA;AAAA;ACT3B;;AACI;;AACA;;AACA;;AACI;;AACI;;AAAK;;AAAc;;AACnB;;AACA;;AACJ;;AACJ;;AACA;;AACJ;;;;AALmF;;AAAA;;AACT;;AAAA;;;;;;;;;sEDE7DA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTrB,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASasB,e;;;AAEX,+BAAmB3B,WAAnB,EAAqDyB,MAArD,EAAqE;AAAA;;AAAlD,aAAAzB,WAAA,GAAAA,WAAA;AAAkC,aAAAyB,MAAA,GAAAA,MAAA;AAAmB;;;;mCAE7D,CACV;;;uCAEc;AACb,eAAKA,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;wCAEe;AACd,eAAKD,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;;;;;uBAbUC,e,EAAe,0I,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,iF;AAAA;AAAA;ACT5B;;AACI;;AAAM;;AAAuC;;AAC7C;;AACI;;AAA0B;AAAA,mBAAS,IAAAC,YAAA,EAAT;AAAuB,WAAvB;;AAAyB;;AAAa;;AAChE;;AAA0B;AAAA,mBAAS,IAAAC,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAc;;AAClE;;AAA0B;AAAA,mBAAS,IAAA7B,WAAA,SAAT;AAA6B,WAA7B;;AAA+B;;AAAO;;AACpE;;AACJ;;;;;;;;;sEDEa2B,e,EAAe;cAL3B,uDAK2B;eALjB;AACTxB,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaayB,yB;;;AAGX,yCAAoBC,WAApB,EAAqDC,SAArD,EAC6Cb,KAD7C,EACmEc,YADnE,EACuGR,MADvG,EAEoBS,QAFpB,EAE2C;AAAA;;AAFvB,aAAAH,WAAA,GAAAA,WAAA;AAAiC,aAAAC,SAAA,GAAAA,SAAA;AACR,aAAAb,KAAA,GAAAA,KAAA;AAAsB,aAAAc,YAAA,GAAAA,YAAA;AAAoC,aAAAR,MAAA,GAAAA,MAAA;AACnF,aAAAS,QAAA,GAAAA,QAAA;AAA0B;;;;mCAEnC;AACT,eAAKC,OAAL,GAAe,KAAKhB,KAAL,CAAWiB,GAAX,CAAeC,KAAf,CAAqB,CAAC,CAAtB,CAAf;AACD;;;yCAEgB;AAAA;;AACf,eAAKJ,YAAL,CAAkBK,WAAlB,CAA8B,KAAKnB,KAAL,CAAWiB,GAAzC,EAA8CG,SAA9C,CAAwD,UAACC,QAAD,EAAmB;AACzE,iBAAI,CAACC,kBAAL,CAAwBD,QAAQ,CAACE,MAAjC;;AACA,iBAAI,CAACV,SAAL,CAAeW,KAAf;;AACA,iBAAI,CAAClB,MAAL,CAAYC,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACD,WAJD;AAKD;;;wCAEe;AACd,eAAKM,SAAL,CAAeW,KAAf;AACA,eAAKlB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;2CAEkBgB,M,EAAa;AAC9B,cAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB,iBAAKR,QAAL,CAAcU,IAAd,oBAA+B,KAAKT,OAApC,6BAAqE,SAArE,EAAgF;AAC9EU,wBAAU,EAAE,CAAC,gBAAD;AADkE,aAAhF;AAGD,WAJD,MAIO;AACL,iBAAKX,QAAL,CAAcU,IAAd,oBAA+B,KAAKT,OAApC,yBAAiE,SAAjE,EAA4E;AAC1EU,wBAAU,EAAE,CAAC,cAAD;AAD8D,aAA5E;AAGD;;AACD,eAAKd,WAAL,CAAiBe,YAAjB;AACD;;;;;;;uBAnCUhB,yB,EAAyB,0I,EAAA,sI,EAAA,gEAIf,wEAJe,C,EAIA,4I,EAAA,uH,EAAA,wI;AAAA,K;;;YAJzBA,yB;AAAyB,6C;AAAA,e;AAAA,a;AAAA,+E;AAAA;AAAA;ACbtC;;AACI;;AAAG;;AAA0G;;AACjH;;AACA;;AAAuB;;AAAuB;;AAC9C;;AACI;;AAA0B;AAAA,mBAAS,IAAAiB,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAM;;AAC1D;;AAA0B;AAAA,mBAAS,IAAAC,cAAA,EAAT;AAAyB,WAAzB;;AAA2B;;AAAO;;AAChE;;;;AANO;;AAAA;;;;;;;;;sEDYMlB,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACT3B,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK2B,Q;;;;;;;;kBAIvB,oD;mBAAQ,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa4C,yB;;;AAIX,yCAAoBC,MAApB,EAA+CzB,MAA/C,EAAuES,QAAvE,EAA8F;AAAA;;AAA1E,aAAAgB,MAAA,GAAAA,MAAA;AAA2B,aAAAzB,MAAA,GAAAA,MAAA;AAAwB,aAAAS,QAAA,GAAAA,QAAA;AAA0B;;;;+BAE1FiB,M,EAAQ;AACb,eAAKC,IAAL,GAAaD,MAAM,CAACC,IAApB;AACD;;;mCAEU,CACV;;;wCAEe;AACd,eAAKA,IAAL,CAAUC,QAAV,KAAuB,KAAvB,GACE,KAAKH,MAAL,CAAYN,IAAZ,CAAiB,0GAAjB,EAA4C;AAC5CQ,gBAAI,EAAE,KAAKA,IADiC;AAE5CE,wBAAY,EAAE,IAF8B;AAG5CT,sBAAU,EAAE,CAAC,yBAAD,CAHgC;AAI5CU,iBAAK,EAAE;AAJqC,WAA5C,CADF,GAOE,KAAKrB,QAAL,CAAcU,IAAd,CAAmB,oDAAnB,EAAyE,SAAzE,EAAoF;AAClFC,sBAAU,EAAE,CAAC,cAAD;AADsE,WAApF,CAPF;AASD;;;sCAEa;AACZ,eAAKpB,MAAL,CAAYC,QAAZ,CAAqB,CAAC,QAAD,EAAW,KAAK0B,IAAL,CAAUhB,GAArB,CAArB;AACD;;;;;;;uBA3BUa,yB,EAAyB,mI,EAAA,uH,EAAA,wI;AAAA,K;;;YAAzBA,yB;AAAyB,6C;AAAA,c;AAAA,a;AAAA,sF;AAAA;AAAA;ACXtC;;AAAyB;AAAA,mBAAS,IAAAO,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAI;;AACrD;;AAA2B;AAAA,mBAAS,IAAAC,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAM;;;;;;;;sEDU9CR,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACT9C,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaqD,sB;;;;;;;;;mCAEA,CACV;;;;;;;uBAHUA,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA,uC;AAAA;AAAA;ACPnC;;AACA;;AACI;;AACJ;;;;;;;;;sEDIaA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTvD,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;AEPnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACJ;;;;;;;;;;;;;;AAMQ;;AAA+F;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAa;;;;;;AAA9G;;;;;;;;;;;;;;AAC1B;;AAA2F;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAe;;;;;;AAA5G;;;;;;;;AANlC;;AACI;;AACI;;AAAiB;;AAAK;;AACtB;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAI;;AACtD;;AAA0F;;AAAK;;AAC/F;;AACA;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;;;;;AAViE;;AAAA;;AACc;;AAAA;;AACH;;AAAA;;AAIpD;;AAAA,0FAAe,SAAf,EAAe,gBAAf;;AACF;;AAAA;;;;;;AAItB;;AACI;;AACI;;AAA4B;;AAAkC;;AAClE;;AACA;;AAAuB;;AAA6B;;AACpD;;AACA;;AAAuB;;AAAI;;AAC3B;;AACJ;;;;;;AAHsB;;AAAA,0FAAe,SAAf,EAAe,gBAAf;;AAEF;;AAAA,0FAAe,SAAf,EAAe,gBAAf;;;;QDVPsD,c;;;AAMX,8BAAoBC,cAApB,EAA4D7B,WAA5D,EAA8FN,MAA9F,EACoBQ,YADpB,EACwDC,QADxD,EAC+E;AAAA;;AAD3D,aAAA0B,cAAA,GAAAA,cAAA;AAAwC,aAAA7B,WAAA,GAAAA,WAAA;AAAkC,aAAAN,MAAA,GAAAA,MAAA;AAC1E,aAAAQ,YAAA,GAAAA,YAAA;AAAoC,aAAAC,QAAA,GAAAA,QAAA;AANxD,aAAA2B,OAAA,GAAU,IAAV;AAGA,aAAAC,YAAA,GAAe,IAAI,iDAAJ,EAAf;AAGkF;;;;mCAEvE;AAAA;;AACT,eAAKA,YAAL,CAAkBC,GAAlB,CACE,KAAKH,cAAL,CAAoBT,MAApB,CAA2Ba,IAA3B,CACE,iEAAU,UAAAb,MAAM;AAAA,mBAAI,MAAI,CAACpB,WAAL,CAAiBkC,YAAjB,CAA8Bd,MAAM,CAACzE,EAArC,CAAJ;AAAA,WAAhB,CADF,EAEE,4DAAK,CAAL,CAFF,EAGE6D,SAHF,CAGY,UAACpB,KAAD,EAAkB;AAC5B,kBAAI,CAAC+C,mBAAL,CAAyB/C,KAAzB;;AACA,kBAAI,CAACA,KAAL,GAAaA,KAAb;AACA,kBAAI,CAACgB,OAAL,GAAehB,KAAK,CAACiB,GAAN,CAAUC,KAAV,CAAgB,CAAC,CAAjB,CAAf;;AACA,kBAAI,CAAC8B,kBAAL;;AACA,kBAAI,CAACC,eAAL;;AACA,kBAAI,CAACP,OAAL,GAAe,KAAf;AACD,WAVD,CADF;AAaD;;;sCAEa;AACZ,eAAKC,YAAL,CAAkBO,WAAlB;AACD;;;sCAEa;AACZ,eAAK5C,MAAL,CAAYC,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACD;;;0CAEiB;AAAA;;AAChB,cAAM2B,QAAQ,GAAG;AAACA,oBAAQ,EAAE,CAAC,KAAKlC,KAAL,CAAWkC;AAAvB,WAAjB;AACA,eAAKpB,YAAL,CAAkBqC,mBAAlB,CAAsC,KAAKnD,KAAL,CAAWiB,GAAjD,EAAsDiB,QAAtD,EAAgEd,SAAhE,CAA0E,UAACC,QAAD,EAAmB;AAC3F,kBAAI,CAACC,kBAAL,CAAwBD,QAAQ,CAACE,MAAjC;AACD,WAFD;AAGD;;;4CAEmBvB,K,EAAY;AAC9B,cAAIA,KAAK,KAAKoD,SAAV,IAAuBC,MAAM,CAACC,OAAP,CAAetD,KAAf,EAAsBuD,MAAtB,KAAiC,CAAjC,IAAsCvD,KAAK,CAACwD,WAAN,KAAsBH,MAAvF,EAA+F;AAC7F,iBAAKtC,QAAL,CAAcU,IAAd,CAAmB,oCAAnB,EAAyD,SAAzD,EAAoE;AAClEC,wBAAU,EAAE,CAAC,cAAD;AADsD,aAApE;AAGA,iBAAKpB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;AACF;;;2CAEkBgB,M,EAAa;AAC9B,cAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB,gBAAIkC,MAAJ;AACA,iBAAKzD,KAAL,CAAWkC,QAAX,GAAsBuB,MAAM,GAAG,YAA/B,GAA8CA,MAAM,GAAG,UAAvD;AACA,iBAAK1C,QAAL,CAAcU,IAAd,2BAAsCgC,MAAtC,QAAiD,SAAjD,EAA4D;AAC1D/B,wBAAU,EAAE,CAAC,gBAAD;AAD8C,aAA5D;AAEA,iBAAK1B,KAAL,CAAWkC,QAAX,GAAsB,CAAC,KAAKlC,KAAL,CAAWkC,QAAlC;AACD,WAND,MAMO;AACL,iBAAKnB,QAAL,CAAcU,IAAd,CAAmB,yBAAnB,EAA8C,SAA9C,EAAyD;AACvDC,wBAAU,EAAE,CAAC,cAAD;AAD2C,aAAzD;AAED;;AACD,eAAKd,WAAL,CAAiBe,YAAjB;AACD;;;6CAEoB;AACnB,eAAK3B,KAAL,CAAWD,IAAX,CAAgB2D,OAAhB,CAAwB,UAACC,UAAD,EAAiC;AACvDA,sBAAU,CAACC,QAAX,CAAoBC,IAApB,CACE,UAACC,MAAD,EAASC,KAAT;AAAA,qBAAmBD,MAAM,CAACE,WAAP,CAAmBC,IAAnB,GAA0BC,WAA1B,KAA0CH,KAAK,CAACC,WAAN,CAAkBC,IAAlB,GAAyBC,WAAzB,EAA1C,GAAmF,CAAnF,GAAuF,CAAC,CAA3G;AAAA,aADF;AAED,WAHD;AAID;;;0CAEiB;AAChB,eAAKlE,KAAL,CAAWD,IAAX,CAAgB8D,IAAhB,CAAqB,UAACC,MAAD,EAASC,KAAT;AAAA,mBAAmBD,MAAM,CAACK,QAAP,CAAgBF,IAAhB,GAAuBC,WAAvB,KAAuCH,KAAK,CAACI,QAAN,CAAeF,IAAf,GAAsBC,WAAtB,EAAvC,GAA6E,CAA7E,GAAiF,CAAC,CAArG;AAAA,WAArB;AACD;;;;;;;uBAxEU1B,c,EAAc,+H,EAAA,0I,EAAA,uH,EAAA,4I,EAAA,wI;AAAA,K;;;YAAdA,c;AAAc,qC;AAAA,c;AAAA,a;AAAA,umB;AAAA;AAAA;ACf3B;;AAGA;;AAeA;;;;AAlBkB;;AAGW;;AAAA;;AAeL;;AAAA;;;;;;;;;sEDHXA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTxD,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEf3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACJ;;;;;;;;AACA;;AACI;;AACI;;AAAwB;;AAAM;;AAC9B;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAc;;AACrE;;AACA;;AACI;;AAUJ;;AACJ;;;;;;AARQ;;AAAA,oGAAyB,eAAzB,EAAyB,sBAAzB,EAAyB,uBAAzB,EAAyB,IAAzB,EAAyB,YAAzB,EAAyB,IAAzB,EAAyB,wBAAzB,EAAyB,IAAzB,EAAyB,SAAzB,EAAyB,gBAAzB;;;;QDAKkF,e;;;AA8BX,+BAAoBxD,WAApB,EAA8C;AAAA;;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AA7BpB,aAAAyD,UAAA,GAAa,CACX;AAACC,oBAAU,EAAE,YAAb;AAA2BC,eAAK,EAAE;AAAlC,SADW,EAEX;AAACD,oBAAU,EAAE,WAAb;AAA0BC,eAAK,EAAE;AAAjC,SAFW,EAGX;AAACD,oBAAU,EAAE,aAAb;AAA4BC,eAAK,EAAE;AAAnC,SAHW,EAIX;AAACD,oBAAU,EAAE,UAAb;AAAyBC,eAAK,EAAE,gBAAhC;AACEC,oBAAU,EAAE,oBAACC,WAAD,EAAcC,YAAd;AAAA,mBAA+B,MAAI,CAACC,gBAAL,CAAsBF,WAAtB,EAAmCC,YAAnC,CAA/B;AAAA;AADd,SAJW,EAMX;AAACJ,oBAAU,EAAE,SAAb;AAAwBC,eAAK,EAAE;AAA/B,SANW,EAOX;AAACD,oBAAU,EAAE,OAAb;AAAsBC,eAAK,EAAE;AAA7B,SAPW,EAQX;AAACD,oBAAU,EAAE,OAAb;AAAsBC,eAAK,EAAE;AAA7B,SARW,EASX;AAACD,oBAAU,EAAE,UAAb;AAAyBC,eAAK,EAAE;AAAhC,SATW,EAUX;AAACD,oBAAU,EAAE,SAAb;AAAwBC,eAAK,EAAE,YAA/B;AAA6CnC,eAAK,EAAE;AAApD,SAVW,EAWX;AAACkC,oBAAU,EAAE,UAAb;AAAyBC,eAAK,EAAE,UAAhC;AAA4CnC,eAAK,EAAE,EAAnD;AAAuDyB,cAAI,EAAE;AAA7D,SAXW,EAYX;AAACS,oBAAU,EAAE,EAAb;AAAiBC,eAAK,EAAE,QAAxB;AAAkCK,gBAAM,EAAE,KAA1C;AAAiDC,kBAAQ,EAAE,KAA3D;AAAkEzC,eAAK,EAAE,GAAzE;AAA8E0C,+BAAqB,EAAE;AAArG,SAZW,CAAb;AAcA,aAAAC,aAAA,GAAgB;AACdH,gBAAM,EAAE,IADM;AAEdI,sBAAY,EAAE;AACZC,kCAAsB,EAAE;AADZ,WAFA;AAKdC,mBAAS,EAAE,IALG;AAMdL,kBAAQ,EAAE,IANI;AAOdzC,eAAK,EAAE;AAPO,SAAhB;AAUA,aAAAM,OAAA,GAAU,IAAV;AAEA,aAAAC,YAAA,GAAe,IAAI,iDAAJ,EAAf;AACA,aAAAwC,OAAA,GAAU,EAAV;AAEiD;;;;mCAEtC;AAAA;;AACT,eAAKxC,YAAL,CAAkBC,GAAlB,CACI,KAAKhC,WAAL,CAAiBwE,SAAjB,GAA6BhE,SAA7B,CAAuC,UAACiE,MAAD,EAAqB;AAC5D,kBAAI,CAACA,MAAL,GAAcA,MAAd;AACA,kBAAI,CAACF,OAAL,GAAe,MAAI,CAACG,kBAAL,EAAf;AACA,kBAAI,CAAC5C,OAAL,GAAe,KAAf;AACD,WAJC,CADJ;AAOD;;;sCAEa;AACZ,eAAKC,YAAL,CAAkBO,WAAlB;AACD;;;6CAE4B;AAC3B,cAAMiC,OAAO,GAAG,EAAhB;AACA,eAAKE,MAAL,CAAY3B,OAAZ,CAAoB,UAAC1D,KAAD,EAAkB;AACpC,gBAAMuF,QAAQ,GAAG,EAAjB;AACA,gBAAMpF,MAAM,GAAIH,KAAK,CAACG,MAAtB;AACAkD,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,KAAhC,EAAuC;AAACE,mBAAK,EAAEzF,KAAK,CAACiB;AAAd,aAAvC;AACAoC,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,WAAhC,EAA6C;AAACE,mBAAK,EAAEtF,MAAM,CAACuF;AAAf,aAA7C;AACArC,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,UAAhC,EAA4C;AAACE,mBAAK,EAAEtF,MAAM,CAACwF;AAAf,aAA5C;AACAtC,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,YAAhC,EAA8C;AAACE,mBAAK,EAAEzF,KAAK,CAACG,MAAN,CAAayF;AAArB,aAA9C;AACAzF,kBAAM,CAAC0F,cAAP,GACExC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,gBAAhC,EAAkD;AAACE,mBAAK,EAAEtF,MAAM,CAAC0F;AAAf,aAAlD,CADF,GAEExC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,gBAAhC,EAAkD;AAACE,mBAAK,EAAE;AAAR,aAAlD,CAFF;AAGAtF,kBAAM,CAAC2F,OAAP,GACEzC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,SAAhC,EAA2C;AAACE,mBAAK,EAAE;AAAR,aAA3C,CADF,GAEEpC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,SAAhC,EAA2C;AAACE,mBAAK,EAAE;AAAR,aAA3C,CAFF;AAGApC,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,aAAhC,EAA+C;AAACE,mBAAK,EAAEtF,MAAM,CAAC4F;AAAf,aAA/C;AACA5F,kBAAM,CAAC6F,YAAP,GACE3C,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,cAAhC,EAAgD;AAACE,mBAAK,EAAEtF,MAAM,CAAC6F;AAAf,aAAhD,CADF,GAEE3C,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,cAAhC,EAAgD;AAACE,mBAAK,EAAE;AAAR,aAAhD,CAFF;AAGAtF,kBAAM,CAAC8F,QAAP,GACE5C,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,UAAhC,EAA4C;AAACE,mBAAK,EAAE;AAAR,aAA5C,CADF,GAEEpC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,UAAhC,EAA4C;AAACE,mBAAK,EAAE;AAAR,aAA5C,CAFF;AAGApC,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,YAAhC,EAA8C;AAACE,mBAAK,EAAEzF,KAAK,CAACI;AAAd,aAA9C;AACAJ,iBAAK,CAACkC,QAAN,GACEmB,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,UAAhC,EAA4C;AAACE,mBAAK,EAAE;AAAR,aAA5C,CADF,GAEEpC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,UAAhC,EAA4C;AAACE,mBAAK,EAAE;AAAR,aAA5C,CAFF;AAGAN,mBAAO,CAACe,IAAR,CAAaX,QAAb;AACD,WAzBD;AA0BA,iBAAOJ,OAAP;AACD;;;yCAEwBgB,W,EAAkBC,Y,EAAmB;AAC5D,cAAIC,KAAK,CAACF,WAAD,CAAT,EAAwB;AACtBA,uBAAW,GAAG,CAAd;AACD;;AACD,cAAIE,KAAK,CAACD,YAAD,CAAT,EAAyB;AACvBA,wBAAY,GAAG,CAAf;AACD;;AACD,iBAAOD,WAAW,GAAGC,YAAd,GAA6B,CAA7B,GAAiC,CAAC,CAAzC;AACD;;;uCAEc;AACb,eAAKxF,WAAL,CAAiBe,YAAjB;AACD;;;;;;;uBAzFUyC,e,EAAe,0I;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,qa;AAAA;AAAA;ACZ5B;;AAGA;;;;AAHkB;;AAGe;;AAAA;;;;;;;;;sEDSpBA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTpF,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCA;;AACI;;AACJ;;;;;;;;;;;;;;;AACA;;AACI;;AAII;;AACA;AAAA;;AAAA;;AAAA,iBAAW,OAAAoH,kBAAA,oBAAsC,MAAtC,EAA6C,IAA7C,CAAX;AAA6D,SAA7D,EAA8D,QAA9D,EAA8D;AAAA;;AAAA;;AAAA,iBACpD,OAAAA,kBAAA,oBAAsC,MAAtC,EAA6C,KAA7C,CADoD;AACD,SAD7D;;AAGI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACJ;;AACA;;AACA;AAAA;;AAAA;;AAAA,iBAAW,OAAAA,kBAAA,oBAAsC,MAAtC,EAA6C,IAA7C,CAAX;AAA6D,SAA7D,EAA8D,QAA9D,EAA8D;AAAA;;AAAA;;AAAA,iBACpD,OAAAA,kBAAA,oBAAsC,MAAtC,EAA6C,KAA7C,CADoD;AACD,SAD7D;;AAGI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACJ;;AACA;;AACA;AAAA;;AAAA;;AAAA,iBAAW,OAAAA,kBAAA,oBAAsC,SAAtC,EAAgD,IAAhD,CAAX;AAAgE,SAAhE,EAAiE,QAAjE,EAAiE;AAAA;;AAAA;;AAAA,iBACvD,OAAAA,kBAAA,oBAAsC,SAAtC,EAAgD,KAAhD,CADuD;AACD,SADhE;;AAGI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACJ;;AACJ;;AACJ;;;;;;AA/C6C;;AAAA;;AAOrC;;AAAA;;AAMY;;AAAA;;AAQZ;;AAAA;;AAMY;;AAAA;;AAQZ;;AAAA;;AAMY;;AAAA;;;;QDrCPC,uB;;;AAOX,uCAAmBD,kBAAnB,EAA2D;AAAA;;AAAxC,aAAAA,kBAAA,GAAAA,kBAAA;AANnB,aAAA5D,OAAA,GAAU,IAAV;AACA,aAAA8D,qBAAA,GAAwB,KAAxB;AACA,aAAAC,kBAAA,GAAqB,KAArB;AACA,aAAA9D,YAAA,GAAe,IAAI,iDAAJ,EAAf;AACA,aAAA+D,kBAAA,GAAqB,KAArB;AAE8D;;;;mCAEnD;AAAA;;AACT,eAAK/D,YAAL,CAAkBC,GAAlB,CACE,KAAK0D,kBAAL,CAAwBK,kBAAxB,GAA6CvF,SAA7C,CAAuD,UAACwF,eAAD,EAAqB;AAC1E,kBAAI,CAACJ,qBAAL,GAA6BI,eAAe,CAACC,GAAhB,CAAoB,SAApB,CAA7B;AACA,kBAAI,CAACH,kBAAL,GAA0BE,eAAe,CAACC,GAAhB,CAAoB,MAApB,CAA1B;AACA,kBAAI,CAACJ,kBAAL,GAA0BG,eAAe,CAACC,GAAhB,CAAoB,MAApB,CAA1B;AACA,kBAAI,CAACnE,OAAL,GAAe,KAAf;AACD,WALD,CADF;AAQD;;;sCAEa;AACZ,eAAKC,YAAL,CAAkBO,WAAlB;AACD;;;;;;;uBAtBUqD,uB,EAAuB,yJ;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,c;AAAA,a;AAAA,iM;AAAA;AAAA;ACTpC;;AACA;;AAGA;;;;AAHkB;;AAAA;;AAGW;;AAAA;;;;;;;;;sEDKhBA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTvH,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;AETpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACJ;;;;;;AAGQ;;AAAyD;;AAAc;;;;;;AAU/D;;AAAuE;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAcvE;;AAAkE;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAUlE;;AAAkE;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAUlE;;AAAkE;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;;;AAKtE;;AACI;;AAAM;;AAA4C;;AAClD;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAa;;AACtE;;;;;;;;AACA;;AACI;;AAAM;;AAAc;;AACpB;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAiB;;AACzE;;;;;;AAkBoB;;AAA2G;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAe/G;;AAA2G;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAqB3G;;AAA0G;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAM9G;;AAAuF;;AAA2D;;;;;;;;AA1D1J;;AACI;;AACI;;AACI;;AACI;;AAAW;;AAAmB;;AAC9B;;AACI;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AAC3B;;AACA;;AACJ;;AACA;;AACA;;AAAW;;AAAmB;;AAC9B;;AACI;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AAC3B;;AACA;;AACA;;AACA;;AACA;;AAAW;;AAAa;;AACxB;;AACI;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AAC7B;;AACA;;AACA;;AACA;;AACI;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAY;;AACxE;;AACJ;;AACA;;AACJ;;AACJ;;;;;;;;AA3DkB;;AAAA;;AAKc;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAKC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAKK;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAMJ;;AAAA;;;;;;AA3DvB;;AACI;;AA6DJ;;;;;;AA7D4C;;AAAA;;;;;;;;AA5DxD;;AACI;;AACI;;AACA;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAM;;AAC1D;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAAuD;;AAAqB;;AAC1G;;AACA;;AACI;;AACI;;AACI;;AACA;;AAAW;;AAAY;;AACvB;;AACA;;AACA;;AACJ;;AACA;;AACI;;AACA;;AAAW;;AAAM;;AACjB;;AACI;;AAA0B;;AAAI;;AAC9B;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AAC3B;;AACA;;AACA;;AACJ;;AACA;;AACI;;AACA;;AAAW;;AAAa;;AACxB;;AACI;;AAAyB;;AAAG;;AAC5B;;AAA0B;;AAAE;;AAChC;;AACA;;AACA;;AACJ;;AACA;;AACI;;AACA;;AAAW;;AAAO;;AAClB;;AACI;;AAAyB;;AAAG;;AAC5B;;AAA0B;;AAAE;;AAChC;;AACA;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AAIA;;AAIA;;AA+DJ;;AACJ;;AACJ;;;;;;AA1Hc;;AAAA;;AAE2C;;AAAA;;AAGrB;;AAAA;;AAKT;;AAAA;;AAOK;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAOK;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAOK;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAIO;;AAAA;;AACU;;AAAA;;AAIX;;AAAA;;AAIqB;;AAAA;;;;ADtD/C,QAAM4H,eAAe,GAAgB,SAA/BA,eAA+B,CAACC,SAAD,EAA0B;AACpE,UAAMC,UAAU,GAAGD,SAAS,CAACF,GAAV,CAAc,YAAd,EAA4BpB,KAA/C;AACA,UAAMwB,UAAU,GAAGF,SAAS,CAACF,GAAV,CAAc,YAAd,EAA4BpB,KAA/C;;AACA,UAAIuB,UAAU,KAAK,EAAf,IAAqBC,UAAU,KAAK,EAAxC,EAA4C;AAC1C,eAAOD,UAAU,GAAGC,UAAb,GAA0B;AAACC,gBAAM,EAAE;AAAT,SAA1B,GAA2C,IAAlD;AACD;AACF,KANM;;QAaMC,mB;;;AAaX,mCAAsBvG,WAAtB,EAA0DwG,WAA1D,EAA8FC,cAA9F,EACsBtG,QADtB,EACuDT,MADvD,EACuE;AAAA;;AADjD,aAAAM,WAAA,GAAAA,WAAA;AAAoC,aAAAwG,WAAA,GAAAA,WAAA;AAAoC,aAAAC,cAAA,GAAAA,cAAA;AACxE,aAAAtG,QAAA,GAAAA,QAAA;AAAiC,aAAAT,MAAA,GAAAA,MAAA;AAbvD,aAAAgH,YAAA,GAAe,KAAf;AACA,aAAA5E,OAAA,GAAU,IAAV;AAEA,aAAA6E,OAAA,GAAU,IAAI,oEAAJ,EAAV;AACA,aAAAC,WAAA,GAAc,IAAI,wDAAJ,CAAc;AAC1BxD,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWyD,QAA/B,CADa;AAE1BC,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,QAA/B,CAFkB;AAG1BE,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWF,QAA/B,CAHkB;AAI1BG,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWH,QAA/B;AAJkB,SAAd,CAAd;AAMA,aAAAI,aAAA,GAAgB,yBAAhB;AAG0E;;;;mCAE/D;AACT,eAAKnF,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;;;wCAEe;AACd,eAAKoF,cAAL,CAAoB5B,IAApB,CAAyB,KAAKkB,WAAL,CAAiBW,KAAjB,CAAuB;AAC9Cf,sBAAU,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWS,QAAZ,CAAL,CADkC;AAE9CR,sBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWQ,QAAhB,CAFkC;AAG9CO,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB;AAHmC,WAAvB,EAItB;AAAEQ,qBAAS,EAAEnB;AAAb,WAJsB,CAAzB;AAMD;;;yCAEgBoB,K,EAAe;AAC9B,eAAKZ,YAAL,GAAoB,IAApB;AACA,eAAKQ,cAAL,CAAoBK,QAApB,CAA6BD,KAA7B;;AACA,cAAI,CAAC,KAAKJ,cAAL,CAAoBvE,MAAzB,EAAiC;AAC/B,iBAAKiE,WAAL,CAAiBY,aAAjB,CAA+B,gBAA/B;AACD;AACF;;;yCAEgB;AACf,eAAKN,cAAL,GAAsB,IAAI,wDAAJ,CAAc,EAAd,CAAtB;AACA,eAAKO,aAAL;AACA,eAAKb,WAAL,CAAiBc,UAAjB,CAA4B,gBAA5B,EAA8C,KAAKR,cAAnD;AACD;;;qCAEY;AAAA;;AACX,cAAI,KAAKN,WAAL,CAAiBe,KAArB,EAA4B;AAC1B,iBAAKC,gBAAL;AACA,iBAAKnB,cAAL,CAAoBoB,UAApB,CAA+B,KAAKlB,OAApC,EAA6CnG,SAA7C,CAAuD,UAACC,QAAD,EAAmB;AACxE,oBAAI,CAACC,kBAAL,CAAwBD,QAAQ,CAACE,MAAjC;;AACA,oBAAI,CAACjB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD,aAHD;AAID;AACF;;;wCAEe;AACd,eAAKD,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;2CAEkB;AACjB,eAAKgH,OAAL,CAAavD,WAAb,GAA2B,KAAKwD,WAAL,CAAiBX,GAAjB,CAAqB,aAArB,EAAoCpB,KAA/D;AACA,eAAK+B,WAAL,CAAiBX,GAAjB,CAAqB,gBAArB,KAA0C,KAAKiB,cAAL,CAAoBvE,MAA9D,GACE,KAAKgE,OAAL,CAAaO,cAAb,GAA8B,KAAKN,WAAL,CAAiBX,GAAjB,CAAqB,gBAArB,EAAuCpB,KADvE,GAEE,KAAK8B,OAAL,CAAaO,cAAb,GAA8B1E,SAFhC;AAGA,eAAKoE,WAAL,CAAiBX,GAAjB,CAAqB,QAArB,KAAkC,KAAKW,WAAL,CAAiBX,GAAjB,CAAqB,QAArB,EAA+BpB,KAAjE,GACE,KAAK8B,OAAL,CAAaG,MAAb,GAAsB,KAAKF,WAAL,CAAiBX,GAAjB,CAAqB,QAArB,EAA+BpB,KADvD,GAEE,KAAK8B,OAAL,CAAaG,MAAb,GAAsBtE,SAFxB;AAGA,eAAKoE,WAAL,CAAiBX,GAAjB,CAAqB,QAArB,KAAkC,KAAKW,WAAL,CAAiBX,GAAjB,CAAqB,QAArB,EAA+BpB,KAAjE,GACE,KAAK8B,OAAL,CAAaI,MAAb,GAAsB,KAAKH,WAAL,CAAiBX,GAAjB,CAAqB,QAArB,EAA+BpB,KADvD,GAEE,KAAK8B,OAAL,CAAaI,MAAb,GAAsBvE,SAFxB;AAGA,eAAKoE,WAAL,CAAiBX,GAAjB,CAAqB,QAArB,KAAkC,KAAKW,WAAL,CAAiBX,GAAjB,CAAqB,QAArB,EAA+BpB,KAAjE,GACE,KAAK8B,OAAL,CAAaK,MAAb,GAAsB,KAAKJ,WAAL,CAAiBX,GAAjB,CAAqB,QAArB,EAA+BpB,KADvD,GAEE,KAAK8B,OAAL,CAAaK,MAAb,GAAsBxE,SAFxB;AAGD;;;2CAEkB7B,M,EAAa;AAC9B,cAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB,iBAAKR,QAAL,CAAcU,IAAd,WAAsB,KAAK8F,OAAL,CAAavD,WAAnC,6BAAwE,SAAxE,EAAmF;AACjFtC,wBAAU,EAAE,CAAC,gBAAD;AADqE,aAAnF;AAGD,WAJD,MAIO;AACL,iBAAKX,QAAL,CAAcU,IAAd,WAAsB,KAAK8F,OAAL,CAAavD,WAAnC,yBAAoE,SAApE,EAA+E;AAC7EtC,wBAAU,EAAE,CAAC,cAAD;AADiE,aAA/E;AAGD;;AACD,eAAKd,WAAL,CAAiB8H,cAAjB;AACA,eAAK9H,WAAL,CAAiB+H,UAAjB;AACA,eAAK/H,WAAL,CAAiBgI,WAAjB;AACD;;;;;;;uBAtFUzB,mB,EAAmB,0I,EAAA,2H,EAAA,gJ,EAAA,wI,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,c;AAAA,a;AAAA,0nC;AAAA;AAAA;ACrBhC;;AAGA;;;;AAHkB;;AAGW;;AAAA;;;;;;;;;sEDkBhBA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTnI,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAca2J,2B;;;AAEX,2CAAoBjI,WAApB,EAAqDC,SAArD,EAC6C0G,OAD7C,EACuEF,cADvE,EAEoB/G,MAFpB,EAE4CS,QAF5C,EAEmE;AAAA;;AAF/C,aAAAH,WAAA,GAAAA,WAAA;AAAiC,aAAAC,SAAA,GAAAA,SAAA;AACR,aAAA0G,OAAA,GAAAA,OAAA;AAA0B,aAAAF,cAAA,GAAAA,cAAA;AACnD,aAAA/G,MAAA,GAAAA,MAAA;AAAwB,aAAAS,QAAA,GAAAA,QAAA;AAA0B;;;;mCAE3D,CAAE;;;wCAGW;AAAA;;AACtB,eAAKsG,cAAL,CAAoByB,aAApB,CAAkC,KAAKvB,OAAL,CAAatG,GAA/C,EAAoDG,SAApD,CAA8D,UAACC,QAAD,EAAmB;AAC/E,kBAAI,CAACC,kBAAL,CAAwBD,QAAQ,CAACE,MAAjC;AACD,WAFD;AAGD;;;wCAEe;AACd,eAAKV,SAAL,CAAeW,KAAf;AACA,eAAKlB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;yCAEgB;AACf,eAAKuI,aAAL;AACA,eAAKjI,SAAL,CAAeW,KAAf;AACA,eAAKlB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;2CAE0BgB,M,EAAa;AACtC,cAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB,iBAAKR,QAAL,CAAcU,IAAd,WAAsB,KAAK8F,OAAL,CAAavD,WAAnC,6BAAwE,SAAxE,EAAmF;AACjFtC,wBAAU,EAAE,CAAC,gBAAD;AADqE,aAAnF;AAGD,WAJD,MAIO;AACL,iBAAKX,QAAL,CAAcU,IAAd,WAAsB,KAAK8F,OAAL,CAAavD,WAAnC,yBAAoE,SAApE,EAA+E;AAC7EtC,wBAAU,EAAE,CAAC,cAAD;AADiE,aAA/E;AAGD;;AACD,eAAKd,WAAL,CAAiB8H,cAAjB;AACA,eAAK9H,WAAL,CAAiBgI,WAAjB;AACA,eAAKhI,WAAL,CAAiB+H,UAAjB;AACD;;;;;;;uBAvCUE,2B,EAA2B,0I,EAAA,sI,EAAA,gEAGjB,wEAHiB,C,EAGF,gJ,EAAA,uH,EAAA,wI;AAAA,K;;;YAHzBA,2B;AAA2B,+C;AAAA,e;AAAA,a;AAAA,+E;AAAA;AAAA;ACdxC;;AACI;;AAAG;;AAC0C;;AACjD;;AACA;;AAAuB;;AAAuB;;AAC9C;;AACI;;AAA0B;AAAA,mBAAS,IAAAjH,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAM;;AAC1D;;AAA0B;AAAA,mBAAS,IAAAC,cAAA,EAAT;AAAyB,WAAzB;;AAA2B;;AAAO;;AAChE;;;;AAPO;;AAAA;;;;;;;;;sEDaMgH,2B,EAA2B;cALvC,uDAKuC;eAL7B;AACT7J,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,uCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK6B,Q;;;;;;;;kBAGzB,oD;mBAAQ,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACJ;;;;;;;;AAKQ;;AAAsD;AAAA;;AAAA;;AAAA;AAAA;;AAAqG;;AAAoB;;;;;;AAA/F;;;;;;AAQxE;;AAAuE;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAcvE;;AAAkE;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAUlE;;AAAkE;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAUlE;;AAAkE;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAGtE;;AAA8B;;AAAqB;;;;;;;;AAGnD;;AACI;;AAAM;;AAA4C;;AAClD;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAa;;AACtE;;;;;;;;AACA;;AACI;;AAAM;;AAAc;;AACpB;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAiB;;AACzE;;;;;;AAkBoB;;AAA2G;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAe/G;;AAA2G;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAqB3G;;AAA0G;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAM9G;;AAAuF;;AAA2D;;;;;;;;AA1D1J;;AACI;;AACI;;AACI;;AACI;;AAAW;;AAAmB;;AAC9B;;AACI;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AAC3B;;AACA;;AACJ;;AACA;;AACA;;AAAW;;AAAmB;;AAC9B;;AACI;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AAC3B;;AACA;;AACA;;AACA;;AACA;;AAAW;;AAAa;;AACxB;;AACI;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AAC7B;;AACA;;AACA;;AACA;;AACI;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAY;;AACxE;;AACJ;;AACA;;AACJ;;AACJ;;;;;;;;AA3DkB;;AAAA;;AAKc;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAKC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAKK;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAMJ;;AAAA;;;;;;AA3DvB;;AACI;;AA6DJ;;;;;;AA7D4C;;AAAA;;;;;;;;;;;;;;AA7DxD;;AACI;;AACI;;AAA4B;;AAAY;;AACxC;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAM;;AAC1D;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AAAW;;AAAY;;AACvB;;AACA;;AACA;;AACJ;;AACA;;AACI;;AACA;;AAAW;;AAAM;;AACjB;;AACI;;AAA0B;;AAAI;;AAC9B;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AAC3B;;AACA;;AACA;;AACJ;;AACA;;AACI;;AACA;;AAAW;;AAAa;;AACxB;;AACI;;AAAyB;;AAAG;;AAC5B;;AAA0B;;AAAE;;AAChC;;AACA;;AACA;;AACJ;;AACA;;AACI;;AACA;;AAAW;;AAAO;;AAClB;;AACI;;AAAyB;;AAAG;;AAC5B;;AAA0B;;AAAE;;AAChC;;AACA;;AACA;;AACJ;;AACA;;AACJ;;AACA;;AACI;;AAIA;;AAIA;;AA+DJ;;AACJ;;AACJ;;;;;;AAzHkC;;AAAA;;AAGE;;AAAA,oKAAyC,WAAzC,EAAyC,mBAAzC;;AAKT;;AAAA;;AAOK;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAOK;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAOK;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAGA;;AAAA;;AAEO;;AAAA;;AACU;;AAAA;;AAIX;;AAAA;;AAIqB;;AAAA;;;;QD7CzC6J,oB;;;;;;;AASX,oCAAoBtG,cAApB,EAA8D7B,WAA9D,EAAkGwG,WAAlG,EACsBC,cADtB,EACgEtG,QADhE,EAEsBT,MAFtB,EAEsC;AAAA;;AAAA;;AACxB,mCAAMM,WAAN,EAAmBwG,WAAnB,EAAgCC,cAAhC,EAAgDtG,QAAhD,EAA0DT,MAA1D;AAHM,eAAAmC,cAAA,GAAAA,cAAA;AAA0C,eAAA7B,WAAA,GAAAA,WAAA;AAAoC,eAAAwG,WAAA,GAAAA,WAAA;AAC5E,eAAAC,cAAA,GAAAA,cAAA;AAA0C,eAAAtG,QAAA,GAAAA,QAAA;AAC1C,eAAAT,MAAA,GAAAA,MAAA;AAVtB,eAAA0I,MAAA,GAAS,KAAT;AACA,eAAAtG,OAAA,GAAU,IAAV;AAIA,eAAAmF,aAAA,GAAgB,wBAAhB;AAKsC;AAEzB;;;;mCAEF;AAAA;;AACT,qEAAc,CACZ,KAAKpF,cAAL,CAAoBT,MAApB,CAA2Ba,IAA3B,CACE,iEAAU,UAAAb,MAAM;AAAA,mBAAI,OAAI,CAACpB,WAAL,CAAiBqI,cAAjB,CAAgCjH,MAAM,CAACzE,EAAvC,CAAJ;AAAA,WAAhB,CADF,EAEE,4DAAK,CAAL,CAFF,CADY,EAIZ,KAAKqD,WAAL,CAAiBsI,OAAjB,EAJY,CAAd,EAKK9H,SALL,CAKe,gBAAqB;AAAA;AAAA,gBAAnBmG,OAAmB;AAAA,gBAAV4B,IAAU;;AAClC,mBAAI,CAACC,qBAAL,CAA2B7B,OAA3B;;AACA,mBAAI,CAACA,OAAL,GAAeA,OAAf;AACA,mBAAI,CAACC,WAAL,GAAmB,IAAI,wDAAJ,CAAc;AAC/BxD,yBAAW,EAAE,IAAI,0DAAJ,CAAgB,OAAI,CAACuD,OAAL,CAAavD,WAA7B,EAA0C,0DAAWyD,QAArD,CADkB;AAE/BC,oBAAM,EAAE,IAAI,0DAAJ,CAAgB,OAAI,CAACH,OAAL,CAAaG,MAAb,GAAsB,OAAI,CAACH,OAAL,CAAaG,MAAnC,GAA4C,KAA5D,EAAmE,0DAAWD,QAA9E,CAFuB;AAG/BE,oBAAM,EAAE,IAAI,0DAAJ,CAAgB,OAAI,CAACJ,OAAL,CAAaI,MAAb,GAAsB,OAAI,CAACJ,OAAL,CAAaI,MAAnC,GAA4C,KAA5D,EAAmE,0DAAWF,QAA9E,CAHuB;AAI/BG,oBAAM,EAAE,IAAI,0DAAJ,CAAgB,OAAI,CAACL,OAAL,CAAaK,MAAb,GAAsB,OAAI,CAACL,OAAL,CAAaK,MAAnC,GAA4C,KAA5D,EAAmE,0DAAWH,QAA9E;AAJuB,aAAd,CAAnB;;AAMA,mBAAI,CAAC4B,qBAAL;;AACA,mBAAI,CAACF,IAAL,GAAYA,IAAZ;;AACA,mBAAI,CAACG,SAAL;;AACA,mBAAI,CAAC5G,OAAL,GAAe,CAAC,OAAI,CAACA,OAArB;AACD,WAlBD;AAmBD;;;wCAEe;AAAA;;AACd,cAAI,KAAK8E,WAAL,CAAiBe,KAArB,EAA4B;AAC1B,iBAAKC,gBAAL;AACA,iBAAKnB,cAAL,CAAoBkC,aAApB,CAAkC,KAAKhC,OAAL,CAAatG,GAA/C,EAAoD,KAAKsG,OAAzD,EAAkEnG,SAAlE,CAA4E,UAACC,QAAD,EAAmB;AAC7F,kBAAIA,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACR,QAAL,CAAcU,IAAd,WAAsB,OAAI,CAAC8F,OAAL,CAAavD,WAAnC,6BAAwE,SAAxE,EAAmF;AACjFtC,4BAAU,EAAE,CAAC,gBAAD;AADqE,iBAAnF;;AAGA,uBAAI,CAACpB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD,eALD,MAKO;AACL,uBAAI,CAACQ,QAAL,CAAcU,IAAd,WAAsB,OAAI,CAAC8F,OAAL,CAAavD,WAAnC,yBAAoE,SAApE,EAA+E;AAC7EtC,4BAAU,EAAE,CAAC,cAAD;AADiE,iBAA/E;;AAGA,uBAAI,CAACpB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;AACD,qBAAI,CAACK,WAAL,CAAiB8H,cAAjB;;AACA,qBAAI,CAAC9H,WAAL,CAAiB+H,UAAjB;;AACA,qBAAI,CAAC/H,WAAL,CAAiBgI,WAAjB;AACD,aAfD;AAgBD;AACF;;;8CAEqBrB,O,EAAc;AAClC,cAAIA,OAAO,KAAKnE,SAAZ,IAAyBC,MAAM,CAACC,OAAP,CAAeiE,OAAf,EAAwBhE,MAAxB,KAAmC,CAAnC,IAAwCgE,OAAO,CAAC/D,WAAR,KAAwBH,MAA7F,EAAqG;AACnG,iBAAKtC,QAAL,CAAcU,IAAd,CAAmB,sCAAnB,EAA2D,SAA3D,EAAsE;AACpEC,wBAAU,EAAE,CAAC,cAAD;AADwD,aAAtE;AAGA,iBAAKpB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;AACF;;;oCAEW;AAAA;;AACV,eAAK4I,IAAL,CAAUA,IAAV,CAAezF,OAAf,CAAuB,UAAC8F,IAAD,EAAgB;AACrCA,gBAAI,CAAC5F,QAAL,CAAcF,OAAd,CAAsB,UAAC6D,OAAD,EAAsB;AAC1C,kBAAI,OAAI,CAACA,OAAL,CAAatG,GAAb,KAAqBsG,OAAO,CAACtG,GAAjC,EAAsC;AACpC,uBAAI,CAAC+H,MAAL,GAAc,IAAd;AACD;AACF,aAJD;AAKD,WAND;AAOD;;;gDAEuB;AAAA;;AACtB,cAAI,KAAKzB,OAAL,CAAaO,cAAjB,EAAiC;AAC/B,iBAAKA,cAAL,GAAsB,IAAI,wDAAJ,CAAc,EAAd,CAAtB;AACA,iBAAKP,OAAL,CAAaO,cAAb,CAA4BpE,OAA5B,CAAoC,UAAA+F,OAAO,EAAI;AAC7C,qBAAI,CAAC3B,cAAL,CAAoB5B,IAApB,CAAyB,OAAI,CAACkB,WAAL,CAAiBW,KAAjB,CAAuB;AAC9Cf,0BAAU,EAAE,CAACyC,OAAO,CAACzC,UAAT,EAAqB,0DAAWS,QAAhC,CADkC;AAE9CR,0BAAU,EAAE,CAACwC,OAAO,CAACxC,UAAT,EAAqB,0DAAWQ,QAAhC,CAFkC;AAG9CO,yBAAS,EAAE,CAACyB,OAAO,CAACzB,SAAT,EAAoB,0DAAWP,QAA/B;AAHmC,eAAvB,EAKzB;AAAEQ,yBAAS,EAAE;AAAb,eALyB,CAAzB;;AAOA,qBAAI,CAACT,WAAL,CAAiBc,UAAjB,CAA4B,gBAA5B,EAA8C,OAAI,CAACR,cAAnD;AACD,aATD;AAUD;AACF;;;;MA5FuC,sF;;;uBAA7BiB,oB,EAAoB,+H,EAAA,0I,EAAA,2H,EAAA,gJ,EAAA,wI,EAAA,uH;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,0F;AAAA,c;AAAA,a;AAAA,usC;AAAA;AAAA;AClBjC;;AAGA;;;;AAHkB;;AAGW;;AAAA;;;;;;;;;sEDehBA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT/J,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,6CAFJ;AAGTC,mBAAS,EAAE,CAAC,0CAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUawK,2B;;;AAIX,2CAAoB3H,MAApB,EAA+CzB,MAA/C,EAA+D;AAAA;;AAA3C,aAAAyB,MAAA,GAAAA,MAAA;AAA2B,aAAAzB,MAAA,GAAAA,MAAA;AAAmB;;;;+BAE3D0B,M,EAAQ;AACb,eAAKC,IAAL,GAAaD,MAAM,CAACC,IAApB;AACD;;;mCAEU,CAAE;;;wCAEG;AACd,eAAKF,MAAL,CAAYN,IAAZ,CAAiB,gHAAjB,EAA8C;AAC5CQ,gBAAI,EAAE,KAAKA,IADiC;AAE5CE,wBAAY,EAAE,IAF8B;AAG5CT,sBAAU,EAAE,CAAC,yBAAD,CAHgC;AAI5CU,iBAAK,EAAE;AAJqC,WAA9C;AAMD;;;sCAEa;AACZ,eAAK9B,MAAL,CAAYC,QAAZ,CAAqB,CAAC,UAAD,EAAa,KAAK0B,IAAL,CAAUhB,GAAvB,CAArB;AACD;;;;;;;uBAvBUyI,2B,EAA2B,mI,EAAA,uH;AAAA,K;;;YAA3BA,2B;AAA2B,+C;AAAA,c;AAAA,a;AAAA,sF;AAAA;AAAA;ACVxC;;AAAyB;AAAA,mBAAS,IAAAC,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAI;;AACrD;;AAA4B;AAAA,mBAAS,IAAArH,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAM;;;;;;;;sEDS/CoH,2B,EAA2B;cALvC,uDAKuC;eAL7B;AACT1K,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,uCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK6B,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACJ;;;;;;;;AAEI;;AACI;;AACI;;AAA0B;;AAAQ;;AAClC;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAc;;AAC7E;;AACA;;AAUJ;;;;;;AAPI;;AAAA,oGAAyB,eAAzB,EAAyB,sBAAzB,EAAyB,uBAAzB,EAAyB,IAAzB,EAAyB,YAAzB,EAAyB,IAAzB,EAAyB,wBAAzB,EAAyB,IAAzB,EAAyB,SAAzB,EAAyB,gBAAzB;;;;QDGK0K,iB;;;AA8BX,iCAAoBhJ,WAApB,EAAsDN,MAAtD,EAAsE;AAAA;;AAAA;;AAAlD,aAAAM,WAAA,GAAAA,WAAA;AAAkC,aAAAN,MAAA,GAAAA,MAAA;AA7BtD,aAAA+D,UAAA,GAAa,CACX;AAACC,oBAAU,EAAE,MAAb;AAAqBC,eAAK,EAAE,aAA5B;AAA2CV,cAAI,EAAE;AAAjD,SADW,EAEX;AAACS,oBAAU,EAAE,QAAb;AAAuBC,eAAK,EAAE,QAA9B;AAAwCC,oBAAU,EAAE,oBAAC2B,WAAD,EAAcC,YAAd;AAAA,mBAA+B,OAAI,CAACyD,gBAAL,CAAsB1D,WAAtB,EAAmCC,YAAnC,CAA/B;AAAA;AAApD,SAFW,EAGX;AAAC9B,oBAAU,EAAE,cAAb;AAA6BC,eAAK,EAAE,QAApC;AAA8CnC,eAAK,EAAE;AAArD,SAHW,EAIX;AAACkC,oBAAU,EAAE,QAAb;AAAuBC,eAAK,EAAE;AAA9B,SAJW,EAKX;AAACD,oBAAU,EAAE,eAAb;AAA8BC,eAAK,EAAE,cAArC;AAAqDnC,eAAK,EAAE;AAA5D,SALW,EAMX;AAACkC,oBAAU,EAAE,MAAb;AAAqBC,eAAK,EAAE;AAA5B,SANW,EAOX;AAACD,oBAAU,EAAE,YAAb;AAA2BC,eAAK,EAAE,WAAlC;AAA+CnC,eAAK,EAAE;AAAtD,SAPW,EAQX;AAACkC,oBAAU,EAAE,YAAb;AAA2BC,eAAK,EAAE;AAAlC,SARW,EASX;AAACD,oBAAU,EAAE,SAAb;AAAwBC,eAAK,EAAE;AAA/B,SATW,EAUX;AAACD,oBAAU,EAAE,EAAb;AAAiBC,eAAK,EAAE,QAAxB;AAAkCK,gBAAM,EAAE,KAA1C;AAAiDC,kBAAQ,EAAE,KAA3D;AAAkEzC,eAAK,EAAE,GAAzE;AAA8E0C,+BAAqB,EAAE;AAArG,SAVW,CAAb;AAYA,aAAAC,aAAA,GAAgB;AACdH,gBAAM,EAAE,IADM;AAEdI,sBAAY,EAAE;AACZC,kCAAsB,EAAE;AADZ,WAFA;AAKdC,mBAAS,EAAE,IALG;AAMdL,kBAAQ,EAAE,IANI;AAOdzC,eAAK,EAAE;AAPO,SAAhB;AAUA,aAAAM,OAAA,GAAU,IAAV;AAEA,aAAAyC,OAAA,GAAU,EAAV;AAEA,aAAAxC,YAAA,GAAe,IAAI,iDAAJ,EAAf;AAGyE;;;;mCAE9D;AAAA;;AACT,eAAKA,YAAL,CAAkBC,GAAlB,CACE,2DAAc,CACZ,KAAKhC,WAAL,CAAiBsI,OAAjB,EADY,EAEZ,KAAKtI,WAAL,CAAiBkJ,QAAjB,EAFY,EAGZ,KAAKlJ,WAAL,CAAiBmJ,WAAjB,EAHY,CAAd,EAIG3I,SAJH,CAIa,iBAA6B;AAAA;AAAA,gBAA3B+H,IAA2B;AAAA,gBAArBa,KAAqB;AAAA,gBAAdpG,QAAc;;AACxC,mBAAI,CAACuF,IAAL,GAAYA,IAAZ;AACA,mBAAI,CAACa,KAAL,GAAaA,KAAb;AACA,mBAAI,CAACpG,QAAL,GAAgBA,QAAhB;AACA,mBAAI,CAACuB,OAAL,GAAe,OAAI,CAACG,kBAAL,EAAf;AACA,mBAAI,CAAC5C,OAAL,GAAe,KAAf;AACD,WAVD,CADF;AAaD;;;sCAEa;AACZ,eAAKC,YAAL,CAAkBO,WAAlB;AACD;;;wCAEuB+G,c,EAAyB;AAC/C,cAAIjB,MAAM,GAAG,KAAb;AACA,eAAKG,IAAL,CAAUA,IAAV,CAAezF,OAAf,CAAuB,UAAC8F,IAAD,EAAgB;AACrCA,gBAAI,CAAC5F,QAAL,CAAcF,OAAd,CAAsB,UAAC6D,OAAD,EAAsB;AAC1C,kBAAIA,OAAO,CAACtG,GAAR,KAAgBgJ,cAAc,CAAChJ,GAAnC,EAAwC;AACtC+H,sBAAM,GAAG,IAAT;AACD;AACF,aAJD;AAKD,WAND;AAOA,iBAAOA,MAAP;AACD;;;oCAEWhH,M,EAAQ;AAClB,eAAKkI,OAAL,GAAelI,MAAM,CAACmI,GAAtB;AACA,eAAKD,OAAL,CAAaE,UAAb,CAAwB,KAAKjF,OAA7B;AACD;;;2CAE0B8E,c,EAAyB;AAClD,cAAI9F,QAAQ,GAAG,MAAf;AACA,eAAK6F,KAAL,CAAWtG,OAAX,CAAmB,UAAC8F,IAAD,EAAiB;AAClCA,gBAAI,CAAC5F,QAAL,CAAcF,OAAd,CAAsB,UAAC6D,OAAD,EAAsB;AAC1C,kBAAIA,OAAO,CAACtG,GAAR,KAAgBgJ,cAAc,CAAChJ,GAAnC,EAAyC;AACvCkD,wBAAQ,GAAGqF,IAAI,CAACrF,QAAhB;AACD;AACF,aAJD;AAKD,WAND;AAOA,iBAAOA,QAAP;AACD;;;gDAE+B8F,c,EAAyB;AAAA;;AACvD,cAAII,aAAa,GAAG,MAApB;AACA,eAAKL,KAAL,CAAWtG,OAAX,CAAmB,UAAC8F,IAAD,EAAgB;AACjCA,gBAAI,CAAC5F,QAAL,CAAcF,OAAd,CAAsB,UAAC6D,OAAD,EAAsB;AAC1C,kBAAIA,OAAO,CAACtG,GAAR,KAAgBgJ,cAAc,CAAChJ,GAAnC,EAAwC;AACtC,oBAAIuI,IAAI,CAACc,WAAT,EAAsB;AACpB,yBAAI,CAACN,KAAL,CAAWtG,OAAX,CAAmB,UAAC6G,SAAD,EAAqB;AACtC,wBAAIf,IAAI,CAACc,WAAL,KAAqBC,SAAS,CAACtJ,GAAnC,EAAwC;AACtCoJ,mCAAa,GAAGE,SAAS,CAACpG,QAA1B;AACD;AACF,mBAJD;AAKD;AACF;AACF,aAVD;AAWD,WAZD;AAaA,iBAAOkG,aAAP;AACD;;;2CAE0BJ,c,EAAyB;AAClD,cAAIO,YAAY,GAAG,KAAnB;AACA,eAAKR,KAAL,CAAWtG,OAAX,CAAmB,UAAC8F,IAAD,EAAgB;AACjCA,gBAAI,CAAC5F,QAAL,CAAcF,OAAd,CAAsB,UAAC6D,OAAD,EAAsB;AAC1C,kBAAIA,OAAO,CAACtG,GAAR,KAAgBgJ,cAAc,CAAChJ,GAAnC,EAAwC;AACtC,oBAAIuI,IAAI,CAACiB,UAAT,EAAqB;AACnBD,8BAAY,GAAG,IAAf;AACD;AACF;AACF,aAND;AAOD,WARD;AASA,iBAAOA,YAAP;AACD;;;6CAE4B;AAAA;;AAC3B,cAAMrF,OAAO,GAAG,EAAhB;AACA,eAAKvB,QAAL,CAAcF,OAAd,CAAsB,UAAC6D,OAAD,EAAsB;AAC1C,gBAAMhC,QAAQ,GAAG,EAAjB;AACAlC,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,KAAhC,EAAuC;AAACE,mBAAK,EAAE8B,OAAO,CAACtG;AAAhB,aAAvC;AACAoC,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,aAAhC,EAA+C;AAACE,mBAAK,EAAE8B,OAAO,CAACvD;AAAhB,aAA/C;AACAuD,mBAAO,CAACG,MAAR,GACErE,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,QAAhC,EAA0C;AAACE,mBAAK,EAAE8B,OAAO,CAACG;AAAhB,aAA1C,CADF,GAEErE,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,QAAhC,EAA0C;AAACE,mBAAK,EAAE;AAAR,aAA1C,CAFF;AAGA8B,mBAAO,CAACI,MAAR,GACEtE,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,QAAhC,EAA0C;AAACE,mBAAK,EAAE;AAAR,aAA1C,CADF,GAEEpC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,QAAhC,EAA0C;AAACE,mBAAK,EAAE;AAAR,aAA1C,CAFF;AAGA8B,mBAAO,CAACK,MAAR,GACEvE,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,QAAhC,EAA0C;AAACE,mBAAK,EAAE;AAAR,aAA1C,CADF,GAEEpC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,QAAhC,EAA0C;AAACE,mBAAK,EAAE;AAAR,aAA1C,CAFF;AAGA8B,mBAAO,CAACO,cAAR,GACEzE,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,cAAhC,EAAgD;AAACE,mBAAK,EAAE;AAAR,aAAhD,CADF,GAEEpC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,cAAhC,EAAgD;AAACE,mBAAK,EAAE;AAAR,aAAhD,CAFF;AAGApC,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,MAAhC,EAAwC;AAACE,mBAAK,EAAE,OAAI,CAACiF,kBAAL,CAAwBnD,OAAxB;AAAR,aAAxC;AACAlE,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,WAAhC,EAA6C;AAACE,mBAAK,EAAE,OAAI,CAACkF,uBAAL,CAA6BpD,OAA7B;AAAR,aAA7C;AACA,mBAAI,CAACqD,kBAAL,CAAwBrD,OAAxB,IACElE,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,WAAhC,EAA6C;AAACE,mBAAK,EAAE;AAAR,aAA7C,CADF,GAEEpC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,WAAhC,EAA6C;AAACE,mBAAK,EAAE;AAAR,aAA7C,CAFF;AAGA,mBAAI,CAACoF,eAAL,CAAqBtD,OAArB,IACElE,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,QAAhC,EAA0C;AAACE,mBAAK,EAAE;AAAR,aAA1C,CADF,GAEEpC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,QAAhC,EAA0C;AAACE,mBAAK,EAAE;AAAR,aAA1C,CAFF;AAGAN,mBAAO,CAACe,IAAR,CAAaX,QAAb;AACD,WAzBD;AA0BA,iBAAOJ,OAAP;AACD;;;+CAEsB;AACrB,eAAK7E,MAAL,CAAYC,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;;yCAEwB4F,W,EAAkBC,Y,EAAmB;AAC5D,cAAIC,KAAK,CAACF,WAAD,CAAT,EAAwB;AACtBA,uBAAW,GAAG,CAAd;AACD;;AACD,cAAIE,KAAK,CAACD,YAAD,CAAT,EAAyB;AACvBA,wBAAY,GAAG,CAAf;AACD;;AACD,iBAAOD,WAAW,GAAGC,YAAd,GAA6B,CAA7B,GAAiC,CAAC,CAAzC;AACD;;;;;;;uBA5JUwD,iB,EAAiB,0I,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,gc;AAAA;AAAA;ACf9B;;AAGA;;AACI;;AAgBJ;;;;AApBkB;;AAIuB;;AAAA;;;;;;;;;sEDW5BA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT5K,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEf9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACJ;;;;;;AAewB;;AAAyG;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAF7G;;AACI;;AACA;;AACJ;;;;;;AAD8D;;AAAA;;;;;;AAHlE;;AAA4F;;AACxF;;AAIJ;;;;;;AAL4F;;AAAA;;AAC1E;;AAAA;;;;;;AAYV;;AAAyE;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAF7E;;AACI;;AACA;;AACJ;;;;;;AADiC;;AAAA;;;;;;AAHrC;;AAAsF;;AAClF;;AAIJ;;;;;;AALsF;;AAAA;;AACpE;;AAAA;;;;;;;;;;;;AAtBlC;;AACI;;AACI;;AAAM;;AAAS;;AACf;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAM;;AAC1D;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAa;;AACnE;;AACA;;AACI;;AAAoD;;AAAe;;AACnE;;AAAmC;;AAAa;;AAChD;;AACI;;AAAmJ;AAAA;;AAAA;;AAAA;AAAA;;AAC/I;;AAMJ;;AACJ;;AACA;;AACI;;AAAgJ;AAAA;;AAAA;;AAAA;AAAA;;AAC5I;;AAMJ;;AACJ;;AACJ;;AACJ;;;;;;;;;;AApB+E;;AAAA,6GAAkC,wBAAlC,EAAkC,4EAAlC;;AACxB;;AAAA;;AASqB;;AAAA,0GAA+B,wBAA/B,EAA+B,4EAA/B;;AACrB;;AAAA;;;;QDP1C4L,iB;;;AAQX,iCAAoBlK,WAApB,EAAsDG,QAAtD,EAAqFT,MAArF,EAA6GyK,WAA7G,EAAuI;AAAA;;AAAnH,aAAAnK,WAAA,GAAAA,WAAA;AAAkC,aAAAG,QAAA,GAAAA,QAAA;AAA+B,aAAAT,MAAA,GAAAA,MAAA;AAAwB,aAAAyK,WAAA,GAAAA,WAAA;AAN7G,aAAArI,OAAA,GAAU,IAAV;AAEQ,aAAAC,YAAA,GAAe,IAAI,iDAAJ,EAAf;AAIkI;;;;mCAE/H;AAAA;;AACT,eAAKA,YAAL,CAAkBC,GAAlB,CACE,2DAAc,CACZ,KAAKhC,WAAL,CAAiBsI,OAAjB,EADY,EAEZ,KAAKtI,WAAL,CAAiBkJ,QAAjB,EAFY,CAAd,EAGG1I,SAHH,CAGa,iBAAmB;AAAA;AAAA,gBAAjB+H,IAAiB;AAAA,gBAAXa,KAAW;;AAClC,mBAAI,CAACgB,QAAL,CAAc7B,IAAd,EAAoBa,KAApB;;AACA,mBAAI,CAACiB,iBAAL;;AACA,mBAAI,CAACC,sBAAL;;AACA,mBAAI,CAACC,oBAAL;;AACA,mBAAI,CAACC,qBAAL;;AACA,mBAAI,CAACnI,eAAL,CAAqB,OAAI,CAACoI,cAA1B;;AACA,mBAAI,CAACpI,eAAL,CAAqB,OAAI,CAACqI,WAA1B;;AACA,mBAAI,CAAC5I,OAAL,GAAe,KAAf;AACC,WAZC,CADF;AAcD;;;sCAEa;AACZ,eAAKC,YAAL,CAAkBO,WAAlB;AACD;;;iCAEQqI,K,EAA4B;AACnCA,eAAK,CAACC,iBAAN,KAA4BD,KAAK,CAACE,SAAlC,GACE,+EAAgBF,KAAK,CAACE,SAAN,CAAgBxJ,IAAhC,EAAsCsJ,KAAK,CAACG,aAA5C,EAA2DH,KAAK,CAACI,YAAjE,CADF,GAEE,iFAAkBJ,KAAK,CAACC,iBAAN,CAAwBvJ,IAA1C,EAAgDsJ,KAAK,CAACE,SAAN,CAAgBxJ,IAAhE,EAAsEsJ,KAAK,CAACG,aAA5E,EAA2FH,KAAK,CAACI,YAAjG,CAFF;AAGA,eAAK1I,eAAL,CAAqB,KAAKoI,cAA1B;AACA,eAAKpI,eAAL,CAAqB,KAAKqI,WAA1B;AACD;;;iCAEgBnC,I,EAAYa,K,EAAe;AAC1C,eAAKqB,cAAL,GAAsB,EAAtB;AACA,eAAKlC,IAAL,GAAY,IAAZ;AACA,eAAKa,KAAL,GAAa,EAAb;AACA,eAAKsB,WAAL,GAAmB,EAAnB;AACA,cAAMM,SAAS,GAAG,yDAAUzC,IAAV,CAAlB;AACA,cAAM0C,UAAU,GAAG,yDAAU7B,KAAV,CAAnB;AACA,eAAKb,IAAL,GAAYyC,SAAZ;AACA,eAAKN,WAAL,GAAmB,KAAKnC,IAAL,CAAUA,IAA7B;AACA,eAAKa,KAAL,GAAa6B,UAAb;AACD;;;wCAEe;AACd,eAAKvL,MAAL,CAAYC,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACD;;;sCAEa;AAAA;;AACZ,eAAKuL,cAAL;AACA,eAAK3C,IAAL,CAAUA,IAAV,GAAiB,KAAKmC,WAAtB;AACA,eAAKP,WAAL,CAAiBpC,UAAjB,CAA4B,KAAKQ,IAAL,CAAUlI,GAAtC,EAA2C,KAAKkI,IAAhD,EAAsD/H,SAAtD,CAAgE,UAACC,QAAD,EAAmB;AACjF,mBAAI,CAACC,kBAAL,CAAwBD,QAAQ,CAACE,MAAjC;;AACA,mBAAI,CAACjB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD,WAHD;AAID;;;gDAE+B;AAAA;;AAC9B,eAAK8K,cAAL,CAAoB3H,OAApB,CAA4B,UAACqI,aAAD,EAA6B;AACvD,gBAAI,CAACA,aAAa,CAACnI,QAAd,CAAuBL,MAAxB,IAAkC,CAACwI,aAAa,CAACC,QAArD,EAA+D;AAC7D,qBAAI,CAACX,cAAL,GAAsB,OAAI,CAACA,cAAL,CAAoBzG,MAApB,CAA2B,UAACqH,eAAD;AAAA,uBAA+BF,aAAa,CAAC9K,GAAd,KAAsBgL,eAAe,CAAChL,GAArE;AAAA,eAA3B,CAAtB;AACD;AACF,WAJD;AAKD;;;+CAE8B;AAAA;;AAC7B,eAAK+I,KAAL,CAAWtG,OAAX,CAAmB,UAAC8F,IAAD,EAAgB;AACjC,mBAAI,CAAC6B,cAAL,CAAoB3H,OAApB,CAA4B,UAACqI,aAAD,EAA6B;AACvD,kBAAIA,aAAa,CAAC9K,GAAd,KAAsBuI,IAAI,CAACc,WAA/B,EAA4C;AAC1C,oBAAI,CAACyB,aAAa,CAACC,QAAnB,EAA6B;AAC3BD,+BAAa,CAACC,QAAd,GAAyB,EAAzB;AACD;;AACDD,6BAAa,CAACC,QAAd,CAAuB9F,IAAvB,CAA4BsD,IAA5B;AACD;AACF,aAPD;AAQD,WATD;AAUD;;;iDAEgC;AAAA;;AAC/B,eAAKQ,KAAL,CAAWtG,OAAX,CAAmB,UAAC8F,IAAD,EAAgB;AACjC,gBAAI,CAAC,OAAI,CAAC8B,WAAL,CAAiBY,IAAjB,CAAsB,UAACC,UAAD;AAAA,qBAA0BA,UAAU,CAAClL,GAAX,KAAmBuI,IAAI,CAACvI,GAAlD;AAAA,aAAtB,CAAD,IAAiF,CAACuI,IAAI,CAACc,WAA3F,EAAwG;AACpG,qBAAI,CAACe,cAAL,CAAoBnF,IAApB,CAAyBsD,IAAzB;AACH;AACF,WAJD;AAKD;;;4CAE2B;AAAA;;AAC1B,cAAM4C,cAAc,GAAe,EAAnC;AACA,eAAKd,WAAL,CAAiB5H,OAAjB,CAAyB,UAACyI,UAAD,EAA0B;AACjD,gBAAIA,UAAU,CAAC7B,WAAf,EAA4B;AAC1B8B,4BAAc,CAAClG,IAAf,CAAoBiG,UAApB;AACA,qBAAI,CAACb,WAAL,GAAmB,OAAI,CAACA,WAAL,CAAiB1G,MAAjB,CAAwB,UAAC4E,IAAD;AAAA,uBAAoBA,IAAI,CAACvI,GAAL,KAAakL,UAAU,CAAClL,GAA5C;AAAA,eAAxB,CAAnB;AACD;AACF,WALD;AAMA,eAAKoL,uBAAL,CAA6BD,cAA7B;AACD;;;gDAE+BA,c,EAA4B;AAAA;;AAC1DA,wBAAc,CAAC1I,OAAf,CAAuB,UAAC4I,OAAD,EAAuB;AAC5C,gBAAM/B,SAAS,GAAG,OAAI,CAACe,WAAL,CAAiBiB,IAAjB,CAAsB,UAACJ,UAAD;AAAA,qBAAsBA,UAAU,CAAClL,GAAX,KAAmBqL,OAAO,CAAChC,WAAjD;AAAA,aAAtB,CAAlB;;AACA,gBAAI,CAACC,SAAS,CAACyB,QAAf,EAAyB;AACvBzB,uBAAS,CAACyB,QAAV,GAAqB,EAArB;AACD;;AACDzB,qBAAS,CAACyB,QAAV,CAAmB9F,IAAnB,CAAwBoG,OAAxB;AACD,WAND;AAOD;;;2CAE0B/K,M,EAAa;AACtC,cAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB,iBAAKR,QAAL,CAAcU,IAAd,+BAAiD,SAAjD,EAA4D;AAC1DpC,sBAAQ,EAAE,IADgD;AAE1DqC,wBAAU,EAAE,CAAC,gBAAD;AAF8C,aAA5D;AAID,WALD,MAKO;AACL,iBAAKX,QAAL,CAAcU,IAAd,2BAA6C,SAA7C,EAAwD;AACtDpC,sBAAQ,EAAE,IAD4C;AAEtDqC,wBAAU,EAAE,CAAC,cAAD;AAF0C,aAAxD;AAID;;AACD,eAAKd,WAAL,CAAiB+H,UAAjB;AACA,eAAK/H,WAAL,CAAiBgI,WAAjB;AACA,eAAKhI,WAAL,CAAiB8H,cAAjB;AACD;;;wCAEuB8D,S,EAAuB;AAC7CA,mBAAS,CAAC3I,IAAV,CAAe,UAAC4I,UAAD,EAAmBC,SAAnB,EAAuC;AACpD,mBAAOD,UAAU,CAACtI,QAAX,GAAsBuI,SAAS,CAACvI,QAAhC,GAA2C,CAA3C,GAA+C,CAAC,CAAvD;AACD,WAFD;AAGAqI,mBAAS,CAAC9I,OAAV,CAAkB,UAACiJ,QAAD,EAAwB;AACxC,gBAAIA,QAAQ,CAACX,QAAb,EAAuB;AACrBW,sBAAQ,CAACX,QAAT,CAAkBnI,IAAlB,CAAuB,UAAC+I,aAAD,EAAsBC,YAAtB,EAA6C;AAClE,uBAAOD,aAAa,CAACzI,QAAd,GAAyB0I,YAAY,CAAC1I,QAAtC,GAAiD,CAAjD,GAAqD,CAAC,CAA7D;AACD,eAFD;AAGD;AACF,WAND;AAOD;;;yCAEwB;AAAA;;AACvB,eAAKmH,WAAL,CAAiB5H,OAAjB,CAAyB,UAACyI,UAAD,EAA0B;AACjD,gBAAIA,UAAU,CAACH,QAAf,EAAyB;AACvBG,wBAAU,CAACH,QAAX,CAAoBtI,OAApB,CAA4B,UAAC4I,OAAD,EAAuB;AACjD,uBAAI,CAAChB,WAAL,CAAiBpF,IAAjB,CAAsBoG,OAAtB;AACD,eAFD;AAGAH,wBAAU,CAACH,QAAX,GAAsB5I,SAAtB;AACD;AACF,WAPD;AAQD;;;;;;;uBAzJU0H,iB,EAAiB,0I,EAAA,wI,EAAA,uH,EAAA,0I;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,c;AAAA,a;AAAA,o0B;AAAA;AAAA;ACjB9B;;AAGA;;;;AAHkB;;AAGW;;AAAA;;;;;;;;;sEDchBA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT9L,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcY;;AAA2E;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGvE;;AAAiF;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAFrF;;AACI;;AAA2B;;AAAoB;;AAC/C;;AACJ;;;;;;AAF+B;;AAAA;;AACU;;AAAA;;;;;;AAV7C;;AACI;;AACI;;AAAiB;;AAAiB;;AAClC;;AACI;;AACJ;;AACJ;;AACA;;AACA;;AAIJ;;;;;;AAVyB;;AAAA;;AAKgB;;AAAA;;AACS;;AAAA;;;;QDA7C4N,a;;;AAQX,6BAAoBlM,WAApB,EAAsDN,MAAtD,EAAsE;AAAA;;AAAlD,aAAAM,WAAA,GAAAA,WAAA;AAAkC,aAAAN,MAAA,GAAAA,MAAA;AANtD,aAAAoC,OAAA,GAAU,IAAV;AAIQ,aAAAC,YAAA,GAAe,IAAI,iDAAJ,EAAf;AAEiE;;;;mCAE9D;AAAA;;AACT,eAAKA,YAAL,CAAkBC,GAAlB,CACE,KAAKhC,WAAL,CAAiBsI,OAAjB,GAA2B9H,SAA3B,CAAqC,UAAC+H,IAAD,EAAgB;AACnD,mBAAI,CAACzG,OAAL,GAAe,IAAf;;AACA,mBAAI,CAACsI,QAAL,CAAc7B,IAAd;;AACA,mBAAI,CAAC4D,WAAL;;AACA,mBAAI,CAACC,QAAL;;AACA,mBAAI,CAACtK,OAAL,GAAe,KAAf;AACD,WAND,CADF;AASD;;;sCAEa;AACZ,eAAKC,YAAL,CAAkBO,WAAlB;AACD;;;iCAEQiG,I,EAAY;AACnB,eAAK8D,YAAL,GAAoB,EAApB;AACA,eAAK3B,WAAL,GAAmB,EAAnB;AACA,eAAKkB,SAAL,GAAiB,EAAjB;AACA,cAAMZ,SAAS,GAAG,yDAAUzC,IAAV,CAAlB;AACA,eAAK8D,YAAL,GAAoBrB,SAAS,CAACzC,IAA9B;AACD;;;sCAEa;AACZ,eAAK7I,MAAL,CAAYC,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;sCAEqB;AAAA;;AACpB,eAAK0M,YAAL,CAAkBvJ,OAAlB,CAA0B,UAACwJ,WAAD,EAA2B;AACnD,gBAAI,CAACA,WAAW,CAAC5C,WAAjB,EAA8B;AAC5B,qBAAI,CAACkC,SAAL,CAAetG,IAAf,CAAoBgH,WAApB;AACD;AACF,WAJD;AAKA,eAAKV,SAAL,CAAe9I,OAAf,CAAuB,UAACiJ,QAAD,EAAwB;AAC7C,mBAAI,CAACM,YAAL,CAAkBvJ,OAAlB,CAA0B,UAACwJ,WAAD,EAA2B;AACnD,kBAAIA,WAAW,CAAC5C,WAAZ,KAA4BqC,QAAQ,CAAC1L,GAAzC,EAA8C;AAC5C,oBAAI,CAAC0L,QAAQ,CAACX,QAAd,EAAwB;AACtBW,0BAAQ,CAACX,QAAT,GAAoB,EAApB;AACD;;AACDW,wBAAQ,CAACX,QAAT,CAAkB9F,IAAlB,CAAuBgH,WAAvB;AACD;AACF,aAPD;AAQD,WATD;AAUD;;;mCAEkB;AACjB,eAAKV,SAAL,CAAe9I,OAAf,CAAuB,UAACiJ,QAAD,EAAwB;AAC7CA,oBAAQ,CAAC/I,QAAT,CAAkBC,IAAlB,CAAuB,UAACsJ,aAAD,EAAyBC,YAAzB,EAAmD;AACxE,qBAAOD,aAAa,CAACnJ,WAAd,GAA4BoJ,YAAY,CAACpJ,WAAzC,GAAuD,CAAvD,GAA2D,CAAC,CAAnE;AACD,aAFD;;AAGA,gBAAI2I,QAAQ,CAACX,QAAb,EAAuB;AACrBW,sBAAQ,CAACX,QAAT,CAAkBtI,OAAlB,CAA0B,UAAC4I,OAAD,EAAmB;AAC3CA,uBAAO,CAAC1I,QAAR,CAAiBC,IAAjB,CAAsB,UAACwJ,gBAAD,EAA4BC,eAA5B,EAAyD;AAC7E,yBAAOD,gBAAgB,CAACrJ,WAAjB,GAA+BsJ,eAAe,CAACtJ,WAA/C,GAA6D,CAA7D,GAAiE,CAAC,CAAzE;AACD,iBAFD;AAGD,eAJD;AAKA2I,sBAAQ,CAACX,QAAT,CAAkBnI,IAAlB,CAAuB,UAAC+I,aAAD,EAAsBC,YAAtB,EAA6C;AAClE,uBAAOD,aAAa,CAACzI,QAAd,GAAyB0I,YAAY,CAAC1I,QAAtC,GAAiD,CAAjD,GAAqD,CAAC,CAA7D;AACD,eAFD;AAGD;AACF,WAdD;AAeD;;;;;;;uBAxEU2I,a,EAAa,0I,EAAA,uH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,2f;AAAA;AAAA;ACd1B;;AACI;;AACI;;AAAsB;;AAAY;;AAClC;;AAA0B;AAAA,mBAAS,IAAAnD,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAS;;AAC/D;;AACA;;AACI;;AAaJ;;AACJ;;;;AAd6D;;AAAA;;;;;;;;;sEDQhDmD,a,EAAa;cALzB,uDAKyB;eALf;AACT9N,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEf1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACJ;;;;;;AAoB2H;;AAAsD;;AAAO;;;;;;AAAxK;;AAAuF;;AAAoB;;AAAmE;;;;;;;;AAAvF;;AAAA;;AAAyC;;AAAA;;;;;;AAO1E;;AAAwD;;AAAO;;;;;;AAC7G;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;;;AAJZ;;AACI;;AAAmF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC/E;;AAAwB;;AAAsB;;AAAqE;;AACnH;;AAGJ;;AACJ;;;;;;;;AANgD;;AAAA;;AAChB;;AAAA;;AAA2C;;AAAA;;AACV;;AAAA;;;;;;;;AA3BjF;;AACI;;AACI;;AAAM;;AAAa;;AACnB;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAM;;AAC1D;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAa;;AACnE;;AACA;;AACI;;AACI;;AAAI;;AAA4G;;AAChH;;AAAI;;AAA0H;;AAC9H;;AAAI;;AAAgF;;AACpF;;AAAI;;AAA+C;;AACvD;;AACJ;;AACA;;AACI;;AAA8D;;AAAmB;;AACjF;;AAA6C;;AAAqB;;AAClE;;AACI;;AAAmE;AAAA;;AAAA;;AAAA;AAAA;;AAC/D;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAQJ;;AACJ;;AACJ;;AACJ;;;;;;AAjB8C;;AAAA;;AACY;;AAAA;;AAK5B;;AAAA;;MDd9B;;;QAOaqO,oB;;;AAQX,oCAAoB3M,WAApB,EAAsDN,MAAtD,EAA8ES,QAA9E,EACoByM,WADpB,EAC8C;AAAA;;AAD1B,aAAA5M,WAAA,GAAAA,WAAA;AAAkC,aAAAN,MAAA,GAAAA,MAAA;AAAwB,aAAAS,QAAA,GAAAA,QAAA;AAC1D,aAAAyM,WAAA,GAAAA,WAAA;AARpB,aAAA9K,OAAA,GAAU,IAAV;AAIQ,aAAAC,YAAA,GAAe,IAAI,iDAAJ,EAAf;AAIyC;;;;mCAEtC;AAAA;;AACT,eAAKA,YAAL,CAAkBC,GAAlB,CACE,2DAAc,CACZ,KAAKhC,WAAL,CAAiBsI,OAAjB,EADY,EAEZ,KAAKtI,WAAL,CAAiBkJ,QAAjB,EAFY,CAAd,EAGG1I,SAHH,CAGa,iBAAmB;AAAA;AAAA,gBAAjB+H,IAAiB;AAAA,gBAAXa,KAAW;;AAC5B,mBAAI,CAACb,IAAL,GAAYA,IAAZ;;AACA,mBAAI,CAACsE,sBAAL,CAA4BtE,IAA5B;;AACA,mBAAI,CAACa,KAAL,GAAaA,KAAb;;AACA,mBAAI,CAAC0D,kBAAL;;AACA,mBAAI,CAACC,kBAAL;;AACA,mBAAI,CAAC1K,eAAL,CAAqB,OAAI,CAAC2K,YAA1B;;AACA,mBAAI,CAAC3K,eAAL,CAAqB,OAAI,CAAC4K,cAA1B;;AACA,mBAAI,CAACA,cAAL,CAAoBnK,OAApB,CAA4B,UAAC6G,SAAD,EAAyB;AACnD,qBAAI,CAACtH,eAAL,CAAqBsH,SAAS,CAACyB,QAA/B;AACD,aAFD;;AAGA,mBAAI,CAACtJ,OAAL,GAAe,KAAf;AACD,WAfH,CADF;AAkBD;;;sCAEa;AACZ,eAAKC,YAAL,CAAkBO,WAAlB;AACD;;;qCAEYqI,K,EAAgC;AAC3C,cAAMuC,cAAc,GAAavC,KAAK,CAACC,iBAAN,CAAwBvJ,IAAxB,CAA6BsJ,KAAK,CAACG,aAAnC,CAAjC;;AACA,cAAIH,KAAK,CAACC,iBAAN,KAA4BD,KAAK,CAACE,SAAtC,EAAiD;AAC/C,2FAAgBF,KAAK,CAACE,SAAN,CAAgBxJ,IAAhC,EAAsCsJ,KAAK,CAACG,aAA5C,EAA2DH,KAAK,CAACI,YAAjE;AACD,WAFD,MAEO;AACL,6FAAkBJ,KAAK,CAACC,iBAAN,CAAwBvJ,IAA1C,EAAgDsJ,KAAK,CAACE,SAAN,CAAgBxJ,IAAhE,EAAsEsJ,KAAK,CAACG,aAA5E,EAA2FH,KAAK,CAACI,YAAjG;AACA,iBAAKoC,0BAAL,CAAgCD,cAAhC;AACD;;AACD,eAAK7K,eAAL,CAAqB,KAAK2K,YAA1B;AACA,eAAK3K,eAAL,CAAqB,KAAK4K,cAA1B;AACD;;;mDAEkCC,c,EAA0B;AAAA;;AAC3D,eAAKD,cAAL,CAAoB3H,IAApB,CAAyB4H,cAAzB;AACA,eAAKD,cAAL,CAAoBnK,OAApB,CAA4B,UAAC6G,SAAD,EAAyB;AACnD,gBAAI,CAACA,SAAS,CAACyB,QAAV,CAAmBzI,MAApB,IAA+B,CAAC,OAAI,CAACqK,YAAL,CAAkB1B,IAAlB,CAAuB,UAACI,OAAD;AAAA,qBAAuBA,OAAO,CAACrL,GAAR,KAAgBsJ,SAAS,CAACtJ,GAAjD;AAAA,aAAvB,CAAhC,IACAsJ,SAAS,CAAC3G,QAAV,CAAmBL,MADvB,EAC+B;AAC7B,qBAAI,CAACqK,YAAL,CAAkB1H,IAAlB,CAAuBqE,SAAvB;AACD;AACF,WALD;AAMA,eAAKyD,wBAAL,CAA8B,KAAKJ,YAAnC;AACD;;;uCAEcrC,K,EAAgC0C,Y,EAAwB;AAAA;;AACrE,cAAMC,UAAU,GAAa3C,KAAK,CAACC,iBAAN,CAAwBvJ,IAAxB,CAA6BsJ,KAAK,CAACG,aAAnC,CAA7B;;AACA,cAAIH,KAAK,CAACC,iBAAN,KAA4BD,KAAK,CAACE,SAAtC,EAAiD;AAC/C,2FAAgBF,KAAK,CAACE,SAAN,CAAgBxJ,IAAhC,EAAsCsJ,KAAK,CAACG,aAA5C,EAA2DH,KAAK,CAACI,YAAjE;AACD,WAFD,MAEO,IAAIuC,UAAU,CAACjN,GAAX,KAAmBgN,YAAY,CAAChN,GAAhC,KACR,KAAK4J,eAAL,CAAqBqD,UAArB,KAAoC,KAAKrD,eAAL,CAAqBoD,YAArB,CAApC,IACA,CAAC,KAAKpD,eAAL,CAAqBqD,UAArB,CAAD,IAAqC,CAAC,KAAKrD,eAAL,CAAqBoD,YAArB,CAF9B,CAAJ,EAEwE;AAC3E,6FAAkB1C,KAAK,CAACC,iBAAN,CAAwBvJ,IAA1C,EAAgDsJ,KAAK,CAACE,SAAN,CAAgBxJ,IAAhE,EAAsEsJ,KAAK,CAACG,aAA5E,EAA2FH,KAAK,CAACI,YAAjG;AACA,iBAAKwC,4BAAL,CAAkCD,UAAlC;AACH,WALM,MAKA,IAAIA,UAAU,CAACjN,GAAX,KAAmBgN,YAAY,CAAChN,GAApC,EAAyC;AAC5C,iBAAKF,QAAL,CAAcU,IAAd,CAAmB,kCAAnB,aAAkE;AAClEC,wBAAU,EAAE,CAAC,cAAD;AADsD,aAAlE;AAGH,WAJM,MAIA;AACL,iBAAKX,QAAL,CAAcU,IAAd,CAAmB,iEAAnB,aAAiG;AAC/FpC,sBAAQ,EAAE,IADqF;AAE/FqC,wBAAU,EAAE,CAAC,cAAD;AAFmF,aAAjG;AAID;;AACD,eAAKuB,eAAL,CAAqB,KAAK4K,cAA1B;AACA,eAAKA,cAAL,CAAoBnK,OAApB,CAA4B,UAAC6G,SAAD,EAAyB;AACnD,mBAAI,CAACtH,eAAL,CAAqBsH,SAAS,CAACyB,QAA/B;AACD,WAFD;AAGD;;;qDAEoCkC,U,EAAsB;AAAA;;AACzD,eAAKL,cAAL,GAAsB,KAAKA,cAAL,CAAoBjJ,MAApB,CAA2B,UAACwJ,iBAAD;AAAA,mBAAiCA,iBAAiB,CAACnN,GAAlB,KAA0BiN,UAAU,CAACjN,GAAtE;AAAA,WAA3B,CAAtB;AACA,eAAK4M,cAAL,CAAoBnK,OAApB,CAA4B,UAAC6G,SAAD,EAAyB;AACnD,gBAAIA,SAAS,CAACyB,QAAV,CAAmBzI,MAAnB,IAA6B,CAACgH,SAAS,CAAC3G,QAAV,CAAmBL,MAArD,EAA6D;AAC3D,qBAAI,CAACqK,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkBhJ,MAAlB,CAAyB,UAAC0H,OAAD;AAAA,uBAAuBA,OAAO,CAACrL,GAAR,KAAgBsJ,SAAS,CAACtJ,GAAjD;AAAA,eAAzB,CAApB;AACD;;AACD,gBAAI,CAACsJ,SAAS,CAACyB,QAAV,CAAmBzI,MAApB,IAA+B,CAAC,OAAI,CAACqK,YAAL,CAAkB1B,IAAlB,CAAuB,UAACI,OAAD;AAAA,qBAAuBA,OAAO,CAACrL,GAAR,KAAgBsJ,SAAS,CAACtJ,GAAjD;AAAA,aAAvB,CAAhC,IACDsJ,SAAS,CAAC3G,QAAV,CAAmBL,MADtB,EAC8B;AAC5B,qBAAI,CAACqK,YAAL,CAAkB1H,IAAlB,CAAuBqE,SAAvB;AACD;AACF,WARD;AASA,eAAKyD,wBAAL,CAA8B,KAAKJ,YAAnC;AACD;;;iDAEgC5D,K,EAAe;AAAA;;AAC9CA,eAAK,CAACtG,OAAN,CAAc,UAAC8F,IAAD,EAAgB;AAC5B,gBAAI,CAACA,IAAI,CAAC5F,QAAL,CAAcL,MAAf,IAAyB,CAACiG,IAAI,CAACiB,UAA/B,IAA8CjB,IAAI,CAACiB,UAAL,IAAmB,CAACjB,IAAI,CAACiB,UAAL,CAAgB4D,kBAAtF,EAA2G;AACzG,qBAAI,CAACT,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkBhJ,MAAlB,CAAyB,UAAC0J,cAAD;AAAA,uBAA8B9E,IAAI,CAACvI,GAAL,KAAaqN,cAAc,CAACrN,GAA1D;AAAA,eAAzB,CAApB;AACD;AACF,WAJD;AAKD;;;wCAEesN,W,EAAmB;AACjC,cAAIvF,MAAM,GAAG,KAAb;AACA,eAAKG,IAAL,CAAUA,IAAV,CAAezF,OAAf,CAAuB,UAAC8F,IAAD,EAAgB;AACrC,gBAAIA,IAAI,CAACvI,GAAL,KAAasN,WAAW,CAACtN,GAA7B,EAAkC;AAChC+H,oBAAM,GAAG,IAAT;AACD;AACF,WAJD;AAKA,iBAAOA,MAAP;AACD;;;+CAEsBG,I,EAAY;AACjC,eAAKyE,YAAL,GAAoB,EAApB;AACA,eAAKC,cAAL,GAAsB,EAAtB;AACA,cAAMjC,SAAS,GAAG,yDAAUzC,IAAV,CAAlB;AACA,eAAKA,IAAL,GAAYyC,SAAZ;AACD;AAED;;;;;;6CAG6B;AAAA;;AAC3B,eAAK5B,KAAL,CAAWtG,OAAX,CAAmB,UAAC8F,IAAD,EAAgB;AACjC,gBAAMgF,UAAU,GAAe,EAA/B;;AACA,mBAAI,CAACZ,YAAL,CAAkB1H,IAAlB,CACE;AAACjF,iBAAG,EAAEuI,IAAI,CAACvI,GAAX;AAAgBkD,sBAAQ,EAAEqF,IAAI,CAACrF,QAA/B;AAAyCsG,wBAAU,EAAEjB,IAAI,CAACiB,UAA1D;AAAsEuB,sBAAQ,EAAEwC,UAAhF;AAA4F5K,sBAAQ,EAAE4F,IAAI,CAAC5F;AAA3G,aADF;;AAGA,mBAAI,CAACiK,cAAL,CAAoB3H,IAApB,CACE;AAACjF,iBAAG,EAAEuI,IAAI,CAACvI,GAAX;AAAgBkD,sBAAQ,EAAEqF,IAAI,CAACrF,QAA/B;AAAyCsG,wBAAU,EAAEjB,IAAI,CAACiB,UAA1D;AAAsEuB,sBAAQ,EAAEwC,UAAhF;AAA4F5K,sBAAQ,EAAE4F,IAAI,CAAC5F;AAA3G,aADF;AAGD,WARD;AASD;;;6CAE4B;AAAA;;AAC3B;AACA,eAAKoK,wBAAL,CAA8B,KAAKhE,KAAnC;AACA,eAAK6D,cAAL,CAAoBnK,OAApB,CAA4B,UAAC6G,SAAD,EAAyB;AACnD,mBAAI,CAACP,KAAL,CAAWtG,OAAX,CAAmB,UAAC8F,IAAD,EAAgB;AACjC,kBAAIA,IAAI,CAACc,WAAL,KAAqBC,SAAS,CAACtJ,GAAnC,EAAwC;AACtC;AACA,oBAAMwN,UAAU,GAAG,OAAI,CAACb,YAAL,CAAkBrB,IAAlB,CAAuB,UAACD,OAAD;AAAA,yBAAuBA,OAAO,CAACrL,GAAR,KAAgBuI,IAAI,CAACvI,GAA5C;AAAA,iBAAvB,CAAnB,CAFsC,CAGtC;;;AACAsJ,yBAAS,CAACyB,QAAV,CAAmB9F,IAAnB,CAAwBuI,UAAxB,EAJsC,CAKtC;;AACA,uBAAI,CAACb,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkBhJ,MAAlB,CAAyB,UAAC0H,OAAD;AAAA,yBAAuBA,OAAO,CAACrL,GAAR,KAAgBwN,UAAU,CAACxN,GAAlD;AAAA,iBAAzB,CAApB,CANsC,CAOtC;;AACA,uBAAI,CAAC2M,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkBhJ,MAAlB,CAAyB,UAAC0H,OAAD;AAAA,yBAAuBA,OAAO,CAACrL,GAAR,KAAgBsJ,SAAS,CAACtJ,GAAjD;AAAA,iBAAzB,CAApB,CARsC,CAStC;;AACA,uBAAI,CAAC4M,cAAL,GAAsB,OAAI,CAACA,cAAL,CAAoBjJ,MAApB,CAA2B,UAAC8J,eAAD;AAAA,yBAA+BA,eAAe,CAACzN,GAAhB,KAAwBwN,UAAU,CAACxN,GAAlE;AAAA,iBAA3B,CAAtB;AACD;AACF,aAbD;AAcD,WAfD;AAgBD;;;2CAE0BM,M,EAAgB;AACzC,cAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB,iBAAKR,QAAL,CAAcU,IAAd,CAAmB,4BAAnB,EAAiD,SAAjD,EAA4D;AAC1DpC,sBAAQ,EAAE,IADgD;AAE1DqC,wBAAU,EAAE,CAAC,gBAAD;AAF8C,aAA5D;AAID,WALD,MAKO;AACL,iBAAKX,QAAL,CAAcU,IAAd,CAAmB,sBAAnB,EAA2C,SAA3C,EAAsD;AACpDpC,sBAAQ,EAAE,IAD0C;AAEpDqC,wBAAU,EAAE,CAAC,cAAD;AAFwC,aAAtD;AAID;;AACD,eAAKd,WAAL,CAAiBgI,WAAjB;AACA,eAAKhI,WAAL,CAAiB+H,UAAjB;AACA,eAAK/H,WAAL,CAAiB8H,cAAjB;AACD;;;wCAEeiG,a,EAA2B;AACzCA,uBAAa,CAAC9K,IAAd,CAAmB,UAACC,MAAD,EAASC,KAAT;AAAA,mBAAmBD,MAAM,CAACK,QAAP,CAAgBF,IAAhB,GAAuBC,WAAvB,KAAuCH,KAAK,CAACI,QAAN,CAAeF,IAAf,GAAsBC,WAAtB,EAAvC,GAA6E,CAA7E,GAAiF,CAAC,CAArG;AAAA,WAAnB;AACD;;;wCAEe;AACd,eAAK5D,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;sCAEa;AAAA;;AACZ,eAAKmC,OAAL,GAAe,IAAf;;AACA,cAAI,KAAKkM,kBAAL,GAA0BrL,MAA9B,EAAsC;AACpC,kEAAS,CACP,KAAKiK,WAAL,CAAiBqB,qBAAjB,CAAuC,KAAKC,kBAAL,EAAvC,CADO,EAEP,kDAAe,KAAKF,kBAAL,EAAf,EAA0C/L,IAA1C,CACE,iEAAU,UAACY,MAAD;AAAA,qBAGJ,OAAI,CAAC+J,WAAL,CAAiBuB,qBAAjB,CAAuCtL,MAAM,CAAC6G,WAA9C,EAA2D7G,MAAM,CAACuL,SAAlE,CAHI;AAAA,aAAV,CADF,CAFO,CAAT,EAOK5N,SAPL,CAOe,iBAAsB;AAAA;AAAA,kBAApB6N,MAAoB;AAAA,kBAAZxL,MAAY;;AACjC,kBAAIpC,QAAJ;AACA,kBAAM6N,WAAW,GAAQD,MAAzB;AACA,kBAAME,WAAW,GAAQ1L,MAAzB;AACAyL,yBAAW,CAAC3N,MAAZ,KAAuB,GAAvB,IAA8B4N,WAAW,CAAC5N,MAAZ,KAAuB,GAArD,GAA2DF,QAAQ,GAAG,GAAtE,GAA4EA,QAAQ,GAAG,GAAvF;;AACA,qBAAI,CAACC,kBAAL,CAAwBD,QAAxB;;AACA,qBAAI,CAACf,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AAED,aAfH;AAgBD,WAjBD,MAiBO;AACL,iBAAKiN,WAAL,CAAiBqB,qBAAjB,CAAuC,KAAKC,kBAAL,EAAvC,EAAkE1N,SAAlE,CAA4E,UAACC,QAAD,EAAmB;AAC7F,qBAAI,CAACC,kBAAL,CAAwBD,QAAQ,CAACE,MAAjC;;AACA,qBAAI,CAACjB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD,aAHD;AAID;AACF;;;6CAEyB;AACxB,cAAM6O,eAAe,GAAa,EAAlC;AACA,eAAKvB,cAAL,CAAoBnK,OAApB,CAA4B,UAAC6G,SAAD,EAAyB;AACnD6E,2BAAe,CAAClJ,IAAhB,CAAqBqE,SAAS,CAACtJ,GAA/B;AACD,WAFD;AAGA,iBAAOmO,eAAP;AACD;;;6CAEyB;AACxB,cAAMC,aAAa,GAGb,EAHN;AAIA,eAAKxB,cAAL,CAAoBnK,OAApB,CAA4B,UAAC6G,SAAD,EAAyB;AACnD,gBAAIA,SAAS,CAACyB,QAAV,CAAmBzI,MAAvB,EAA+B;AAC7B,kBAAM+L,WAAW,GAAa,EAA9B;AACA/E,uBAAS,CAACyB,QAAV,CAAmBtI,OAAnB,CAA2B,UAAC4I,OAAD,EAAuB;AAChDgD,2BAAW,CAACpJ,IAAZ,CAAiBoG,OAAO,CAACrL,GAAzB;AACD,eAFD;AAGAoO,2BAAa,CAACnJ,IAAd,CAAmB;AAACoE,2BAAW,EAAEC,SAAS,CAACtJ,GAAxB;AAA6B+N,yBAAS,EAAEM;AAAxC,eAAnB;AACD;AACF,WARD;AASA,iBAAOD,aAAP;AACD;;;;;;;uBA1OU9B,oB,EAAoB,0I,EAAA,uH,EAAA,wI,EAAA,0I;AAAA,K;;;YAApBA,oB;AAAoB,wC;AAAA,c;AAAA,a;AAAA,imC;AAAA;AAAA;ACpBjC;;AAGA;;;;AAHkB;;AAGgC;;AAAA;;;;;;;;;sEDiBrCA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTvO,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpBjtD;;AAA0C;;AAAS;;;;;;;;AAEnD;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAAuE;;AAAkB;;;;;;AAA/C;;;;;;;;AACpE;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAAgH;;AAAoB;;;;;;AAA3F;;;;;;AAKnE;;AAAqC;;AAAqB;;;;;;AAC1D;;AAAsH;;AAAkC;;;;;;AAAlC;;AAAA;;;;;;AAU1G;;AAAiE;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AA+BjE;;AAAkH;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAOlH;;AAA+G;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAkB3G;;AAAsD;;AAAyE;;;;;;AAC/H;;AAAiD;;AAAgH;;;;;;AACjK;;AAAgD;;AAAuI;;;;;;;;AAG/L;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA2D;;AAAa;;;;;;AAuCnG;;AAA8G;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAe9G;;AAA8G;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAqB9G;;AAA6G;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAGjH;;AAA0F;;AAA2D;;;;;;;;AA1D7J;;AACI;;AACI;;AACI;;AACI;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAY;;AACxE;;AACA;;AACA;;AAAW;;AAAmB;;AAC9B;;AACI;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AAC3B;;AACA;;AACA;;AACA;;AACA;;AAAW;;AAAmB;;AAC9B;;AACI;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AAC3B;;AACA;;AACA;;AACA;;AACA;;AAAW;;AAAU;;AACrB;;AACI;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AAC7B;;AACA;;AACA;;AACJ;;AACA;;AACJ;;AACJ;;;;;;;;AA3DkB;;AAAA;;AAQU;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAKK;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAKK;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAGJ;;AAAA;;;;;;;;AA5E3B;;AAEI;;AACI;;AAAO;;AAAqB;;AAC5B;;AACI;;AAA+B;;AAAG;;AAClC;;AAAgC;;AAAE;;AACtC;;AACA;;AACI;;AAAI;;AAAsF;;AAC1F;;AAAI;;AAAoF;;AACxF;;AAAI;;AAAyH;;AAC7H;;AAAI;;AAAwF;;AAChG;;AACJ;;AACA;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAiB;;AAE1F;;AACI;;AA6DJ;;AACJ;;;;;;AA3E8B;;AAAA;;AACA;;AAAA;;AAY6B;;AAAA;;;;;;;;;;;;AAzG3E;;AAGI;;AACI;;AACA;;AACA;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAM;;AAC1D;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AACI;;AAAW;;AAAS;;AACpB;;AACA;;AACJ;;AACJ;;AACJ;;AACA;;AACA;;AACI;;AACI;;AAAW;;AAAkB;;AAC7B;;AACJ;;AACJ;;AACJ;;AAGA;;AACA;AAAA;;AAAA;;AAAA,kDAAkC,IAAlC;AAAsC,SAAtC,EAAuC,QAAvC,EAAuC;AAAA;;AAAA;;AAAA,kDAAmC,KAAnC;AAAwC,SAA/E;;AACI;;AACI;;AAAiB;;AAAuB;;AACxC;;AAAuB;;AAA4C;;AACvE;;AACA;;AACI;;AACI;;AAAI;;AAAuF;;AAC3F;;AAAI;;AAAmE;;AAC3E;;AACJ;;AACA;;AACI;;AACI;;AAA6B;;AAAkB;;AAC/C;;AACmF;AAAA;;AAAA;;AAAA;AAAA;;AAC/E;;AACJ;;AACJ;;AACA;;AACI;;AAA6B;;AAAqB;;AAClD;;AAC4E;AAAA;;AAAA;;AAAA;AAAA;;AACxE;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;AACA;AAAA;;AAAA;;AAAA,gDAAgC,IAAhC;AAAoC,SAApC,EAAqC,QAArC,EAAqC;AAAA;;AAAA;;AAAA,gDAAiC,KAAjC;AAAsC,SAA3E;;AACI;;AACI;;AAAiB;;AAA0B;;AAC3C;;AAAuB;;AAA0C;;AACrE;;AACI;;AAEI;;AACI;;AACI;;AAAI;;AAA6I;;AACjJ;;AACA;;AACA;;AACJ;;AACJ;;AACA;;AAEA;;AAiFJ;;AAER;;AACJ;;;;;;;;;;AA3KkD;;AAIpC;;AAAA;;AACA;;AAAA;;AAE4C;;AAAA;;AACA;;AAAA;;AAK5B;;AAAA;;AACA;;AAAA;;AAUC;;AAAA;;AAc4B;;AAAA;;AAIxB;;AAAA;;AAYnB;;AAAA,+GAAqC,wBAArC,EAAqC,4EAArC;;AACoE;;AAAA;;AAMpE;;AAAA,4GAAkC,wBAAlC,EAAkC,4EAAlC;;AACoE;;AAAA;;AAOzB;;AAAA;;AAIxB;;AAAA;;AAOP;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGkE;;AAAA;;AAE1C;;AAAA;;;;QD1EvCqQ,gB;;;AA2BX,gCAAsB3O,WAAtB,EAA0DwG,WAA1D,EAA8FrG,QAA9F,EACsByM,WADtB,EAC0DlN,MAD1D,EAC0E;AAAA;;AADpD,aAAAM,WAAA,GAAAA,WAAA;AAAoC,aAAAwG,WAAA,GAAAA,WAAA;AAAoC,aAAArG,QAAA,GAAAA,QAAA;AACxE,aAAAyM,WAAA,GAAAA,WAAA;AAAoC,aAAAlN,MAAA,GAAAA,MAAA;AA3B1D,aAAAkP,iBAAA,GAA+B,EAA/B;AACA,aAAAC,iBAAA,GAA4B,EAA5B;AAEA,aAAAC,cAAA,GAAiB,KAAjB;AACA,aAAA1G,MAAA,GAAS,KAAT;AACA,aAAA2G,mBAAA,GAAsB,KAAtB;AACA,aAAAjN,OAAA,GAAU,IAAV;AACA,aAAAkN,WAAA,GAAsB,EAAtB;AAEA,aAAApJ,qBAAA,GAAwB,KAAxB;AACA,aAAAqJ,cAAA,GAA4B,EAA5B;AACA,aAAAhI,aAAA,GAAgB,yBAAhB;AAEA,aAAAlF,YAAA,GAAe,IAAI,iDAAJ,EAAf;AAEA,aAAA6G,IAAA,GAAO,IAAI,uDAAJ,EAAP;AACA,aAAAsG,QAAA,GAAW,KAAX;AACA,aAAAC,QAAA,GAAW,IAAI,wDAAJ,CAAc;AACvB5L,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWsD,QAA/B,CADa;AAEvBuI,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAFU,SAAd,CAAX;AAMA,aAAAC,kBAAA,GAAqB,KAArB;AAI6E;;;;mCAElE;AAAA;;AACT,eAAKtN,YAAL,CAAkBC,GAAlB,CACE,2DAAc,CACZ,KAAKhC,WAAL,CAAiBmJ,WAAjB,EADY,EAEZ,KAAKnJ,WAAL,CAAiBkJ,QAAjB,EAFY,CAAd,EAGG1I,SAHH,CAGa,kBAAuB;AAAA;AAAA,gBAArBwC,QAAqB;AAAA,gBAAXoG,KAAW;;AAClC,mBAAI,CAACpG,QAAL,GAAgBA,QAAhB;AACA,mBAAI,CAACoG,KAAL,GAAaA,KAAb;;AACA,mBAAI,CAACkG,qBAAL;;AACA,mBAAI,CAACxN,OAAL,GAAe,CAAC,OAAI,CAACA,OAArB;AACD,WARD,CADF;AAWD;;;sCAEa;AACZ,eAAKC,YAAL,CAAkBO,WAAlB;AACD;;;wCAEe;AACd,eAAKiN,cAAL,CAAoBjK,IAApB,CAAyB,KAAKkB,WAAL,CAAiBW,KAAjB,CAAuB;AAC9Cf,sBAAU,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWS,QAAZ,CAAL,CADkC;AAE9CR,sBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWQ,QAAhB,CAFkC;AAG9CO,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB;AAHmC,WAAvB,EAItB;AAAEQ,qBAAS,EAAE;AAAb,WAJsB,CAAzB;AAMD;;;yCAEgBC,K,EAAe;AAC9B,eAAKwH,cAAL,GAAsB,IAAtB;AACA,eAAKS,cAAL,CAAoBhI,QAApB,CAA6BD,KAA7B;;AACA,cAAI,CAAC,KAAKiI,cAAL,CAAoB5M,MAAzB,EAAiC;AAC/B,iBAAKwM,QAAL,CAAc3H,aAAd,CAA4B,gBAA5B;AACA,iBAAK6H,kBAAL,GAA0B,KAA1B;AACD;AACF;;;oCAEW1E,K,EAA+B;AACzC,eAAKmE,cAAL,GAAsB,IAAtB;AACAnE,eAAK,CAACC,iBAAN,KAA4BD,KAAK,CAACE,SAAlC,GACE,+EAAgBF,KAAK,CAACE,SAAN,CAAgBxJ,IAAhC,EAAsCsJ,KAAK,CAACG,aAA5C,EAA2DH,KAAK,CAACI,YAAjE,CADF,GAEE,iFAAkBJ,KAAK,CAACC,iBAAN,CAAwBvJ,IAA1C,EAAgDsJ,KAAK,CAACE,SAAN,CAAgBxJ,IAAhE,EAAsEsJ,KAAK,CAACG,aAA5E,EAA2FH,KAAK,CAACI,YAAjG,CAFF;AAGA,eAAK3I,kBAAL,CAAwB,KAAKwM,iBAA7B;AACA,eAAKxM,kBAAL,CAAwB,KAAK6M,cAA7B;AACD;;;gDAEuB;AAAA;;AACtB,cAAMO,mBAAmB,GAAc,EAAvC;AACA,eAAKpG,KAAL,CAAWtG,OAAX,CAAmB,UAAA8F,IAAI;AAAA,mBAAIA,IAAI,CAAC5F,QAAL,CAAcF,OAAd,CAAsB,UAAA6D,OAAO;AAAA,qBAAI6I,mBAAmB,CAAClK,IAApB,CAAyBqB,OAAzB,CAAJ;AAAA,aAA7B,CAAJ;AAAA,WAAvB;AACA,eAAK3D,QAAL,CAAcF,OAAd,CAAsB,UAAA6D,OAAO,EAAI;AAC/B,gBAAI,CAAC6I,mBAAmB,CAAClE,IAApB,CAAyB,UAAAmE,WAAW;AAAA,qBAAIA,WAAW,CAACpP,GAAZ,KAAoBsG,OAAO,CAACtG,GAAhC;AAAA,aAApC,CAAL,EAA+E;AAC7E,qBAAI,CAACuO,iBAAL,CAAuBtJ,IAAvB,CAA4BqB,OAA5B;AACD;AACF,WAJD;AAKA,eAAKvE,kBAAL,CAAwB,KAAKwM,iBAA7B;AACD;;;6CAEoB;AACnB,eAAKS,kBAAL,GAA0B,IAA1B;AACA,eAAKK,cAAL,GAAsB,IAAI,wDAAJ,CAAc,EAAd,CAAtB;AACA,eAAKjC,kBAAL,GAA0B,IAAI,0DAAJ,CAAgB,IAAhB,CAA1B;AACA,eAAKiC,cAAL,CAAoBhI,UAApB,CAA+B,oBAA/B,EAAqD,KAAK+F,kBAA1D;AACA,eAAK8B,cAAL,GAAsB,IAAI,wDAAJ,CAAc,EAAd,CAAtB;AACA,eAAK9H,aAAL;AACA,eAAKiI,cAAL,CAAoBhI,UAApB,CAA+B,gBAA/B,EAAiD,KAAK6H,cAAtD;AACA,eAAKJ,QAAL,CAAczH,UAAd,CAAyB,gBAAzB,EAA2C,KAAKgI,cAAhD;AACD;;;wCAEe;AACd,eAAKhQ,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;sCAEa;AAAA;;AACZ,cAAI,KAAKwP,QAAL,CAAcxH,KAAlB,EAAyB;AACvB,iBAAKgI,aAAL;;AACA,gBAAI,CAAC,KAAKT,QAAV,EAAoB;AAClB,mBAAKtC,WAAL,CAAiBgD,OAAjB,CAAyB,KAAKhH,IAA9B,EAAoCpI,SAApC,CAA8C,UAACC,QAAD;AAAA,uBAAmB,OAAI,CAACC,kBAAL,CAAwBD,QAAQ,CAACE,MAAjC,CAAnB;AAAA,eAA9C;AACD,aAFD,MAEO;AACL,mBAAKkP,qBAAL;AACA,mBAAKC,mBAAL;AACA,mBAAKlD,WAAL,CAAiBmD,UAAjB,CAA4B,KAAKnH,IAAL,CAAUvI,GAAtC,EAA2C,KAAKuI,IAAhD,EAAsDpI,SAAtD,CAAgE,UAACC,QAAD,EAAmB;AACjF,uBAAI,CAACC,kBAAL,CAAwBD,QAAQ,CAACE,MAAjC;;AACA,uBAAI,CAACX,WAAL,CAAiBgI,WAAjB;;AACA,uBAAI,CAAChI,WAAL,CAAiB+H,UAAjB;;AACA,uBAAI,CAAC/H,WAAL,CAAiB8H,cAAjB;AACD,eALD;AAMD;AACF;;AACD,eAAKpI,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;8CAEqB;AACpB,cAAI,KAAKiJ,IAAL,CAAUc,WAAV,KAA0B,CAAC,KAAKd,IAAL,CAAUiB,UAAX,IAA0B,KAAKjB,IAAL,CAAUiB,UAAV,IAAwB,CAAC,KAAKjB,IAAL,CAAUiB,UAAV,CAAqB4D,kBAAlG,CAAJ,EAA4H;AAC1H,iBAAK7E,IAAL,CAAUc,WAAV,GAAwBlH,SAAxB;AACD;AACF;;;wCAEe;AACd,eAAKoG,IAAL,CAAUrF,QAAV,GAAqB,KAAK4L,QAAL,CAAclJ,GAAd,CAAkB,UAAlB,EAA8BpB,KAAnD;AACA,eAAKsK,QAAL,CAAclJ,GAAd,CAAkB,aAAlB,EAAiCpB,KAAjC,CAAuCxB,IAAvC,OAAkD,EAAlD,GACE,KAAKuF,IAAL,CAAUwG,WAAV,GAAwB,KAAKD,QAAL,CAAclJ,GAAd,CAAkB,aAAlB,EAAiCpB,KAD3D,GAEE,KAAK+D,IAAL,CAAUwG,WAAV,GAAwB5M,SAF1B;AAGA,eAAKyM,cAAL,CAAoBtM,MAApB,GACE,KAAKiG,IAAL,CAAU5F,QAAV,GAAqB,KAAKiM,cAD5B,GAEE,KAAKrG,IAAL,CAAU5F,QAAV,GAAqB,EAFvB;;AAGA,cAAI,KAAK0M,cAAL,IAAuB,KAAKH,cAAL,CAAoB5M,MAA/C,EAAuD;AACrD,gBAAMqN,aAAa,GAAG;AACpBnG,wBAAU,EAAE;AACV4D,kCAAkB,EAAE,KAAKiC,cAAL,CAAoBzJ,GAApB,CAAwB,oBAAxB,EAA8CpB,KADxD;AAEV0K,8BAAc,EAAG,KAAKG,cAAL,CAAoBzJ,GAApB,CAAwB,gBAAxB,EAA0CpB;AAFjD;AADQ,aAAtB;AAMA,iBAAK+D,IAAL,CAAUiB,UAAV,GAAuBmG,aAAa,CAACnG,UAArC;AACD,WARD,MAQO;AACL,iBAAKjB,IAAL,CAAUiB,UAAV,GAAuBrH,SAAvB;AACD;AACF;;;2CAEkB7B,M,EAAa;AAC9B,cAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB,iBAAKR,QAAL,CAAcU,IAAd,WAAsB,KAAK+H,IAAL,CAAUrF,QAAhC,6BAAkE,SAAlE,EAA6E;AAC3EzC,wBAAU,EAAE,CAAC,gBAAD;AAD+D,aAA7E;AAGD,WAJD,MAIO;AACL,iBAAKX,QAAL,CAAcU,IAAd,WAAsB,KAAK+H,IAAL,CAAUrF,QAAhC,yBAA8D,SAA9D,EAAyE;AACvEzC,wBAAU,EAAE,CAAC,cAAD;AAD2D,aAAzE;AAGD;;AACD,eAAKd,WAAL,CAAiBgI,WAAjB;AACA,eAAKhI,WAAL,CAAiB8H,cAAjB;AACA,eAAK9H,WAAL,CAAiB+H,UAAjB;AACD;;;2CAEkBkI,Y,EAAyB;AAC1CA,sBAAY,CAAChN,IAAb,CAAkB,UAACC,MAAD,EAASC,KAAT;AAAA,mBAAmBD,MAAM,CAACE,WAAP,CAAmBC,IAAnB,GAA0BC,WAA1B,KAA0CH,KAAK,CAACC,WAAN,CAAkBC,IAAlB,GAAyBC,WAAzB,EAA1C,GAAmF,CAAnF,GAAuF,CAAC,CAA3G;AAAA,WAAlB;AACD,S,CAED;AACA;;;;gDACgC;AAC9B,cAAI,KAAKsF,IAAL,CAAU2G,cAAd,EAA8B;AAC5B,gBAAMS,aAAa,GAAG;AACpBnG,wBAAU,EAAE;AACV4D,kCAAkB,EAAE,IADV;AAEV8B,8BAAc,EAAG,KAAK3G,IAAL,CAAU2G;AAFjB;AADQ,aAAtB;AAMA,iBAAK3G,IAAL,CAAUiB,UAAV,GAAuBmG,aAAa,CAACnG,UAArC;AACA,iBAAKjB,IAAL,CAAU2G,cAAV,GAA2B/M,SAA3B;AACD;AACF;;;;;;;uBAnLUmM,gB,EAAgB,0I,EAAA,2H,EAAA,wI,EAAA,0I,EAAA,uH;AAAA,K;;;YAAhBA,gB;AAAgB,mC;AAAA,c;AAAA,a;AAAA,osE;AAAA;AAAA;AClB7B;;AAKA;;;;AALsC;;AAKmC;;AAAA;;;;;;;;;sEDa5DA,gB,EAAgB;cAN5B,uDAM4B;eANlB;AACTvQ,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAMkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAca4R,wB;;;AAEX,wCAAmBjQ,SAAnB,EAAuG2I,IAAvG,EACoB5I,WADpB,EACsDN,MADtD,EAC8ES,QAD9E,EAEoByM,WAFpB,EAE8C;AAAA;;AAF3B,aAAA3M,SAAA,GAAAA,SAAA;AAAoF,aAAA2I,IAAA,GAAAA,IAAA;AACnF,aAAA5I,WAAA,GAAAA,WAAA;AAAkC,aAAAN,MAAA,GAAAA,MAAA;AAAwB,aAAAS,QAAA,GAAAA,QAAA;AAC1D,aAAAyM,WAAA,GAAAA,WAAA;AAA6B;;;;mCAEtC,CAAE;;;qCAEQ;AAAA;;AACnB,eAAKA,WAAL,CAAiBuD,UAAjB,CAA4B,KAAKvH,IAAL,CAAUvI,GAAtC,EAA2CG,SAA3C,CAAqD,UAACC,QAAD;AAAA,mBAAmB,OAAI,CAACC,kBAAL,CAAwBD,QAAQ,CAACE,MAAjC,CAAnB;AAAA,WAArD;AACD;;;wCAEe;AACd,eAAKV,SAAL,CAAeW,KAAf;AACA,eAAKlB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;yCAEgB;AACf,eAAKwQ,UAAL;AACA,eAAKlQ,SAAL,CAAeW,KAAf;AACA,eAAKlB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;2CAE0BgB,M,EAAgB;AACzC,cAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB,iBAAKR,QAAL,CAAcU,IAAd,WAAsB,KAAK+H,IAAL,CAAUrF,QAAhC,6BAAkE,SAAlE,EAA6E;AAC3EzC,wBAAU,EAAE,CAAC,gBAAD;AAD+D,aAA7E;AAGD,WAJD,MAIO;AACL,iBAAKX,QAAL,CAAcU,IAAd,WAAsB,KAAK+H,IAAL,CAAUrF,QAAhC,yBAA8D,SAA9D,EAAyE;AACvEzC,wBAAU,EAAE,CAAC,cAAD;AAD2D,aAAzE;AAGD;;AACD,eAAKd,WAAL,CAAiBgI,WAAjB;AACA,eAAKhI,WAAL,CAAiB+H,UAAjB;AACA,eAAK/H,WAAL,CAAiB8H,cAAjB;AACD;;;;;;;uBApCUoI,wB,EAAwB,sI,EAAA,gEAE4C,wEAF5C,C,EAE2D,0I,EAAA,uH,EAAA,wI,EAAA,0I;AAAA,K;;;YAFnFA,wB;AAAwB,4C;AAAA,e;AAAA,a;AAAA,+E;AAAA;AAAA;ACdrC;;AACI;;AAAG;;AAC+F;;AACtG;;AACA;;AAAuB;;AAAuB;;AAC9C;;AACI;;AAA0B;AAAA,mBAAS,IAAAlP,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAM;;AAC1D;;AAA0B;AAAA,mBAAS,IAAAC,cAAA,EAAT;AAAyB,WAAzB;;AAA2B;;AAAO;;AAChE;;;;AAPO;;AAAA;;;;;;;;;sEDaMiP,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT9R,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;;;kBAEoC,oD;mBAAQ,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBjF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AHAA;;AACI;;AACJ;;;;;;AAOQ;;AAA2C;;AAAW;;;;;;AACtD;;AAA0C;;AAAS;;;;;;;;AAEnD;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAAuE;;AAAkB;;;;;;AAA/C;;;;;;;;AACpE;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAAgH;;AAAoB;;;;;;AAA3F;;;;;;AAKnE;;AAAqC;;AAAqB;;;;;;AAC1D;;AAAsH;;AAAkC;;;;;;AAAlC;;AAAA;;;;;;AAU1G;;AAAiE;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AA+BjE;;AAAkH;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAOlH;;AAA+G;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAkB3G;;AAAsD;;AAAyE;;;;;;AAC/H;;AAAiD;;AAAgH;;;;;;AACjK;;AAAgD;;AAAuI;;;;;;;;AAG/L;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA2D;;AAAa;;;;;;AAuCnG;;AAA8G;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAe9G;;AAA8G;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAqB9G;;AAA6G;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAGjH;;AAA0F;;AAA2D;;;;;;;;AA1D7J;;AACI;;AACI;;AACI;;AACI;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAY;;AACxE;;AACA;;AACA;;AAAW;;AAAmB;;AAC9B;;AACI;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AAC3B;;AACA;;AACA;;AACA;;AACA;;AAAW;;AAAmB;;AAC9B;;AACI;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AAC3B;;AACA;;AACA;;AACA;;AACA;;AAAW;;AAAU;;AACrB;;AACI;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAE;;AAC7B;;AACA;;AACA;;AACJ;;AACA;;AACJ;;AACJ;;;;;;;;AA3DkB;;AAAA;;AAQU;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAKK;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAKK;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAGJ;;AAAA;;;;;;;;AA5E3B;;AAEI;;AACI;;AAAO;;AAAqB;;AAC5B;;AACI;;AAA+B;;AAAG;;AAClC;;AAAgC;;AAAE;;AACtC;;AACA;;AACI;;AAAI;;AAAsF;;AAC1F;;AAAI;;AAAoF;;AACxF;;AAAI;;AAAyH;;AAC7H;;AAAI;;AAAwF;;AAChG;;AACJ;;AACA;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAiB;;AAE1F;;AACI;;AA6DJ;;AACJ;;;;;;AA3E8B;;AAAA;;AACA;;AAAA;;AAY6B;;AAAA;;;;;;;;;;;;AAzG3E;;AAGI;;AACI;;AACA;;AACA;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAM;;AAC1D;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AACI;;AAAW;;AAAS;;AACpB;;AACA;;AACJ;;AACJ;;AACJ;;AACA;;AACA;;AACI;;AACI;;AAAW;;AAAkB;;AAC7B;;AACJ;;AACJ;;AACJ;;AAGA;;AACA;AAAA;;AAAA;;AAAA,kDAAkC,IAAlC;AAAsC,SAAtC,EAAuC,QAAvC,EAAuC;AAAA;;AAAA;;AAAA,kDAAmC,KAAnC;AAAwC,SAA/E;;AACI;;AACI;;AAAiB;;AAAuB;;AACxC;;AAAuB;;AAA4C;;AACvE;;AACA;;AACI;;AACI;;AAAI;;AAAuF;;AAC3F;;AAAI;;AAAmE;;AAC3E;;AACJ;;AACA;;AACI;;AACI;;AAA6B;;AAAkB;;AAC/C;;AACmF;AAAA;;AAAA;;AAAA;AAAA;;AAC/E;;AACJ;;AACJ;;AACA;;AACI;;AAA6B;;AAAqB;;AAClD;;AAC4E;AAAA;;AAAA;;AAAA;AAAA;;AACxE;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;AACA;AAAA;;AAAA;;AAAA,gDAAgC,IAAhC;AAAoC,SAApC,EAAqC,QAArC,EAAqC;AAAA;;AAAA;;AAAA,gDAAiC,KAAjC;AAAsC,SAA3E;;AACI;;AACI;;AAAiB;;AAA0B;;AAC3C;;AAAuB;;AAA0C;;AACrE;;AACI;;AAEI;;AACI;;AACI;;AAAI;;AAA6I;;AACjJ;;AACA;;AACA;;AACJ;;AACJ;;AACA;;AAEA;;AAiFJ;;AAER;;AACJ;;;;;;;;;;AA3KkD;;AAIpC;;AAAA;;AACA;;AAAA;;AAE4C;;AAAA;;AACA;;AAAA;;AAK5B;;AAAA;;AACA;;AAAA;;AAUC;;AAAA;;AAc4B;;AAAA;;AAIxB;;AAAA;;AAYnB;;AAAA,gHAAqC,wBAArC,EAAqC,6EAArC;;AACoE;;AAAA;;AAMpE;;AAAA,6GAAkC,wBAAlC,EAAkC,6EAAlC;;AACoE;;AAAA;;AAOzB;;AAAA;;AAIxB;;AAAA;;AAOP;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGkE;;AAAA;;AAE1C;;AAAA;;;;QG1EvC8R,iB;;;;;;;AAGX,iCAAoBvO,cAApB,EAA8D7B,WAA9D,EAAkGwG,WAAlG,EACsBoG,WADtB,EAC0DzM,QAD1D,EAC2FT,MAD3F,EAC2G;AAAA;;AAAA;;AACvG,qCAAMM,WAAN,EAAmBwG,WAAnB,EAAgCrG,QAAhC,EAA0CyM,WAA1C,EAAuDlN,MAAvD;AAFgB,gBAAAmC,cAAA,GAAAA,cAAA;AAA0C,gBAAA7B,WAAA,GAAAA,WAAA;AAAoC,gBAAAwG,WAAA,GAAAA,WAAA;AAC5E,gBAAAoG,WAAA,GAAAA,WAAA;AAAoC,gBAAAzM,QAAA,GAAAA,QAAA;AAAiC,gBAAAT,MAAA,GAAAA,MAAA;AAAgB;AAExG;;;;mCAEQ;AAAA;;AACT,eAAKwP,QAAL,GAAgB,IAAhB;AACA,eAAKnN,YAAL,CAAkBC,GAAlB,CACE,2DAAc,CACZ,KAAKhC,WAAL,CAAiBsI,OAAjB,EADY,EAEZ,KAAKtI,WAAL,CAAiBkJ,QAAjB,EAFY,EAGZ,KAAKrH,cAAL,CAAoBT,MAApB,CAA2Ba,IAA3B,CACE,iEAAU,UAAAb,MAAM;AAAA,mBAAI,OAAI,CAACpB,WAAL,CAAiBqQ,WAAjB,CAA6BjP,MAAM,CAACzE,EAApC,CAAJ;AAAA,WAAhB,CADF,EAEE,4DAAK,CAAL,CAFF,CAHY,EAOZ,KAAKqD,WAAL,CAAiBmJ,WAAjB,EAPY,CAAd,EAQG3I,SARH,CAQa,kBAAmC;AAAA;AAAA,gBAAjC+H,IAAiC;AAAA,gBAA3Ba,KAA2B;AAAA,gBAApBR,IAAoB;AAAA,gBAAd5F,QAAc;;AAC5C,mBAAI,CAACsN,kBAAL,CAAwB1H,IAAxB;;AACA,mBAAI,CAACL,IAAL,GAAYA,IAAZ;AACA,mBAAI,CAACa,KAAL,GAAaA,KAAb;AACA,mBAAI,CAACR,IAAL,GAAYA,IAAZ;AACA,mBAAI,CAAC5F,QAAL,GAAgBA,QAAhB;AACA,mBAAI,CAACmM,QAAL,GAAgB,IAAI,wDAAJ,CAAc;AAC5B5L,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,OAAI,CAACqF,IAAL,CAAUrF,QAA1B,EAAoC,0DAAWsD,QAA/C,CADkB;AAE5BuI,yBAAW,EAAE,IAAI,0DAAJ,CAAgB,OAAI,CAACmB,uBAAL,EAAhB;AAFe,aAAd,CAAhB;;AAIA,mBAAI,CAACjB,qBAAL;;AACA,mBAAI,CAACkB,kBAAL;;AACA,mBAAI,CAACC,sBAAL;;AACA,mBAAI,CAAC/H,SAAL;;AACA,mBAAI,CAACgI,gBAAL;;AACA,mBAAI,CAAC5O,OAAL,GAAe,CAAC,OAAI,CAACA,OAArB;AACH,WAxBD,CADF;AA2BD;;;sCAEa;AACZ,eAAKC,YAAL,CAAkBO,WAAlB;AACD;;;6CAE4B;AAC3B,eAAK2M,cAAL,GAAsB,KAAKrG,IAAL,CAAU5F,QAAhC;AACD;;;kDAE8B;AAC7B,cAAI,KAAK4F,IAAL,CAAUwG,WAAd,EAA2B;AACzB,mBAAO,KAAKxG,IAAL,CAAUwG,WAAjB;AACD,WAFD,MAEO;AACL,mBAAO,EAAP;AACD;AACF;;;iDAEgC;AAAA;;AAC/B,cAAI,KAAKxG,IAAL,CAAUiB,UAAd,EAA0B;AACxB,iBAAKwF,kBAAL,GAA0B,IAA1B;AACA,iBAAKK,cAAL,GAAsB,IAAI,wDAAJ,CAAc,EAAd,CAAtB;AACA,iBAAKjC,kBAAL,GAA0B,IAAI,0DAAJ,CAAgB,KAAK7E,IAAL,CAAUiB,UAAV,CAAqB4D,kBAArC,CAA1B;AACA,iBAAKiC,cAAL,CAAoBhI,UAApB,CAA+B,oBAA/B,EAAqD,KAAK+F,kBAA1D;AACA,iBAAK8B,cAAL,GAAsB,IAAI,wDAAJ,CAAc,EAAd,CAAtB;AACA,iBAAK3G,IAAL,CAAUiB,UAAV,CAAqB0F,cAArB,CAAoCzM,OAApC,CAA4C,UAAA+F,OAAO,EAAI;AACrD,qBAAI,CAAC0G,cAAL,CAAoBjK,IAApB,CAAyB,OAAI,CAACkB,WAAL,CAAiBW,KAAjB,CAAuB;AAC9Cf,0BAAU,EAAE,CAACyC,OAAO,CAACzC,UAAT,EAAqB,0DAAWS,QAAhC,CADkC;AAE9CR,0BAAU,EAAE,CAACwC,OAAO,CAACxC,UAAT,EAAqB,0DAAWQ,QAAhC,CAFkC;AAG9CO,yBAAS,EAAE,CAACyB,OAAO,CAACzB,SAAT,EAAoB,0DAAWP,QAA/B;AAHmC,eAAvB,EAKzB;AAAEQ,yBAAS,EAAE;AAAb,eALyB,CAAzB;;AAOA,qBAAI,CAACqI,cAAL,CAAoBhI,UAApB,CAA+B,gBAA/B,EAAiD,OAAI,CAAC6H,cAAtD;AACD,aATD;AAUA,iBAAKJ,QAAL,CAAczH,UAAd,CAAyB,gBAAzB,EAA2C,KAAKgI,cAAhD;AACD;AACF;;;oCAEmB;AAAA;;AAClB,eAAKnH,IAAL,CAAUA,IAAV,CAAezF,OAAf,CAAuB,UAAC8F,IAAD,EAAgB;AACrC,gBAAIA,IAAI,CAACvI,GAAL,KAAa,OAAI,CAACuI,IAAL,CAAUvI,GAA3B,EAAgC;AAC9B,qBAAI,CAAC+H,MAAL,GAAc,IAAd;AACD;AACF,WAJD;AAKD;;;2CAE0B;AAAA;;AACzB,cAAI,KAAKQ,IAAL,CAAUc,WAAd,EAA2B;AACzB,iBAAKD,aAAL,GAAqB,KAAKL,KAAL,CAAWuC,IAAX,CAAgB,UAAChC,SAAD;AAAA,qBAAeA,SAAS,CAACtJ,GAAV,KAAkB,OAAI,CAACuI,IAAL,CAAUc,WAA3C;AAAA,aAAhB,EAAwEnG,QAA7F;AACD;AACF;;;2CAE0BqF,I,EAAW;AACpC,cAAIA,IAAI,KAAKpG,SAAT,IAAsBC,MAAM,CAACC,OAAP,CAAekG,IAAf,EAAqBjG,MAArB,KAAgC,CAAhC,IAAqCiG,IAAI,CAAChG,WAAL,KAAqBH,MAApF,EAA4F;AAC1F,iBAAKtC,QAAL,CAAcU,IAAd,CAAmB,mCAAnB,EAAwD,SAAxD,EAAmE;AACjEC,wBAAU,EAAE,CAAC,cAAD;AADqD,aAAnE;AAGA,iBAAKpB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;AACF;;;;MAjGoC,6E;;;uBAA1ByQ,iB,EAAiB,+H,EAAA,0I,EAAA,2H,EAAA,0I,EAAA,wI,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,0F;AAAA,c;AAAA,a;AAAA,osE;AAAA;AAAA;AHlB9B;;AAKA;;;;AALsC;;AAKmC;;AAAA;;;;;;;;;sEGa5DA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACThS,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaqS,wB;;;AAIX,wCAAoBxP,MAApB,EAA+CzB,MAA/C,EAA+D;AAAA;;AAA3C,aAAAyB,MAAA,GAAAA,MAAA;AAA2B,aAAAzB,MAAA,GAAAA,MAAA;AAAmB;;;;+BAE3D0B,M,EAAQ;AACb,eAAKC,IAAL,GAAaD,MAAM,CAACC,IAApB;AACD;;;mCAEU,CAAE;;;wCAEG;AACd,eAAKF,MAAL,CAAYN,IAAZ,CAAiB,uGAAjB,EAA2C;AACzCQ,gBAAI,EAAE,KAAKA,IAD8B;AAEzCE,wBAAY,EAAE,IAF2B;AAGzCT,sBAAU,EAAE,CAAC,yBAAD,CAH6B;AAIzCU,iBAAK,EAAE;AAJkC,WAA3C;AAMD;;;sCAEa;AACZ,eAAK9B,MAAL,CAAYC,QAAZ,CAAqB,CAAC,OAAD,EAAU,KAAK0B,IAAL,CAAUhB,GAApB,CAArB;AACD;;;;;;;uBAvBUsQ,wB,EAAwB,mI,EAAA,uH;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA,c;AAAA,a;AAAA,sF;AAAA;AAAA;ACVrC;;AAAyB;AAAA,mBAAS,IAAA5H,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAI;;AACrD;;AAA2B;AAAA,mBAAS,IAAArH,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAM;;;;;;;;sEDS9CiP,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTvS,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACJ;;;;;;;;AAEI;;AACI;;AACI;;AAAuB;;AAAK;;AAC5B;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAa;;AACnE;;AAA0B;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAW;;AACvE;;AACA;;AASA;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACJ;;;;;;AATI;;AAAA,oGAAyB,eAAzB,EAAyB,sBAAzB,EAAyB,uBAAzB,EAAyB,IAAzB,EAAyB,YAAzB,EAAyB,IAAzB,EAAyB,wBAAzB,EAAyB,IAAzB,EAAyB,SAAzB,EAAyB,gBAAzB;;;;QDAKsS,c;;;AAyBX,8BAAoB5Q,WAApB,EAAsDN,MAAtD,EAAsE;AAAA;;AAAlD,aAAAM,WAAA,GAAAA,WAAA;AAAkC,aAAAN,MAAA,GAAAA,MAAA;AAxBtD,aAAA+D,UAAA,GAAa,CACX;AAACC,oBAAU,EAAE,WAAb;AAA0BC,eAAK,EAAE,UAAjC;AAA6CV,cAAI,EAAE;AAAnD,SADW,EAEX;AAACS,oBAAU,EAAE,eAAb;AAA8BC,eAAK,EAAE;AAArC,SAFW,EAGX;AAACD,oBAAU,EAAE,YAAb;AAA2BC,eAAK,EAAE;AAAlC,SAHW,EAIX;AAACD,oBAAU,EAAE,YAAb;AAA2BC,eAAK,EAAE;AAAlC,SAJW,EAKX;AAACD,oBAAU,EAAE,SAAb;AAAwBC,eAAK,EAAE;AAA/B,SALW,EAMX;AAACD,oBAAU,EAAE,EAAb;AAAiBC,eAAK,EAAE,QAAxB;AAAkCK,gBAAM,EAAE,KAA1C;AAAiDC,kBAAQ,EAAE,KAA3D;AAAkEzC,eAAK,EAAE,GAAzE;AAA8E0C,+BAAqB,EAAE;AAArG,SANW,CAAb;AAQA,aAAAC,aAAA,GAAgB;AACdH,gBAAM,EAAE,IADM;AAEdI,sBAAY,EAAE;AACZC,kCAAsB,EAAE;AADZ,WAFA;AAKdC,mBAAS,EAAE,IALG;AAMdL,kBAAQ,EAAE,IANI;AAOdzC,eAAK,EAAE;AAPO,SAAhB;AAUA,aAAAM,OAAA,GAAU,IAAV;AACA,aAAAyC,OAAA,GAAU,EAAV;AAEA,aAAAxC,YAAA,GAAe,IAAI,iDAAJ,EAAf;AAGyE;;;;mCAE9D;AAAA;;AACT,eAAKA,YAAL,CAAkBC,GAAlB,CACE,2DAAc,CACd,KAAKhC,WAAL,CAAiBsI,OAAjB,EADc,EAEd,KAAKtI,WAAL,CAAiBkJ,QAAjB,EAFc,CAAd,EAGG1I,SAHH,CAGa,kBAAmB;AAAA;AAAA,gBAAjB+H,IAAiB;AAAA,gBAAXa,KAAW;;AAC9B,mBAAI,CAACb,IAAL,GAAYA,IAAZ;AACA,mBAAI,CAACa,KAAL,GAAaA,KAAb;AACA,mBAAI,CAAC7E,OAAL,GAAe,OAAI,CAACG,kBAAL,EAAf;AACA,mBAAI,CAAC5C,OAAL,GAAe,KAAf;AACD,WARD,CADF;AAWD;;;sCAEa;AACZ,eAAKC,YAAL,CAAkBO,WAAlB;AACD;;;oCAEWlB,M,EAAQ;AAClB,eAAKkI,OAAL,GAAelI,MAAM,CAACmI,GAAtB;AACA,eAAKD,OAAL,CAAaE,UAAb,CAAwB,KAAKjF,OAA7B;AACD;;;wCAEuBoJ,W,EAAmB;AACzC,cAAIvF,MAAM,GAAG,KAAb;AACA,eAAKG,IAAL,CAAUA,IAAV,CAAezF,OAAf,CAAuB,UAAC8F,IAAD,EAAgB;AACrC,gBAAIA,IAAI,CAACvI,GAAL,KAAasN,WAAW,CAACtN,GAA7B,EAAkC;AAChC+H,oBAAM,GAAG,IAAT;AACD;AACF,WAJD;AAKA,iBAAOA,MAAP;AACD;;;yCAEwBuF,W,EAAmB;AAC1C,cAAIlE,aAAa,GAAG,MAApB;AACA,eAAKL,KAAL,CAAWtG,OAAX,CAAmB,UAAC8F,IAAD,EAAgB;AACjC,gBAAIA,IAAI,CAACvI,GAAL,KAAasN,WAAW,CAACjE,WAA7B,EAA0C;AACxCD,2BAAa,GAAGb,IAAI,CAACrF,QAArB;AACD;AACF,WAJD;AAKA,iBAAOkG,aAAP;AACD;;;6CAE4B;AAAA;;AAC3B,cAAMlF,OAAO,GAAG,EAAhB;AACA,eAAK6E,KAAL,CAAWtG,OAAX,CAAmB,UAAC8F,IAAD,EAAgB;AACjC,gBAAMjE,QAAQ,GAAG,EAAjB;AACAlC,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,KAAhC,EAAuC;AAACE,mBAAK,EAAE+D,IAAI,CAACvI;AAAb,aAAvC;AACAoC,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,UAAhC,EAA4C;AAACE,mBAAK,EAAE+D,IAAI,CAACrF;AAAb,aAA5C;AACAqF,gBAAI,CAAC5F,QAAL,GACEP,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,cAAhC,EAAgD;AAACE,mBAAK,EAAE+D,IAAI,CAAC5F,QAAL,CAAcL;AAAtB,aAAhD,CADF,GAEEF,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,cAAhC,EAAgD;AAACE,mBAAK,EAAE;AAAR,aAAhD,CAFF;AAGA+D,gBAAI,CAACiB,UAAL,GACEpH,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,WAAhC,EAA6C;AAACE,mBAAK,EAAE;AAAR,aAA7C,CADF,GAEEpC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,WAAhC,EAA6C;AAACE,mBAAK,EAAE;AAAR,aAA7C,CAFF;AAGApC,kBAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,WAAhC,EAA6C;AAACE,mBAAK,EAAE,OAAI,CAACgM,gBAAL,CAAsBjI,IAAtB;AAAR,aAA7C;AACA,mBAAI,CAACqB,eAAL,CAAqBrB,IAArB,IACEnG,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,QAAhC,EAA0C;AAACE,mBAAK,EAAE;AAAR,aAA1C,CADF,GAEEpC,MAAM,CAACmC,cAAP,CAAsBD,QAAtB,EAAgC,QAAhC,EAA0C;AAACE,mBAAK,EAAE;AAAR,aAA1C,CAFF;AAGAN,mBAAO,CAACe,IAAR,CAAaX,QAAb;AACD,WAfD;AAgBA,iBAAOJ,OAAP;AACD;;;4CAEmB;AAClB,eAAK7E,MAAL,CAAYC,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;uCAEc;AACb,eAAKD,MAAL,CAAYC,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;;0CAEiB;AAChB,eAAKD,MAAL,CAAYC,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD;;;;;;;uBArGUiR,c,EAAc,0I,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,yc;AAAA;AAAA;ACb3B;;AAGA;;AACI;;AAmBJ;;;;AAvBkB;;AAIuB;;AAAA;;;;;;;;;sEDS5BA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTxS,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASawS,S;;;AAEX,yBAAoB7S,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA4B;;;;oCAEpC8S,I,EAA8BC,K,EAA0B;AAAA;;AAClE,iBAAO,KAAK/S,WAAL,CAAiBgT,eAAjB,CAAiChP,IAAjC,CACL,2DAAI,UAAAiP,QAAQ,EAAI;AACd,gBAAI,CAACA,QAAL,EAAe;AACb,qBAAI,CAACjT,WAAL,CAAiBkT,KAAjB,CAAuBH,KAAK,CAACI,GAA7B;AACD;AACF,WAJD,CADK,CAAP;AAOD;;;;;;;uBAZUN,S,EAAS,0H;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVO,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;ACNtB;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,K;;;;;;;;;;;;;;;;;;;ACHb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,O;;;;;;;;;;;;;;;;;;;ACEb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,I;;;;;;;;;;;;;;;;;;;ACFb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaC,W;;;AAmBX,2BAAoB/R,MAApB,EAAoC;AAAA;;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAlBpB,aAAAwR,QAAA,GAAoB,IAApB;AAEA,aAAAQ,WAAA,GAAc,KAAd;AACQ,aAAAC,iBAAA,GAAoB,IAAI,oDAAJ,CAAoB,KAAKD,WAAzB,CAApB;AACR,aAAAE,kBAAA,GAAqB,KAAKD,iBAAL,CAAuBE,YAAvB,EAArB;AAEA,aAAAC,WAAA,GAAe,kDAAK,2DAAkB,oDAAlB,CAAL,EAAgE7P,IAAhE,CACb,mEAAY,CAAZ,CADa,EAEb,kEAAW,UAAA8P,GAAG;AAAA,iBAAI,wDAAWA,GAAX,CAAJ;AAAA,SAAd,CAFa,CAAf;AAIA,aAAAd,eAAA,GAAkB,KAAKa,WAAL,CAAiB7P,IAAjB,CAChB,iEAAU,UAAC+P,MAAD;AAAA,iBAAyB,kDAAKA,MAAM,CAACf,eAAP,EAAL,CAAzB;AAAA,SAAV,CADgB,EAEhB,2DAAI,UAAAgB,GAAG;AAAA,iBAAI,OAAI,CAACf,QAAL,GAAgBe,GAApB;AAAA,SAAP,CAFgB,CAAlB;AAIA,aAAAC,sBAAA,GAAyB,KAAKJ,WAAL,CAAiB7P,IAAjB,CACvB,iEAAU,UAAC+P,MAAD;AAAA,iBAAyB,kDAAKA,MAAM,CAACE,sBAAP,EAAL,CAAzB;AAAA,SAAV,CADuB,CAAzB;AAIuC;;;;0CAErBC,O,EAAQ;AACxB,iBAAO,KAAKL,WAAL,CAAiB7P,IAAjB,CACL,iEAAU,UAAC+P,MAAD;AAAA,mBAAyB,kDAAKA,MAAM,CAACI,gBAAP,CAAwBD,OAAxB,CAAL,CAAzB;AAAA,WAAV,CADK,CAAP;AAGD;;;yCAEgB;AAAA;;AACf,cAAME,SAAS,GAAG,KAAKpB,eAAL,CAAqBhP,IAArB,CAChB,iEAAU,UAACiP,QAAD,EAAuB;AAC/B,mBAAO,gDAAGA,QAAH,CAAP;AACD,WAFD,CADgB,CAAlB;AAKAmB,mBAAS,CAAC7R,SAAV,CAAoB,UAACC,QAAD,EAAgD;AAClE,mBAAI,CAACyQ,QAAL,GAAgB,CAAC,CAACzQ,QAAlB;AACD,WAFD;AAGD;;;gCAEuC;AAAA,cAAlC6R,YAAkC;AACtC,eAAKR,WAAL,CAAiBtR,SAAjB,CAA2B,UAACwR,MAAD,EAAyB;AAClDA,kBAAM,CAACO,iBAAP,CAAyB;AACvBxV,0BAAY,YAAKC,MAAM,CAACC,QAAP,CAAgBC,MAArB,cADW;AAEvBsV,sBAAQ,EAAE;AAAEC,sBAAM,EAAEH;AAAV;AAFa,aAAzB;AAID,WALD;AAMD;;;6CAEoB;AAAA;;AACnB,cAAII,WAAJ;AACA,cAAMC,YAAY,GAAG,KAAKT,sBAAL,CAA4BjQ,IAA5B,CACnB,2DAAI,UAAA2Q,KAAK,EAAI;AACXF,uBAAW,GAAGE,KAAK,CAACJ,QAAN,IAAkBI,KAAK,CAACJ,QAAN,CAAeC,MAAjC,GAA0CG,KAAK,CAACJ,QAAN,CAAeC,MAAzD,GAAkE,GAAhF;AACD,WAFD,CADmB,EAInB,iEAAU,YAAM;AACd,mBAAO,2DAAc,CACnB,OAAI,CAACxB,eADc,CAAd,CAAP;AAGD,WAJD,CAJmB,CAArB;AAUA0B,sBAAY,CAACnS,SAAb,CAAuB,kBAAgB;AAAA;AAAA,gBAAd0Q,QAAc;;AACrC,mBAAI,CAACxR,MAAL,CAAYC,QAAZ,CAAqB,CAAC+S,WAAD,CAArB;AACD,WAFD;AAGD;;;iCAEQ;AACP,eAAKZ,WAAL,CAAiBtR,SAAjB,CAA2B,UAACwR,MAAD,EAAyB;AAClDA,kBAAM,CAACa,MAAP,CAAc;AACZhW,uBAAS,EAAE,qDAAWA,SADV;AAEZiW,sBAAQ,YAAK9V,MAAM,CAACC,QAAP,CAAgBC,MAArB;AAFI,aAAd;AAID,WALD;AAMD;;;2CAEe;AACd,iBAAO,KAAK0U,kBAAZ;AACD;;;wCAEe;AACd,eAAKD,iBAAL,CAAuBZ,IAAvB,CAA4B,IAA5B;AACD;;;;;;;uBA/EUU,W,EAAW,8G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVJ,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACZxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiBa0B,W;;;AAMX,2BAAoB5S,QAApB,EAAmDD,YAAnD,EAAuFuG,cAAvF,EACoB0D,WADpB,EACsDyC,WADtD,EACgF;AAAA;;AAD5D,aAAAzM,QAAA,GAAAA,QAAA;AAA+B,aAAAD,YAAA,GAAAA,YAAA;AAAoC,aAAAuG,cAAA,GAAAA,cAAA;AACnE,aAAA0D,WAAA,GAAAA,WAAA;AAAkC,aAAAyC,WAAA,GAAAA,WAAA;AANtD,aAAAnI,MAAA,GAAkB,EAAlB;AACA,aAAAzB,QAAA,GAAsB,EAAtB;AACA,aAAAuF,IAAA,GAAa;AAAClI,aAAG,EAAE,IAAN;AAAYkI,cAAI,EAAE;AAAlB,SAAb;AACA,aAAAa,KAAA,GAAgB,EAAhB;AAUQ,aAAA4J,YAAA,GAAe,IAAI,6EAAJ,CAAoB,KAAKvO,MAAzB,CAAf;AACR,aAAAwO,aAAA,GAAgB,KAAKD,YAAL,CAAkBnB,YAAlB,EAAhB;AAEQ,aAAAqB,cAAA,GAAiB,IAAI,6EAAJ,CAAoB,KAAKlQ,QAAzB,CAAjB;AACR,aAAAmQ,eAAA,GAAkB,KAAKD,cAAL,CAAoBrB,YAApB,EAAlB;AAEQ,aAAAuB,UAAA,GAAa,IAAI,6EAAJ,CAAoB,KAAK7K,IAAzB,CAAb;AACR,aAAA8K,WAAA,GAAc,KAAKD,UAAL,CAAgBvB,YAAhB,EAAd;AAEQ,aAAAyB,WAAA,GAAc,IAAI,6EAAJ,CAAoB,KAAKlK,KAAzB,CAAd;AACR,aAAAiD,YAAA,GAAe,KAAKiH,WAAL,CAAiBzB,YAAjB,EAAf;AAhBc,aAAK9J,UAAL;AACA,aAAKC,WAAL;AACA,aAAKF,cAAL;AACA,aAAK/G,YAAL;AACA;;;;oCAcL;AACP,iBAAO,KAAKkS,aAAZ;AACD;;;qCAEYM,O,EAAiB;AAC5B,iBAAO,KAAKN,aAAL,CAAmBhR,IAAnB,CAAwB,2DAC7B,UAACwC,MAAD;AAAA,mBAAqBA,MAAM,CAACkH,IAAP,CAAY,UAACvM,KAAD;AAAA,qBAAkBA,KAAK,CAACiB,GAAN,KAAckT,OAAhC;AAAA,aAAZ,CAArB;AAAA,WAD6B,CAAxB,CAAP;AAGD;;;sCAEU;AACT,iBAAO,KAAKJ,eAAZ;AACD;;;uCAEcK,S,EAAiB;AAC9B,iBAAO,KAAKL,eAAL,CAAqBlR,IAArB,CAA0B,2DAC/B,UAACe,QAAD;AAAA,mBAAyBA,QAAQ,CAAC2I,IAAT,CAAc,UAAChF,OAAD;AAAA,qBAAsBA,OAAO,CAACtG,GAAR,KAAgBmT,SAAtC;AAAA,aAAd,CAAzB;AAAA,WAD+B,CAA1B,CAAP;AAGD;;;kCAEM;AACL,iBAAO,KAAKH,WAAZ;AACD;;;mCAEO;AACN,iBAAO,KAAKhH,YAAZ;AACD;;;oCAEWoH,M,EAAgB;AAC1B,iBAAO,KAAKpH,YAAL,CAAkBpK,IAAlB,CAAuB,2DAC5B,UAACmH,KAAD;AAAA,mBAAmBA,KAAK,CAACuC,IAAN,CAAW,UAAC/C,IAAD;AAAA,qBAAgBA,IAAI,CAACvI,GAAL,KAAaoT,MAA7B;AAAA,aAAX,CAAnB;AAAA,WAD4B,CAAvB,CAAP;AAGD;;;uCAEc;AAAA;;AACb,eAAKvT,YAAL,CAAkBsE,SAAlB,GAA8BhE,SAA9B,CAAwC,UAACiE,MAAD,EAAqB;AAC3D,mBAAI,CAACuO,YAAL,CAAkBjC,IAAlB,CAAuBtM,MAAvB;AACD,WAFD;AAGD;;;yCAEgB;AAAA;;AACf,eAAKgC,cAAL,CAAoB0C,WAApB,GAAkC3I,SAAlC,CAA4C,UAACwC,QAAD,EAAyB;AACnE,mBAAI,CAACkQ,cAAL,CAAoBnC,IAApB,CAAyB/N,QAAzB;AACD,WAFD;AAGD;AAED;;;;;;;qCAIa;AAAA;;AACX,eAAKmH,WAAL,CAAiB7B,OAAjB,GAA2B9H,SAA3B,CAAqC,UAAC+H,IAAD,EAAgB;AACnDA,gBAAI,GAAG,OAAI,CAACmL,0BAAL,CAAgCnL,IAAhC,CAAP;;AACA,mBAAI,CAAC6K,UAAL,CAAgBrC,IAAhB,CAAqBxI,IAArB;AACD,WAHD;AAID;AAED;;;;;;;;;;mDAOmCA,I,EAAU;AAC3C,cAAMoL,mBAAmB,GAAWpL,IAAI,CAACA,IAAL,CAAU5F,MAA9C;AACA,cAAMiR,YAAY,GAAa,EAA/B;AACArL,cAAI,CAACA,IAAL,CAAUzF,OAAV,CAAkB,UAAC4I,OAAD,EAAmB;AACnC,gBAAIA,OAAO,CAAChC,WAAZ,EAAyB;AACvBkK,0BAAY,CAACtO,IAAb,CAAkBoG,OAAO,CAAChC,WAA1B;AACD;AACF,WAJD;AAKAnB,cAAI,CAACA,IAAL,CAAUzF,OAAV,CAAkB,UAACwJ,WAAD,EAAuB;AACvC,gBAAI,CAACA,WAAW,CAACtJ,QAAZ,CAAqBL,MAAtB,IAAgC,CAACiR,YAAY,CAACC,QAAb,CAAsBvH,WAAW,CAACjM,GAAlC,CAArC,EAA6E;AAC3EkI,kBAAI,CAACA,IAAL,GAAYA,IAAI,CAACA,IAAL,CAAUvE,MAAV,CAAiB,UAAC4E,IAAD;AAAA,uBAAgBA,IAAI,CAACvI,GAAL,KAAaiM,WAAW,CAACjM,GAAzC;AAAA,eAAjB,CAAZ;AACD;AACF,WAJD;;AAKA,cAAIsT,mBAAmB,GAAGpL,IAAI,CAACA,IAAL,CAAU5F,MAApC,EAA4C;AAC1C,iBAAKmR,iBAAL,CAAuBvL,IAAvB;AACD;;AACD,iBAAOA,IAAP;AACD;AAED;;;;;;;;;0CAM0BA,I,EAAY;AAAA;;AACpC,eAAK4B,WAAL,CAAiBpC,UAAjB,CAA4BQ,IAAI,CAAClI,GAAjC,EAAsCkI,IAAtC,EAA4C/H,SAA5C,CAAsD,UAACC,QAAD,EAAmB;AACvE,gBAAIA,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,qBAAI,CAACR,QAAL,CAAcU,IAAd,CAAmB,qBAAnB,EAA0C,SAA1C,EAAqD;AACnDC,0BAAU,EAAE,CAAC,gBAAD;AADuC,eAArD;AAED,aAHD,MAGO;AACL,qBAAI,CAACX,QAAL,CAAcU,IAAd,CAAmB,yDAAnB,EAA8E,SAA9E,EAAyF;AACvFC,0BAAU,EAAE,CAAC,cAAD;AAD2E,eAAzF;AAED;AACF,WARD;AASD;;;sCAEa;AAAA;;AACZ,eAAK8L,WAAL,CAAiB1D,QAAjB,GAA4B1I,SAA5B,CAAsC,UAAC4I,KAAD,EAAmB;AACvD,mBAAI,CAACkK,WAAL,CAAiBvC,IAAjB,CAAsB3H,KAAtB;AACD,WAFD;AAGD;;;;;;;uBAnIU2J,W,EAAW,+H,EAAA,mH,EAAA,uH,EAAA,iH,EAAA,iH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACV1B,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAca0C,kB;;;AAEX,kCAAoB9V,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA6B;;;;kCAG/ChC,G,EACA8U,I,EAAiB;AAEjB,iBAAO,KAAK9S,WAAL,CAAiB+V,iBAAjB,GAAqC/R,IAArC,CACL,gEAAS,UAAAgS,KAAK,EAAI;AAChB,gBAAMC,QAAQ,GAAGjY,GAAG,CAACkY,KAAJ,CAAU;AACzBC,wBAAU,EAAE;AAAEC,6BAAa,mBAAYJ,KAAZ;AAAf;AADa,aAAV,CAAjB;AAGA,mBAAOlD,IAAI,CAACuD,MAAL,CAAYJ,QAAZ,CAAP;AACD,WALD,CADK,EAOL,kEAAW,UAAAnC,GAAG;AAAA,mBAAI,wDAAWA,GAAX,CAAJ;AAAA,WAAd,CAPK,CAAP;AASD;;;;;;;uBAjBUgC,kB,EAAkB,iH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACV1C,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;ACd/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQakD,Y;;;AAGX,4BAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAFpB,aAAApD,GAAA,GAAM,sEAAYqD,MAAlB;AAE+C;;;;qCAElClB,O,EAAiB;AAC5B,iBAAO,KAAKiB,UAAL,CAAgBvO,GAAhB,WAA8B,KAAKmL,GAAnC,qBAAiDmC,OAAjD,EAAP;AACD;;;oCAEW;AACV,iBAAO,KAAKiB,UAAL,CAAgBvO,GAAhB,WAAgC,KAAKmL,GAArC,cAAP;AACD;;;4CAEmBmC,O,EAAiBjS,Q,EAAkB;AACrD,iBAAO,KAAKkT,UAAL,CAAgBE,GAAhB,WAAuB,KAAKtD,GAA5B,qCAA0DmC,OAA1D,GAAqEjS,QAArE,CAAP;AACD;;;oCAEWiS,O,EAAiB;AAC3B,iBAAO,KAAKiB,UAAL,qBAA0B,KAAKpD,GAA/B,4BAAoDmC,OAApD,EAAP;AACD;;;;;;;uBAnBUgB,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVlD,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACRzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMasD,kB;;;AAUX,oCAAc;AAAA;;AATd,aAAA3O,eAAA,GAAkB,IAAI4O,GAAJ,CAA0B,CAC1C,CAAC,SAAD,EAAY,KAAZ,CAD0C,EAE1C,CAAC,MAAD,EAAS,KAAT,CAF0C,EAG1C,CAAC,MAAD,EAAS,KAAT,CAH0C,CAA1B,CAAlB;AAMQ,aAAAC,eAAA,GAAkB,IAAI,oDAAJ,CAAoB,KAAK7O,eAAzB,CAAlB;AACR,aAAA8O,gBAAA,GAAmB,KAAKD,eAAL,CAAqBhD,YAArB,EAAnB;AAEiB;;;;6CAEC;AAChB,iBAAO,KAAKiD,gBAAZ;AACD;;;2CAEkBC,K,EAAe/D,K,EAAgB;AAChD,eAAKhL,eAAL,CAAqBgP,GAArB,CAAyBD,KAAzB,EAAgC/D,KAAhC;AACA,eAAK6D,eAAL,CAAqB9D,IAArB,CAA0B,KAAK/K,eAA/B;AACD;;;;;;;uBAnBU2O,kB;AAAkB,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVtD,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;ACN/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa4D,c;;;AAIX,8BAAoBT,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAHpB,aAAApD,GAAA,GAAM,sEAAYqD,MAAlB;AACA,aAAAzR,QAAA,GAAsB,EAAtB;AAE+C;;;;uCAEhCwQ,S,EAAmB;AAChC,iBAAO,KAAKgB,UAAL,CAAgBvO,GAAhB,WAAgC,KAAKmL,GAArC,uBAAqDoC,SAArD,EAAP;AACD;;;sCAEa;AACZ,iBAAO,KAAKgB,UAAL,CAAgBvO,GAAhB,WAAkC,KAAKmL,GAAvC,eAAP;AACD;;;mCAEUzK,O,EAAiB;AAC1B,iBAAO,KAAK6N,UAAL,CAAgBU,IAAhB,WAAwB,KAAK9D,GAA7B,oBAAiDzK,OAAjD,CAAP;AACD;;;sCAEa6M,S,EAAmB7M,O,EAAiB;AAChD,iBAAO,KAAK6N,UAAL,CAAgBE,GAAhB,WAAuB,KAAKtD,GAA5B,8BAAmDoC,SAAnD,GAAgE7M,OAAhE,CAAP;AACD;;;sCAEa6M,S,EAAmB;AAC/B,iBAAO,KAAKgB,UAAL,qBAA0B,KAAKpD,GAA/B,8BAAsDoC,SAAtD,EAAP;AACD;;;;;;;uBAxBUyB,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACV5D,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa8D,W;;;AAGX,2BAAoBX,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAFpB,aAAApD,GAAA,GAAM,sEAAYqD,MAAlB;AAE+C;;;;kCAErC;AACR,iBAAO,KAAKD,UAAL,CAAgBvO,GAAhB,WAA6B,KAAKmL,GAAlC,YAA8CnP,IAA9C,CACL,2DAAI,UAAAmT,MAAM;AAAA,mBAAIA,MAAM,CAAC,CAAD,CAAV;AAAA,WAAV,CADK,CAAP;AAGD;;;mCAEUC,M,EAAgB9M,I,EAAY;AACrC,iBAAO,KAAKiM,UAAL,CAAgBE,GAAhB,WAA6B,KAAKtD,GAAlC,0BAAqDiE,MAArD,GAA+D9M,IAA/D,CAAP;AACD;;;;;;;uBAbU4M,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACV9D,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACVxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaiE,W;;;AAIX,2BAAoBd,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAHpB,aAAApD,GAAA,GAAM,sEAAYqD,MAAlB;AACA,aAAArL,KAAA,GAAgB,EAAhB;AAE+C;;;;gCAEvCR,I,EAAc;AACpB,iBAAO,KAAK4L,UAAL,CAAgBU,IAAhB,WAAwB,KAAK9D,GAA7B,iBAA8CxI,IAA9C,CAAP;AACD;;;mCAEU6K,M,EAAgB;AACzB,iBAAO,KAAKe,UAAL,qBAA0B,KAAKpD,GAA/B,2BAAmDqC,MAAnD,EAAP;AACD;;;oCAEWA,M,EAAgB;AAC1B,iBAAO,KAAKe,UAAL,CAAgBvO,GAAhB,WAA6B,KAAKmL,GAAlC,oBAA+CqC,MAA/C,EAAP;AACD;;;mCAEU;AACT,iBAAO,KAAKe,UAAL,CAAgBvO,GAAhB,WAA+B,KAAKmL,GAApC,YAAP;AACD;;;8CAEqBmE,S,EAAqB;AACzC,iBAAO,KAAKf,UAAL,CAAgBU,IAAhB,WAAwB,KAAK9D,GAA7B,oCAAiEmE,SAAjE,CAAP;AACD;;;8CAEqB7L,W,EAAqB0E,S,EAAqB;AAC9D,iBAAO,KAAKoG,UAAL,CAAgBU,IAAhB,WAAwB,KAAK9D,GAA7B,2CAAiE1H,WAAjE,GAAgF0E,SAAhF,CAAP;AACD;;;mCAEUqF,M,EAAgB7K,I,EAAc;AACvC,iBAAO,KAAK4L,UAAL,CAAgBE,GAAhB,WAAuB,KAAKtD,GAA5B,2BAAgDqC,MAAhD,GAA0D7K,IAA1D,CAAP;AACD;;;;;;;uBAhCU0M,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVjE,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMmE,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBhB,YAAM,EAAE;AAFiB,KAApB;AAKP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AChBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYgB,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA3D,GAAG;AAAA,aAAI4D,OAAO,CAACC,KAAR,CAAc7D,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default {\r\n    domain: 'snowy-pond-4495.us.auth0.com',\r\n    client_id: 'jfGPTHVGqOK5lcd0k6vKCK8lnjdRkd4O',\r\n    audience: 'https://bsfp-volunteer-test.herokuapp.com/api',\r\n    redirect_uri: `${window.location.origin}/callback`\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PantryOverviewComponent } from './components/pantry-overview/pantry-overview.component';\r\nimport { OrderOverviewComponent } from './components/order-overview/order-overview.component';\r\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\r\nimport { ProductAddComponent } from './components/product-add/product-add.component';\r\nimport { TypeAddComponent } from './components/type-add/type-add.component';\r\nimport { TypeEditComponent } from './components/type-edit/type-edit.component';\r\nimport { SubTypeEditComponent } from './components/sub-type-edit/sub-type-edit.component';\r\nimport { ShopEditComponent } from './components/shop-edit/shop-edit.component';\r\nimport { OrderComponent } from './components/order/order.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { LogInComponent } from './components/log-in/log-in.component';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { InterceptorService } from './services/interceptor.service';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: 'log-in', component: LogInComponent},\r\n  {path: 'orders', component: OrderOverviewComponent, canActivate: [AuthGuard]},\r\n  {path: 'order/:id', component: OrderComponent, canActivate: [AuthGuard]},\r\n  {path: 'pantry', component: PantryOverviewComponent, canActivate: [AuthGuard]},\r\n  {path: 'product', component: ProductAddComponent, canActivate: [AuthGuard]},\r\n  {path: 'product/:id', component: ProductEditComponent, canActivate: [AuthGuard]},\r\n  {path: 'shop', component: ShopEditComponent, canActivate: [AuthGuard]},\r\n  {path: 'sub-types', component: SubTypeEditComponent, canActivate: [AuthGuard]},\r\n  {path: 'type', component: TypeAddComponent, canActivate: [AuthGuard]},\r\n  {path: 'type/:id', component: TypeEditComponent, canActivate: [AuthGuard]},\r\n  {path: '', redirectTo: 'log-in', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: InterceptorService,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'front-end';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.localAuthSetup();\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {NgxPrintModule} from 'ngx-print';\r\nimport { TypesComponent } from './components/types/types.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { OrderOverviewComponent } from './components/order-overview/order-overview.component';\r\nimport { PantryOverviewComponent } from './components/pantry-overview/pantry-overview.component';\r\nimport { ProductsComponent } from './components/products/products.component';\r\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\r\nimport { ProductAddComponent } from './components/product-add/product-add.component';\r\nimport { TypeAddComponent } from './components/type-add/type-add.component';\r\nimport { TypeEditComponent } from './components/type-edit/type-edit.component';\r\nimport { SubTypeEditComponent } from './components/sub-type-edit/sub-type-edit.component';\r\nimport { ShopComponent } from './components/shop/shop.component';\r\nimport { ShopEditComponent } from './components/shop-edit/shop-edit.component';\r\nimport { ProductGridButtonsComponent } from './components/product-grid-buttons/product-grid-buttons.component';\r\nimport { TypeGridButtonsComponent } from './components/type-grid-buttons/type-grid-buttons.component';\r\nimport { ProductDeleteModalComponent } from './components/product-delete-modal/product-delete-modal.component';\r\nimport { TypeDeleteModalComponent } from './components/type-delete-modal/type-delete-modal.component';\r\nimport { OrdersComponent } from './components/orders/orders.component';\r\nimport { OrderGridButtonsComponent } from './components/order-grid-buttons/order-grid-buttons.component';\r\nimport { OrderComponent } from './components/order/order.component';\r\nimport { CartComponent } from './components/cart/cart.component';\r\nimport { FamilyComponent } from './components/family/family.component';\r\nimport { FamilyPrintComponent } from './components/family-print/family-print.component';\r\nimport { CartPrintComponent } from './components/cart-print/cart-print.component';\r\nimport { OrderDeleteModalComponent } from './components/order-delete-modal/order-delete-modal.component';\r\nimport { LogInComponent } from './components/log-in/log-in.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TypesComponent,\r\n    NavbarComponent,\r\n    OrderOverviewComponent,\r\n    PantryOverviewComponent,\r\n    ProductsComponent,\r\n    ProductEditComponent,\r\n    ProductAddComponent,\r\n    TypeAddComponent,\r\n    TypeEditComponent,\r\n    SubTypeEditComponent,\r\n    ShopComponent,\r\n    ShopEditComponent,\r\n    ProductGridButtonsComponent,\r\n    TypeGridButtonsComponent,\r\n    ProductDeleteModalComponent,\r\n    TypeDeleteModalComponent,\r\n    OrdersComponent,\r\n    OrderGridButtonsComponent,\r\n    OrderComponent,\r\n    CartComponent,\r\n    FamilyComponent,\r\n    FamilyPrintComponent,\r\n    CartPrintComponent,\r\n    OrderDeleteModalComponent,\r\n    LogInComponent,\r\n    CallbackComponent,\r\n  ],\r\n  imports: [\r\n    AgGridModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    DragDropModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatExpansionModule,\r\n    MatOptionModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    NgxPrintModule,\r\n    ReactiveFormsModule,\r\n    ScrollingModule,\r\n  ],\r\n  entryComponents: [\r\n    OrderDeleteModalComponent,\r\n    OrderGridButtonsComponent,\r\n    ProductDeleteModalComponent,\r\n    ProductGridButtonsComponent,\r\n    TypeDeleteModalComponent,\r\n    TypeGridButtonsComponent\r\n  ],\r\n  providers: [\r\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 2000}}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.css']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.handleAuthCallback();\r\n  }\r\n\r\n}\r\n","<mat-spinner></mat-spinner>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Order } from 'src/app/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-cart-print',\r\n  templateUrl: './cart-print.component.html',\r\n  styleUrls: ['./cart-print.component.css']\r\n})\r\nexport class CartPrintComponent implements OnInit {\r\n  columns: string[] = ['column1', 'column2'];\r\n  @Input() order: Order;\r\n  @Input() sliceId: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"flex-container\">\r\n    <div *ngFor=\"let type of order.cart\">\r\n        <table class=\"no-border\">\r\n            <tr class=\"no-border\"><td class=\"no-border\">\r\n                <mat-toolbar class=\"items-toolbar top-table\">{{type.typeName}}</mat-toolbar>\r\n                <table mat-table [dataSource]=\"type.products\">\r\n                    <ng-container matColumnDef=\"column1\">\r\n                        <th class=\"half\" mat-header-cell *matHeaderCellDef>Product</th>\r\n                        <td class=\"half\" mat-cell *matCellDef=\"let product\"><div>{{product.productName}}</div></td>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!type.typeAmountReceived\" matColumnDef=\"column2\">\r\n                        <th mat-header-cell *matHeaderCellDef><span class=\"margin-left\">Amount</span></th>\r\n                        <td mat-cell *matCellDef=\"let product\"><span class=\"margin-left\">{{product.amount}}</span></td>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"type.typeAmountReceived\" matColumnDef=\"column2\">\r\n                        <th mat-header-cell *matHeaderCellDef><span class=\"margin-left\">{{'Amount Received: ' + type.typeAmountReceived}}</span></th>\r\n                        <td mat-cell *matCellDef=\"let product\"><span class=\"margin-left\">Requested</span></td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\r\n                </table>\r\n                <div class=\"items-toolbar bottom-table\">\r\n                    <span>{{'Family: ' + order.family.lastName}}</span>\r\n                    <span>{{' Order Id: ' + sliceId}}</span>\r\n                </div>\r\n            </td></tr>\r\n        </table>\r\n    </div>    \r\n</div>\r\n   ","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\nimport { Order } from 'src/app/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit {\r\n  cart: CartItemsByType[];\r\n  columns: string[] = ['column1', 'column2'];\r\n  @Input() order: Order;\r\n  panelOpenState = true;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.cart = this.order.cart;\r\n  }\r\n}\r\n","<mat-expansion-panel (opened)=\"panelOpenState=true\" (closed)=\"panelOpenState=false\" [expanded]=\"panelOpenState\">\r\n    <mat-expansion-panel-header>\r\n        <mat-panel-title>Cart</mat-panel-title>\r\n        <mat-panel-description>{{panelOpenState ? 'close' : 'open'}}</mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <div class=\"flex-container\">\r\n        <div  *ngFor=\"let type of cart\">\r\n            <div class=\"margin-left\">\r\n                <mat-toolbar class=\"items-toolbar\">{{type.typeName}}</mat-toolbar>\r\n                <table mat-table [dataSource]=\"type.products\">\r\n                    <ng-container matColumnDef=\"column1\">\r\n                        <th mat-header-cell *matHeaderCellDef>Name</th>\r\n                        <td mat-cell *matCellDef=\"let product\">{{product.productName}}</td>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!type.typeAmountReceived\" matColumnDef=\"column2\">\r\n                        <th mat-header-cell *matHeaderCellDef>Amount</th>\r\n                        <td mat-cell *matCellDef=\"let product\">{{product.amount}}</td>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"type.typeAmountReceived\" matColumnDef=\"column2\">\r\n                        <th mat-header-cell *matHeaderCellDef>{{'Total Amount Received: ' + type.typeAmountReceived}}</th>\r\n                        <td mat-cell *matCellDef=\"let product\">Requested</td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\r\n                </table>\r\n                <div class=\"items-toolbar bottom-table\"></div>\r\n            </div>\r\n        </div>    \r\n    </div>   \r\n    <mat-action-row (click)=\"panelOpenState = false\"></mat-action-row> \r\n</mat-expansion-panel>   \r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Order } from 'src/app/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-family-print',\r\n  templateUrl: './family-print.component.html',\r\n  styleUrls: ['./family-print.component.css']\r\n})\r\nexport class FamilyPrintComponent implements OnInit {\r\n  @Input() order: Order;\r\n  @Input() sliceId: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"info-header\">Contact</div>   \r\n<mat-card>                \r\n    <div id=\"contact-inner-grid\">\r\n        <div>\r\n            <div class=\"info info-label\">First Name:</div>\r\n            <div class=\"info info-label\">Last Name:</div>\r\n            <div class=\"info info-label\">Zip Code:</div>\r\n            <div class=\"info info-label\">Phone Number:</div>\r\n            <div class=\"info info-label\">Email Address:</div>\r\n        </div>\r\n        <div>\r\n            <div class=\"info\">{{order.family.firstName}}</div>\r\n            <div class=\"info\">{{order.family.lastName}}</div>\r\n            <div class=\"info\">{{order.family.zipCode}}</div>\r\n            <div class=\"info\">{{order.family.phoneNumber}}</div>\r\n            <div class=\"info\">{{order.family.emailAddress ? order.family.emailAddress : 'Not Provided' }}</div>\r\n        </div>\r\n    </div>        \r\n</mat-card>\r\n<div id=\"house-pick-up-grid\">\r\n    <div>\r\n        <header class=\"info-header\">Household</header>   \r\n        <mat-card>\r\n            <div id=\"household-inner-grid\">   \r\n                <div>\r\n                    <div class=\"info\">Family Size:</div>\r\n                    <div class=\"info\">School Children:</div>\r\n                    <div class=\"info\">Infants:</div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"info\">{{order.family.familySize}}</div>\r\n                    <div class=\"info\">{{order.family.schoolChildren ? order.family.schoolChildren : 'None' }}</div>\r\n                    <div class=\"info\">{{order.family.infants ? 'Yes' : 'No'}}</div>\r\n                </div>\r\n            </div>    \r\n        </mat-card>    \r\n    </div>\r\n    <div>\r\n        <header class=\"info-header\">Pick Up</header>   \r\n        <mat-card>\r\n            <div id=\"pick-up-inner-grid\">   \r\n                <div>\r\n                    <div class=\"info\">Date:</div>\r\n                    <div class=\"info\">Location:</div>\r\n                    <div class=\"info\">Order Id:</div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"info\">{{order.pickUpDate}}</div>\r\n                    <div class=\"info\">{{order.family.referral ? 'CELC' : 'Broad St.' }}</div>\r\n                    <div class=\"info\">{{sliceId}}</div>\r\n                </div>\r\n            </div>    \r\n        </mat-card>\r\n    </div>     \r\n</div> \r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { Family } from 'src/app/models/family.model';\r\n\r\n@Component({\r\n  selector: 'app-family',\r\n  templateUrl: './family.component.html',\r\n  styleUrls: ['./family.component.css']\r\n})\r\nexport class FamilyComponent implements OnInit {\r\n  family: Family;\r\n  @Input() order: Order;\r\n  panelOpenState = true;\r\n  pickUpDate: string;\r\n  @Input() sliceId: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.family = this.order.family;\r\n    this.pickUpDate = this.order.pickUpDate;\r\n  }\r\n\r\n}\r\n","<mat-expansion-panel (opened)=\"panelOpenState=true\" (closed)=\"panelOpenState=false\" [expanded]=\"panelOpenState\">\r\n    <mat-expansion-panel-header>\r\n        <mat-panel-title>Guest and Pick Up Information</mat-panel-title>\r\n        <mat-panel-description>{{panelOpenState ? 'close' : 'open'}}</mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <mat-card id=\"info-outer-grid\">\r\n        <div>\r\n            <div class=\"info-header\">Contact</div>   \r\n            <mat-card class=\"info-card\">                \r\n                <div id=\"contact-inner-grid\">\r\n                    <div>\r\n                        <div class=\"info info-label\">First Name:</div>\r\n                        <div class=\"info info-label\">Last Name:</div>\r\n                        <div class=\"info info-label\">Zip Code:</div>\r\n                        <div class=\"info info-label\">Phone Number:</div>\r\n                        <div class=\"info info-label\">Email Address:</div>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"info\">{{family.firstName}}</div>\r\n                        <div class=\"info\">{{family.lastName}}</div>\r\n                        <div class=\"info\">{{family.zipCode}}</div>\r\n                        <div class=\"info\">{{family.phoneNumber}}</div>\r\n                        <div class=\"info\">{{family.emailAddress ? family.emailAddress : 'Not Provided' }}</div>\r\n                    </div>\r\n                </div>        \r\n            </mat-card>\r\n        </div>    \r\n        <div>\r\n            <div class=\"info-header\">Household</div>   \r\n            <mat-card class=\"info-card\">\r\n                <div id=\"household-inner-grid\">   \r\n                    <div>\r\n                        <div class=\"info info-label\">Family Size:</div>\r\n                        <div class=\"info info-label\">School Children:</div>\r\n                        <div class=\"info info-label\">Infants:</div>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"info\">{{family.familySize}}</div>\r\n                        <div class=\"info\">{{family.schoolChildren ? family.schoolChildren : 'None' }}</div>\r\n                        <div class=\"info\">{{family.infants ? 'Yes' : 'No'}}</div>\r\n                    </div>\r\n                </div>    \r\n            </mat-card>    \r\n        </div>\r\n        <div>\r\n            <div class=\"info-header\">Pick Up</div>   \r\n            <mat-card class=\"info-card\">\r\n                <div id=\"pick-up-inner-grid\">   \r\n                    <div>\r\n                        <div class=\"info info-label\">Date:</div>\r\n                        <div class=\"info info-label\">Location:</div>\r\n                        <div class=\"info info-label\">Order Id:</div>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"info\">{{pickUpDate}}</div>\r\n                        <div class=\"info\">{{family.referral ? 'CELC' : 'Broad St.' }}</div>\r\n                        <div class=\"info\">{{sliceId}}</div>\r\n                    </div>\r\n                </div>    \r\n            </mat-card>    \r\n        </div>      \r\n    </mat-card>\r\n</mat-expansion-panel>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css']\r\n})\r\nexport class LogInComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  toOrders() {\r\n    this.router.navigate([`/orders`]);\r\n  }\r\n\r\n}\r\n","<div id=\"grid-container\"> \r\n    <mat-card id=\"outer-card\" class=\"border\">   \r\n    <img class=\"border\" src=\"../../../assets/images/bsfp-logo-login.png\" alt=\"bsfp-logo-login\">\r\n    <div id=\"message-button-container\">\r\n        <mat-card id=\"inner-card\" class=\"border\">\r\n            <div>Online Manager</div>\r\n            <button class=\"border\" mat-raised-button (click)=\"authService.login()\" *ngIf=\"!authService.loggedIn\">Log In</button>\r\n            <button class=\"border\" mat-raised-button (click)=\"toOrders()\" *ngIf=\"authService.loggedIn\">To Family</button>\r\n        </mat-card> \r\n    </div>   \r\n    </mat-card>\r\n</div>    \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onOrderClick() {\r\n    this.router.navigate([`/orders`]);\r\n  }\r\n\r\n  onPantryClick() {\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n}\r\n","<mat-toolbar>\r\n    <span>Broad Street Food Pantry Online Manager</span>\r\n    <div id=\"button-container\">\r\n        <button mat-raised-button (click)=\"onOrderClick()\">Order Manager</button>\r\n        <button mat-raised-button (click)=\"onPantryClick()\">Pantry Manager</button>\r\n        <button mat-raised-button (click)=\"authService.logout()\">Log Out</button>\r\n    </div>\r\n</mat-toolbar>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-order-delete-modal',\r\n  templateUrl: './order-delete-modal.component.html',\r\n  styleUrls: ['./order-delete-modal.component.css']\r\n})\r\nexport class OrderDeleteModalComponent implements OnInit {\r\n  sliceId: string;\r\n\r\n  constructor(private dataService: DataService, public dialogRef: MatDialogRef<OrderDeleteModalComponent>,\r\n              @Inject (MAT_DIALOG_DATA) public order: Order, private orderService: OrderService, private router: Router, \r\n              private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.sliceId = this.order._id.slice(-5);\r\n  }\r\n\r\n  onProceedClick() {\r\n    this.orderService.deleteOrder(this.order._id).subscribe((response: any) => {\r\n      this.showResponseStatus(response.status);\r\n      this.dialogRef.close();\r\n      this.router.navigate(['/orders']);\r\n    });\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/orders`]);\r\n  }\r\n\r\n  showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`Order Id ${this.sliceId} successfully deleted.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`Order Id ${this.sliceId} failed to delete.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateOrders();\r\n  }\r\n}\r\n","<mat-card>\r\n    <p>This will permanently delete order i.d. {{sliceId}}.  Please assure that this order has been accommodated.</p>\r\n</mat-card>\r\n<p id=\"proceed-prompt\">Do you wish to proceed?</p>\r\n<span>\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button (click)=\"onProceedClick()\">Proceed</button>\r\n</span>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { OrderDeleteModalComponent } from '../order-delete-modal/order-delete-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-order-grid-buttons',\r\n  templateUrl: './order-grid-buttons.component.html',\r\n  styleUrls: ['./order-grid-buttons.component.css']\r\n})\r\nexport class OrderGridButtonsComponent implements OnInit {\r\n  data: any;\r\n  params: any;\r\n\r\n  constructor(private dialog: MatDialog, private router: Router, private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params) {\r\n    this.data =  params.data;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onDeleteClick() {\r\n    this.data.received === 'Yes' ?\r\n      this.dialog.open(OrderDeleteModalComponent, {\r\n      data: this.data,\r\n      disableClose: true,\r\n      panelClass: ['delete-dialog-container'],\r\n      width: '34rem'})\r\n    :\r\n      this.snackBar.open('Orders must be marked as received before deleting.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']});\r\n  }\r\n\r\n  onViewClick() {\r\n    this.router.navigate(['/order', this.data._id]);\r\n  }\r\n\r\n}\r\n","<button id=\"view-button\" (click)=\"onViewClick()\">View</button>\r\n<button id=\"delete-button\" (click)=\"onDeleteClick()\">Delete</button>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-order-overview',\r\n  templateUrl: './order-overview.component.html',\r\n  styleUrls: ['./order-overview.component.css']\r\n})\r\nexport class OrderOverviewComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<mat-card id=\"top-container\">\r\n    <app-orders></app-orders>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-order-view',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.css']\r\n})\r\nexport class OrderComponent implements OnInit, OnDestroy {\r\n  loading = true;\r\n  order: Order;\r\n  sliceId: string;\r\n  subscription = new Subscription();\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private dataService: DataService, private router: Router,\r\n              private orderService: OrderService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.activatedRoute.params.pipe(\r\n        switchMap(params => this.dataService.getOrderById(params.id)),\r\n        take(1)\r\n      ).subscribe((order: Order) => {\r\n        this.rerouteOnEmptyOrder(order);\r\n        this.order = order;\r\n        this.sliceId = order._id.slice(-5);\r\n        this.sortProductsByName();\r\n        this.sortTypesByName();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onBackClick() {\r\n    this.router.navigate(['/orders']);\r\n  }\r\n\r\n  onReceivedClick() {\r\n    const received = {received: !this.order.received};\r\n    this.orderService.updateOrderReceived(this.order._id, received).subscribe((response: any) => {\r\n      this.showResponseStatus(response.status);\r\n    });\r\n  }\r\n\r\n  rerouteOnEmptyOrder(order: any) {\r\n    if (order === undefined || Object.entries(order).length === 0 && order.constructor === Object) {\r\n      this.snackBar.open('Order not found. Please try again.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      this.router.navigate([`/orders`]);\r\n    }\r\n  }\r\n\r\n  showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      let update: string;\r\n      this.order.received ? update = 'unreceived' : update = 'received';\r\n      this.snackBar.open(`Order marked as ${update}.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']});\r\n      this.order.received = !this.order.received;\r\n    } else {\r\n      this.snackBar.open('Order failed to update.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']});\r\n    }\r\n    this.dataService.updateOrders();\r\n  }\r\n\r\n  sortProductsByName() {\r\n    this.order.cart.forEach((typeInCart: CartItemsByType) => {\r\n      typeInCart.products.sort(\r\n        (before, after) => before.productName.trim().toLowerCase() > after.productName.trim().toLowerCase() ? 1 : -1);\r\n    });\r\n  }\r\n\r\n  sortTypesByName() {\r\n    this.order.cart.sort((before, after) => before.typeName.trim().toLowerCase() > after.typeName.trim().toLowerCase() ? 1 : -1);\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\" class=\"margin-bottom\">\r\n        <span id=\"title\">Order</span>\r\n        <button mat-raised-button (click)=\"onBackClick()\">Back</button>    \r\n        <button mat-raised-button printSectionId=\"print-section\" [useExistingCss]=\"true\" ngxPrint>Print</button>        \r\n        <button mat-raised-button [ngClass]=\"{'unreceived': !order.received }\" *ngIf=\"!order.received\" (click)=\"onReceivedClick()\">Mark Received</button>  \r\n        <button mat-raised-button [ngClass]=\"{'received': order.received }\" *ngIf=\"order.received\" (click)=\"onReceivedClick()\">Mark Unreceived</button>\r\n    </span>\r\n    <cdk-virtual-scroll-viewport itemSize=\"\">\r\n        <div id=\"expand-grid\">\r\n            <app-family [order]=\"order\" [sliceId]=\"sliceId\"></app-family>\r\n            <app-cart [order]=\"order\"></app-cart>\r\n        </div>\r\n    </cdk-virtual-scroll-viewport>\r\n</mat-card>\r\n<div id=\"print-section\" *ngIf=\"!loading\">\r\n    <header>\r\n        <div class=\"header-content\">Broad St. Food Pantry Online Order</div>\r\n    </header>\r\n    <div class=\"seperator\">Guest and Pick Up Information</div>\r\n    <app-family-print [order]=\"order\" [sliceId]=\"sliceId\"></app-family-print>\r\n    <div class=\"seperator\">Cart</div>\r\n    <app-cart-print [order]=\"order\" [sliceId]=\"sliceId\"></app-cart-print>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { OrderGridButtonsComponent } from '../order-grid-buttons/order-grid-buttons.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit, OnDestroy {\r\n  columnDefs = [\r\n    {headerName: 'First Name', field: 'firstName'},\r\n    {headerName: 'Last Name', field: 'lastName'},\r\n    {headerName: 'Family Size', field: 'familySize'},\r\n    {headerName: 'Children', field: 'schoolChildren',\r\n      comparator: (firstSchool, secondSchool) => this.schoolComparator(firstSchool, secondSchool)},\r\n    {headerName: 'Infants', field: 'infants'},\r\n    {headerName: 'Phone', field: 'phoneNumber'},\r\n    {headerName: 'Email', field: 'emailAddress'},\r\n    {headerName: 'Location', field: 'location'},\r\n    {headerName: 'Pick Up', field: 'pickUpDate', width: 90},\r\n    {headerName: 'Received', field: 'received', width: 90, sort: 'asc'},\r\n    {headerName: '', field: 'action', filter: false, sortable: false, width: 150, cellRendererFramework: OrderGridButtonsComponent}\r\n  ];\r\n  defaultColDef = {\r\n    filter: true,\r\n    filterParams: {\r\n      suppressAndOrCondition: true\r\n    },\r\n    resizable: true,\r\n    sortable: true,\r\n    width: 100\r\n  };\r\n  gridOptions: any;\r\n  loading = true;\r\n  orders: Order[];\r\n  subscription = new Subscription();\r\n  rowData = [];\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n        this.dataService.getOrders().subscribe((orders: Order[]) => {\r\n        this.orders = orders;\r\n        this.rowData = this.getFormattedFields();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private getFormattedFields() {\r\n    const rowData = [];\r\n    this.orders.forEach((order: Order) => {\r\n      const rowEntry = {};\r\n      const family  = order.family;\r\n      Object.defineProperty(rowEntry, '_id', {value: order._id});\r\n      Object.defineProperty(rowEntry, 'firstName', {value: family.firstName});\r\n      Object.defineProperty(rowEntry, 'lastName', {value: family.lastName});\r\n      Object.defineProperty(rowEntry, 'familySize', {value: order.family.familySize});\r\n      family.schoolChildren ?\r\n        Object.defineProperty(rowEntry, 'schoolChildren', {value: family.schoolChildren}) :\r\n        Object.defineProperty(rowEntry, 'schoolChildren', {value: 'None'});\r\n      family.infants ?\r\n        Object.defineProperty(rowEntry, 'infants', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'infants', {value: 'No'});\r\n      Object.defineProperty(rowEntry, 'phoneNumber', {value: family.phoneNumber});\r\n      family.emailAddress ?\r\n        Object.defineProperty(rowEntry, 'emailAddress', {value: family.emailAddress}) :\r\n        Object.defineProperty(rowEntry, 'emailAddress', {value: '-'});\r\n      family.referral ?\r\n        Object.defineProperty(rowEntry, 'location', {value: 'CELC'}) :\r\n        Object.defineProperty(rowEntry, 'location', {value: 'Broad St.'});\r\n      Object.defineProperty(rowEntry, 'pickUpDate', {value: order.pickUpDate});\r\n      order.received ?\r\n        Object.defineProperty(rowEntry, 'received', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'received', {value: 'No'});\r\n      rowData.push(rowEntry);\r\n    });\r\n    return rowData;\r\n  }\r\n\r\n  private schoolComparator(firstPoints: any, secondPoints: any) {\r\n    if (isNaN(firstPoints)) {\r\n      firstPoints = 0;\r\n    }\r\n    if (isNaN(secondPoints)) {\r\n      secondPoints = 0;\r\n    }\r\n    return firstPoints > secondPoints ? 1 : -1;\r\n  }\r\n\r\n  updateOrders() {\r\n    this.dataService.updateOrders();\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"ag-grid-container\" *ngIf=\"!loading\">\r\n    <span id=\"button-grid-container\">\r\n        <span id=\"orders-title\">Orders</span>\r\n        <button mat-raised-button (click)=\"updateOrders()\">Refresh Orders</button>\r\n    </span>\r\n    <cdk-virtual-scroll-viewport  itemSize=\"\">    \r\n        <ag-grid-angular \r\n        style=\"width: 1140px; height: 500px;\" \r\n        class=\"ag-theme-balham\"\r\n        [columnDefs]=\"columnDefs\"\r\n        [defaultColDef]=\"defaultColDef\"\r\n        [suppressCellSelection]=\"true\"\r\n        [pagination]=\"true\"\r\n        [paginationAutoPageSize]=\"true\"\r\n        [rowData]=\"rowData\">\r\n        </ag-grid-angular>\r\n    </cdk-virtual-scroll-viewport >    \r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { PantryPanelService } from 'src/app/services/pantry-panel.service';\r\nimport { Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-pantry-overview',\r\n  templateUrl: './pantry-overview.component.html',\r\n  styleUrls: ['./pantry-overview.component.css']\r\n})\r\nexport class PantryOverviewComponent implements OnInit, OnDestroy {\r\n  loading = true;\r\n  productPanelOpenState = false;\r\n  shopPanelOpenState = false;\r\n  subscription = new Subscription();\r\n  typePanelOpenState = false;\r\n\r\n  constructor(public pantryPanelService: PantryPanelService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.pantryPanelService.getPanelOpenStates().subscribe((panelOpenStates) => {\r\n        this.productPanelOpenState = panelOpenStates.get('product');\r\n        this.typePanelOpenState = panelOpenStates.get('type');\r\n        this.shopPanelOpenState = panelOpenStates.get('shop');\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <cdk-virtual-scroll-viewport itemSize=\"\" [ngClass]=\"{\r\n        'open-view-height' : productPanelOpenState || shopPanelOpenState || typePanelOpenState, \r\n        'closed-view-height': !productPanelOpenState && !shopPanelOpenState && !typePanelOpenState\r\n        }\">\r\n        <mat-expansion-panel \r\n        (opened) =\"pantryPanelService.setPanelOpenStates('shop',true)\" \r\n        (closed)=\"pantryPanelService.setPanelOpenStates('shop',false)\" \r\n        [expanded]=\"shopPanelOpenState\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                    Shop Manager\r\n                </mat-panel-title>\r\n                <mat-panel-description>\r\n                    {{shopPanelOpenState ? 'close' : 'open'}}\r\n                </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <app-shop></app-shop>\r\n        </mat-expansion-panel>\r\n        <mat-expansion-panel \r\n        (opened) =\"pantryPanelService.setPanelOpenStates('type',true)\" \r\n        (closed)=\"pantryPanelService.setPanelOpenStates('type',false)\" \r\n        [expanded]=\"typePanelOpenState\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                    Type Manager\r\n                </mat-panel-title>\r\n                <mat-panel-description>\r\n                    {{typePanelOpenState ? 'close' : 'open'}}\r\n                </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <app-types></app-types>\r\n        </mat-expansion-panel>\r\n        <mat-expansion-panel \r\n        (opened) =\"pantryPanelService.setPanelOpenStates('product',true)\" \r\n        (closed)=\"pantryPanelService.setPanelOpenStates('product',false)\" \r\n        [expanded]=\"productPanelOpenState\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                    Product Manager\r\n                </mat-panel-title>\r\n                <mat-panel-description>\r\n                    {{productPanelOpenState ? 'close' : 'open'}}\r\n                </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <app-products></app-products>\r\n        </mat-expansion-panel>\r\n    </cdk-virtual-scroll-viewport>\r\n</mat-card>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder, ValidatorFn } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\nexport const minMaxValidator: ValidatorFn = (formGroup: FormGroup) => {\r\n  const minFamSize = formGroup.get('minFamSize').value;\r\n  const maxFamSize = formGroup.get('maxFamSize').value;\r\n  if (minFamSize !== '' && maxFamSize !== '') {\r\n    return minFamSize > maxFamSize ? {minMax: true} : null;\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'app-product-add',\r\n  templateUrl: './product-add.component.html',\r\n  styleUrls: ['./product-add.component.css']\r\n})\r\nexport class ProductAddComponent implements OnInit {\r\n  limitDeleted = false;\r\n  loading = true;\r\n  prodSizeAmount: FormArray;\r\n  product = new Product();\r\n  productForm = new FormGroup({\r\n    productName: new FormControl('', Validators.required),\r\n    points: new FormControl('', Validators.required),\r\n    school: new FormControl('', Validators.required),\r\n    infant: new FormControl('', Validators.required),\r\n  });\r\n  requiredError = 'This field is required.';\r\n\r\n  constructor(protected dataService: DataService, protected formBuilder: FormBuilder, protected productService: ProductService,\r\n              protected snackBar: MatSnackBar, protected router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.loading = !this.loading;\r\n  }\r\n\r\n  addSizeAmount() {\r\n    this.prodSizeAmount.push(this.formBuilder.group({\r\n      minFamSize: ['', [Validators.required]],\r\n      maxFamSize: ['', Validators.required],\r\n      maxAmount: ['', Validators.required]\r\n    }, { validator: minMaxValidator }\r\n    ));\r\n  }\r\n\r\n  deleteSizeAmount(index: number) {\r\n    this.limitDeleted = true;\r\n    this.prodSizeAmount.removeAt(index);\r\n    if (!this.prodSizeAmount.length) {\r\n      this.productForm.removeControl('prodSizeAmount');\r\n    }\r\n  }\r\n\r\n  initSizeAmount() {\r\n    this.prodSizeAmount = new FormArray([]);\r\n    this.addSizeAmount();\r\n    this.productForm.addControl('prodSizeAmount', this.prodSizeAmount);\r\n  }\r\n\r\n  onAddClick() {\r\n    if (this.productForm.valid) {\r\n      this.setProductValues();\r\n      this.productService.addProduct(this.product).subscribe((response: any) => {\r\n        this.showResponseStatus(response.status);\r\n        this.router.navigate([`/pantry`]);\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  setProductValues() {\r\n    this.product.productName = this.productForm.get('productName').value;\r\n    this.productForm.get('prodSizeAmount') && this.prodSizeAmount.length ?\r\n      this.product.prodSizeAmount = this.productForm.get('prodSizeAmount').value :\r\n      this.product.prodSizeAmount = undefined;\r\n    this.productForm.get('points') && this.productForm.get('points').value ?\r\n      this.product.points = this.productForm.get('points').value :\r\n      this.product.points = undefined;\r\n    this.productForm.get('school') && this.productForm.get('school').value ?\r\n      this.product.school = this.productForm.get('school').value :\r\n      this.product.school = undefined;\r\n    this.productForm.get('infant') && this.productForm.get('infant').value ?\r\n      this.product.infant = this.productForm.get('infant').value :\r\n      this.product.infant = undefined;\r\n  }\r\n\r\n  showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`${this.product.productName} successfully updated.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`${this.product.productName} failed to update.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateProducts();\r\n    this.dataService.updateShop();\r\n    this.dataService.updateTypes();\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span *ngIf=\"!product.productName\" class=\"product-title\">Product Create</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n        <button mat-raised-button (click)=\"onAddClick()\" [disabled]=\"!productForm.valid\">Save Product and Exit</button>        \r\n    </span>\r\n    <div id=\"grid-container\">\r\n        <mat-card class=\"left-form\" [formGroup]=\"productForm\">\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Product Name</mat-label>\r\n                <input matInput formControlName=\"productName\">\r\n                <mat-error *ngIf=\"productForm.get('productName').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Points</mat-label>\r\n                <mat-select matInput formControlName=\"points\">\r\n                    <mat-option [value]=false>None</mat-option>\r\n                    <mat-option [value]=1>1</mat-option>\r\n                    <mat-option [value]=2>2</mat-option>\r\n                    <mat-option [value]=3>3</mat-option>\r\n                    <mat-option [value]=4>4</mat-option>\r\n                    <mat-option [value]=5>5</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('points').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>After School?</mat-label>\r\n                <mat-select matInput formControlName=\"school\">\r\n                    <mat-option [value]=true>Yes</mat-option>\r\n                    <mat-option [value]=false>No</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('school').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Infant?</mat-label>\r\n                <mat-select matInput formControlName=\"infant\">\r\n                    <mat-option [value]=true>Yes</mat-option>\r\n                    <mat-option [value]=false>No</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('infant').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </mat-card>\r\n        <mat-card id=\"right-form\" [formGroup]=\"productForm\">\r\n            <mat-card id=\"init-size-amount\" *ngIf=\"!productForm.get('prodSizeAmount')\">\r\n                <span>This product does not currently have limits.</span>\r\n                <button mat-raised-button (click)=\"initSizeAmount()\">Create Limits</button> \r\n            </mat-card>\r\n            <span id=\"add-limit\" *ngIf=\"productForm.get('prodSizeAmount')\">\r\n                <span>Product Limits</span>\r\n                <button mat-raised-button (click)=\"addSizeAmount()\">Add Another Limit</button>  \r\n            </span>\r\n            <cdk-virtual-scroll-viewport  itemSize=\"\" *ngIf=\"productForm.get('prodSizeAmount')\">\r\n                <mat-card class=\"prod-size-amount-card\" *ngFor=\"let element of productForm.get('prodSizeAmount')['controls']; let i = index\" formArrayName=\"prodSizeAmount\">\r\n                    <ng-container [formGroupName]=\"i\">\r\n                        <div class=\"prod-size-amount-form\">\r\n                            <mat-form-field >\r\n                                <mat-label>Minimum Family Size</mat-label>\r\n                                <mat-select matInput formControlName=\"minFamSize\">\r\n                                    <mat-option [value]=1>1</mat-option>\r\n                                    <mat-option [value]=2>2</mat-option>\r\n                                    <mat-option [value]=3>3</mat-option>\r\n                                    <mat-option [value]=4>4</mat-option>\r\n                                    <mat-option [value]=5>5</mat-option>\r\n                                    <mat-option [value]=6>6</mat-option>\r\n                                    <mat-option [value]=7>7</mat-option>\r\n                                    <mat-option [value]=8>8</mat-option>\r\n                                    <mat-option [value]=9>9</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('minFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                            <mat-label>Maximum Family Size</mat-label>\r\n                            <mat-select matInput formControlName=\"maxFamSize\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('maxFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>        \r\n                            <mat-form-field>\r\n                            <mat-label>Product Limit</mat-label>\r\n                            <mat-select matInput formControlName=\"maxAmount\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                                <mat-option [value]=10>10</mat-option>\r\n                                <mat-option [value]=11>11</mat-option>\r\n                                <mat-option [value]=12>12</mat-option>\r\n                                <mat-option [value]=13>13</mat-option>\r\n                                <mat-option [value]=14>14</mat-option>\r\n                                <mat-option [value]=15>15</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('maxAmount').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <span>\r\n                                <button mat-raised-button (click)=\"deleteSizeAmount(i)\">Delete Limit</button>\r\n                            </span>  \r\n                        </div> \r\n                        <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].hasError('minMax')\">Minimum size must be equal to or smaller than maximum size.</mat-error>    \r\n                    </ng-container>      \r\n                </mat-card>\r\n            </cdk-virtual-scroll-viewport>          \r\n        </mat-card>\r\n    </div>\r\n</mat-card>\r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-delete-modal',\r\n  templateUrl: './product-delete-modal.component.html',\r\n  styleUrls: ['./product-delete-modal.component.css']\r\n})\r\nexport class ProductDeleteModalComponent implements OnInit {\r\n\r\n  constructor(private dataService: DataService, public dialogRef: MatDialogRef<ProductDeleteModalComponent>,\r\n              @Inject (MAT_DIALOG_DATA) public product: Product, private productService: ProductService, \r\n              private router: Router, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {}\r\n\r\n\r\n  private deleteProduct() {\r\n    this.productService.deleteProduct(this.product._id).subscribe((response: any) => {\r\n      this.showResponseStatus(response.status);\r\n    });\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  onProceedClick() {\r\n    this.deleteProduct();\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  private showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`${this.product.productName} successfully deleted.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`${this.product.productName} failed to delete.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateProducts();\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateShop();\r\n  }\r\n}\r\n","<mat-card>\r\n    <p>This action will permanently delete {{product.productName}}.  Permanently deleting a product removes it\r\n    from the shop and from types that contain it.</p>\r\n</mat-card>\r\n<p id=\"proceed-prompt\">Do you wish to proceed?</p>\r\n<span>\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button (click)=\"onProceedClick()\">Proceed</button>\r\n</span>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { minMaxValidator, ProductAddComponent } from '../product-add/product-add.component';\r\nimport { combineLatest } from 'rxjs';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-product-edit',\r\n  templateUrl: '../product-edit/product-edit.component.html',\r\n  styleUrls: ['../product-add/product-add.component.css']\r\n})\r\nexport class ProductEditComponent extends ProductAddComponent implements OnInit {\r\n  inShop = false;\r\n  loading = true;\r\n  prodSizeAmount: FormArray;\r\n  product: Product;\r\n  productForm: FormGroup;\r\n  requiredError = 'This field is required';\r\n  shop: Shop;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, protected dataService: DataService, protected formBuilder: FormBuilder,\r\n              protected productService: ProductService, protected snackBar: MatSnackBar,\r\n              protected router: Router) {\r\n                super(dataService, formBuilder, productService, snackBar, router);\r\n              }\r\n\r\n  ngOnInit() {\r\n    combineLatest([\r\n      this.activatedRoute.params.pipe(\r\n        switchMap(params => this.dataService.getProductById(params.id)),\r\n        take(1)),\r\n      this.dataService.getShop()\r\n      ]).subscribe(([product, shop]) => {\r\n      this.rerouteOnEmptyProduct(product);\r\n      this.product = product;\r\n      this.productForm = new FormGroup({\r\n        productName: new FormControl(this.product.productName, Validators.required),\r\n        points: new FormControl(this.product.points ? this.product.points : false, Validators.required),\r\n        school: new FormControl(this.product.school ? this.product.school : false, Validators.required),\r\n        infant: new FormControl(this.product.infant ? this.product.infant : false, Validators.required),\r\n      });\r\n      this.setProdSizeAmountForm();\r\n      this.shop = shop;\r\n      this.setInShop();\r\n      this.loading = !this.loading;\r\n    });\r\n  }\r\n\r\n  onUpdateClick() {\r\n    if (this.productForm.valid) {\r\n      this.setProductValues();\r\n      this.productService.updateProduct(this.product._id, this.product).subscribe((response: any) => {\r\n        if (response.status === 200) {\r\n          this.snackBar.open(`${this.product.productName} updated successfully.`, 'Dismiss', {\r\n            panelClass: ['green-snackbar']\r\n          });\r\n          this.router.navigate([`/pantry`]);\r\n        } else {\r\n          this.snackBar.open(`${this.product.productName} failed to update.`, 'Dismiss', {\r\n            panelClass: ['red-snackbar']\r\n          });\r\n          this.router.navigate([`/pantry`]);\r\n        }\r\n        this.dataService.updateProducts();\r\n        this.dataService.updateShop();\r\n        this.dataService.updateTypes();\r\n      });\r\n    }\r\n  }\r\n\r\n  rerouteOnEmptyProduct(product: any) {\r\n    if (product === undefined || Object.entries(product).length === 0 && product.constructor === Object) {\r\n      this.snackBar.open('Product not found. Please try again.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      this.router.navigate([`/pantry`]);\r\n    }\r\n  }\r\n\r\n  setInShop() {\r\n    this.shop.shop.forEach((type: Type) => {\r\n      type.products.forEach((product: Product) => {\r\n        if (this.product._id === product._id) {\r\n          this.inShop = true;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  setProdSizeAmountForm() {\r\n    if (this.product.prodSizeAmount) {\r\n      this.prodSizeAmount = new FormArray([]);\r\n      this.product.prodSizeAmount.forEach(element => {\r\n        this.prodSizeAmount.push(this.formBuilder.group({\r\n          minFamSize: [element.minFamSize, Validators.required],\r\n          maxFamSize: [element.maxFamSize, Validators.required],\r\n          maxAmount: [element.maxAmount, Validators.required]\r\n        },\r\n        { validator: minMaxValidator }\r\n        ));\r\n        this.productForm.addControl('prodSizeAmount', this.prodSizeAmount);\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span class=\"product-title\">Product Edit</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>    \r\n        <button mat-raised-button *ngIf=\"product.productName\" (click)=\"onUpdateClick()\" [disabled]=\"(productForm.pristine && !limitDeleted) || !productForm.valid\">Save Update and Exit</button>  \r\n    </span>\r\n    <div id=\"grid-container\">\r\n        <mat-card class=\"left-form\" [ngClass]=\"{'in-shop-left-form': inShop}\" [formGroup]=\"productForm\">\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Product Name</mat-label>\r\n                <input matInput formControlName=\"productName\">\r\n                <mat-error *ngIf=\"productForm.get('productName').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Points</mat-label>\r\n                <mat-select matInput formControlName=\"points\">\r\n                    <mat-option [value]=false>None</mat-option>\r\n                    <mat-option [value]=1>1</mat-option>\r\n                    <mat-option [value]=2>2</mat-option>\r\n                    <mat-option [value]=3>3</mat-option>\r\n                    <mat-option [value]=4>4</mat-option>\r\n                    <mat-option [value]=5>5</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('points').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>After School?</mat-label>\r\n                <mat-select matInput formControlName=\"school\">\r\n                    <mat-option [value]=true>Yes</mat-option>\r\n                    <mat-option [value]=false>No</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('school').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Infant?</mat-label>\r\n                <mat-select matInput formControlName=\"infant\">\r\n                    <mat-option [value]=true>Yes</mat-option>\r\n                    <mat-option [value]=false>No</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('infant').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div id=\"shop\" *ngIf=\"inShop\">Currently in the Shop</div>   \r\n        </mat-card>\r\n        <mat-card id=\"right-form\" [formGroup]=\"productForm\">\r\n            <mat-card id=\"init-size-amount\" *ngIf=\"!productForm.get('prodSizeAmount')\">\r\n                <span>This product does not currently have limits.</span>\r\n                <button mat-raised-button (click)=\"initSizeAmount()\">Create Limits</button> \r\n            </mat-card>\r\n            <span id=\"add-limit\" *ngIf=\"productForm.get('prodSizeAmount')\">\r\n                <span>Product Limits</span>\r\n                <button mat-raised-button (click)=\"addSizeAmount()\">Add Another Limit</button>  \r\n            </span>\r\n            <cdk-virtual-scroll-viewport  itemSize=\"\" *ngIf=\"productForm.get('prodSizeAmount')\">\r\n                <mat-card class=\"prod-size-amount-card\" *ngFor=\"let element of productForm.get('prodSizeAmount')['controls']; let i = index\" formArrayName=\"prodSizeAmount\">\r\n                    <ng-container [formGroupName]=\"i\">\r\n                        <div class=\"prod-size-amount-form\">\r\n                            <mat-form-field >\r\n                                <mat-label>Minimum Family Size</mat-label>\r\n                                <mat-select matInput formControlName=\"minFamSize\">\r\n                                    <mat-option [value]=1>1</mat-option>\r\n                                    <mat-option [value]=2>2</mat-option>\r\n                                    <mat-option [value]=3>3</mat-option>\r\n                                    <mat-option [value]=4>4</mat-option>\r\n                                    <mat-option [value]=5>5</mat-option>\r\n                                    <mat-option [value]=6>6</mat-option>\r\n                                    <mat-option [value]=7>7</mat-option>\r\n                                    <mat-option [value]=8>8</mat-option>\r\n                                    <mat-option [value]=9>9</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('minFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                            <mat-label>Maximum Family Size</mat-label>\r\n                            <mat-select matInput formControlName=\"maxFamSize\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('maxFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>        \r\n                            <mat-form-field>\r\n                            <mat-label>Product Limit</mat-label>\r\n                            <mat-select matInput formControlName=\"maxAmount\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                                <mat-option [value]=10>10</mat-option>\r\n                                <mat-option [value]=11>11</mat-option>\r\n                                <mat-option [value]=12>12</mat-option>\r\n                                <mat-option [value]=13>13</mat-option>\r\n                                <mat-option [value]=14>14</mat-option>\r\n                                <mat-option [value]=15>15</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('maxAmount').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <span>\r\n                                <button mat-raised-button (click)=\"deleteSizeAmount(i)\">Delete Limit</button>\r\n                            </span>  \r\n                        </div> \r\n                        <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].hasError('minMax')\">Minimum size must be equal to or smaller than maximum size.</mat-error>    \r\n                    </ng-container>      \r\n                </mat-card>\r\n            </cdk-virtual-scroll-viewport>          \r\n        </mat-card>\r\n    </div>\r\n</mat-card>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ProductDeleteModalComponent } from '../product-delete-modal/product-delete-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-product-grid-buttons',\r\n  templateUrl: './product-grid-buttons.component.html',\r\n  styleUrls: ['./product-grid-buttons.component.css']\r\n})\r\nexport class ProductGridButtonsComponent implements OnInit {\r\n  data: any;\r\n  params: any;\r\n\r\n  constructor(private dialog: MatDialog, private router: Router) { }\r\n\r\n  agInit(params) {\r\n    this.data =  params.data;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onDeleteClick() {\r\n    this.dialog.open(ProductDeleteModalComponent, {\r\n      data: this.data,\r\n      disableClose: true,\r\n      panelClass: ['delete-dialog-container'],\r\n      width: '34rem'\r\n    });\r\n  }\r\n\r\n  onEditClick() {\r\n    this.router.navigate(['/product', this.data._id]);\r\n  }\r\n}\r\n","<button id=\"edit-button\" (click)=\"onEditClick()\">Edit</button>\r\n<button id=\"delete-button\"  (click)=\"onDeleteClick()\">Delete</button>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { Router } from '@angular/router';\r\nimport { ProductGridButtonsComponent } from '../product-grid-buttons/product-grid-buttons.component';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { combineLatest, Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\nexport class ProductsComponent implements OnInit, OnDestroy {\r\n  columnDefs = [\r\n    {headerName: 'Name', field: 'productName', sort: 'asc'},\r\n    {headerName: 'Points', field: 'points', comparator: (firstPoints, secondPoints) => this.pointsComparator(firstPoints, secondPoints)},\r\n    {headerName: 'After School', field: 'school', width: 120},\r\n    {headerName: 'Infant', field: 'infant'},\r\n    {headerName: 'Product Limit', field: 'productLimit', width: 120},\r\n    {headerName: 'Type', field: 'type'},\r\n    {headerName: 'Super Type', field: 'superType', width: 120},\r\n    {headerName: 'Type Limit', field: 'typeLimit'},\r\n    {headerName: 'In Shop', field: 'inShop'},\r\n    {headerName: '', field: 'action', filter: false, sortable: false, width: 150, cellRendererFramework: ProductGridButtonsComponent}\r\n  ];\r\n  defaultColDef = {\r\n    filter: true,\r\n    filterParams: {\r\n      suppressAndOrCondition: true\r\n    },\r\n    resizable: true,\r\n    sortable: true,\r\n    width: 100\r\n  };\r\n  private gridApi;\r\n  loading = true;\r\n  products: Product[];\r\n  rowData = [];\r\n  shop: Shop;\r\n  subscription = new Subscription();\r\n  types: Type[];\r\n\r\n  constructor(private dataService: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getShop(),\r\n        this.dataService.getTypes(),\r\n        this.dataService.getProducts()\r\n      ]).subscribe(([shop, types, products]) => {\r\n        this.shop = shop;\r\n        this.types = types;\r\n        this.products = products;\r\n        this.rowData = this.getFormattedFields();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private getInShopStatus(productToCheck: Product) {\r\n    let inShop = false;\r\n    this.shop.shop.forEach((type: Type) => {\r\n      type.products.forEach((product: Product) => {\r\n        if (product._id === productToCheck._id) {\r\n          inShop = true;\r\n        }\r\n      });\r\n    });\r\n    return inShop;\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridApi.setRowData(this.rowData);\r\n  }\r\n\r\n  private getProductTypeName(productToCheck: Product) {\r\n    let typeName = 'None';\r\n    this.types.forEach((type: Type)  => {\r\n      type.products.forEach((product: Product) => {\r\n        if (product._id === productToCheck._id ) {\r\n          typeName = type.typeName;\r\n        }\r\n      });\r\n    });\r\n    return typeName;\r\n  }\r\n\r\n  private getProductSuperTypeName(productToCheck: Product) {\r\n    let superTypeName = 'None';\r\n    this.types.forEach((type: Type) => {\r\n      type.products.forEach((product: Product) => {\r\n        if (product._id === productToCheck._id) {\r\n          if (type.superTypeId) {\r\n            this.types.forEach((superType: Type) => {\r\n              if (type.superTypeId === superType._id) {\r\n                superTypeName = superType.typeName;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return superTypeName;\r\n  }\r\n\r\n  private getTypeLimitStatus(productToCheck: Product) {\r\n    let hasTypeLimit = false;\r\n    this.types.forEach((type: Type) => {\r\n      type.products.forEach((product: Product) => {\r\n        if (product._id === productToCheck._id) {\r\n          if (type.typeLimits) {\r\n            hasTypeLimit = true;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return hasTypeLimit;\r\n  }\r\n\r\n  private getFormattedFields() {\r\n    const rowData = [];\r\n    this.products.forEach((product: Product) => {\r\n      const rowEntry = {};\r\n      Object.defineProperty(rowEntry, '_id', {value: product._id});\r\n      Object.defineProperty(rowEntry, 'productName', {value: product.productName});\r\n      product.points ?\r\n        Object.defineProperty(rowEntry, 'points', {value: product.points}) :\r\n        Object.defineProperty(rowEntry, 'points', {value: 'None'});\r\n      product.school ?\r\n        Object.defineProperty(rowEntry, 'school', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'school', {value: 'No'});\r\n      product.infant ?\r\n        Object.defineProperty(rowEntry, 'infant', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'infant', {value: 'No'});\r\n      product.prodSizeAmount ?\r\n        Object.defineProperty(rowEntry, 'productLimit', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'productLimit', {value: 'No'});\r\n      Object.defineProperty(rowEntry, 'type', {value: this.getProductTypeName(product)});\r\n      Object.defineProperty(rowEntry, 'superType', {value: this.getProductSuperTypeName(product)});\r\n      this.getTypeLimitStatus(product) ?\r\n        Object.defineProperty(rowEntry, 'typeLimit', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'typeLimit', {value: 'No'});\r\n      this.getInShopStatus(product) ?\r\n        Object.defineProperty(rowEntry, 'inShop', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'inShop', {value: 'No'});\r\n      rowData.push(rowEntry);\r\n    });\r\n    return rowData;\r\n  }\r\n\r\n  onCreateProductClick() {\r\n    this.router.navigate(['/product']);\r\n  }\r\n\r\n  private pointsComparator(firstPoints: any, secondPoints: any) {\r\n    if (isNaN(firstPoints)) {\r\n      firstPoints = 0;\r\n    }\r\n    if (isNaN(secondPoints)) {\r\n      secondPoints = 0;\r\n    }\r\n    return firstPoints > secondPoints ? 1 : -1;\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div id=\"ag-grid-super-container\">\r\n    <mat-card id=\"ag-grid-sub-container\" *ngIf=\"!loading\">\r\n        <span id=\"button-grid-container\">\r\n            <span id=\"products-title\">Products</span>\r\n            <button mat-raised-button (click)=\"onCreateProductClick()\">Create Product</button>\r\n        </span>\r\n        <ag-grid-angular \r\n        style=\"width: 1120px; height: 500px;\" \r\n        class=\"ag-theme-balham\"\r\n        [columnDefs]=\"columnDefs\"\r\n        [defaultColDef]=\"defaultColDef\"\r\n        [suppressCellSelection]=\"true\"\r\n        [pagination]=\"true\"\r\n        [paginationAutoPageSize]=\"true\"\r\n        [rowData]=\"rowData\">\r\n        </ag-grid-angular>\r\n    </mat-card>\r\n</div>\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { ShopType } from 'src/app/models/shop-type.model';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-shop-edit',\r\n  templateUrl: './shop-edit.component.html',\r\n  styleUrls: ['./shop-edit.component.css']\r\n})\r\nexport class ShopEditComponent implements OnInit, OnDestroy {\r\n  availableTypes: ShopType[];\r\n  loading = true;\r\n  shop: Shop;\r\n  private subscription = new Subscription();\r\n  types: Type[];\r\n  typesInShop: ShopType[];\r\n\r\n  constructor(private dataService: DataService, private snackBar: MatSnackBar, private router: Router, private shopService: ShopService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getShop(),\r\n        this.dataService.getTypes()\r\n      ]).subscribe(([shop, types]) => {\r\n    this.initShop(shop, types);\r\n    this.setInShopSubTypes();\r\n    this.setAvailableSuperTypes();\r\n    this.setAvailableSubTypes();\r\n    this.removeProductLessType();\r\n    this.sortTypesByName(this.availableTypes);\r\n    this.sortTypesByName(this.typesInShop);\r\n    this.loading = false;\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  dropType(event: CdkDragDrop<Type[]>) {\r\n    event.previousContainer === event.container ?\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex) :\r\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n    this.sortTypesByName(this.availableTypes);\r\n    this.sortTypesByName(this.typesInShop);\r\n  }\r\n\r\n  private initShop(shop: Shop, types: Type[]) {\r\n    this.availableTypes = [];\r\n    this.shop = null;\r\n    this.types = [];\r\n    this.typesInShop = [];\r\n    const shopClone = cloneDeep(shop);\r\n    const typesClone = cloneDeep(types);\r\n    this.shop = shopClone;\r\n    this.typesInShop = this.shop.shop;\r\n    this.types = typesClone;\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate(['/pantry']);\r\n  }\r\n\r\n  onSaveClick() {\r\n    this.unwrapSubTypes();\r\n    this.shop.shop = this.typesInShop;\r\n    this.shopService.updateShop(this.shop._id, this.shop).subscribe((response: any) => {\r\n      this.showResponseStatus(response.status);\r\n      this.router.navigate([`/pantry`]);\r\n    });\r\n  }\r\n\r\n  private removeProductLessType() {\r\n    this.availableTypes.forEach((availableType: ShopType) => {\r\n      if (!availableType.products.length && !availableType.subTypes) {\r\n        this.availableTypes = this.availableTypes.filter((productLessType: ShopType) => availableType._id !== productLessType._id);\r\n      }\r\n    });\r\n  }\r\n\r\n  private setAvailableSubTypes() {\r\n    this.types.forEach((type: Type) => {\r\n      this.availableTypes.forEach((availableType: ShopType) => {\r\n        if (availableType._id === type.superTypeId) {\r\n          if (!availableType.subTypes) {\r\n            availableType.subTypes = [];\r\n          }\r\n          availableType.subTypes.push(type);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private setAvailableSuperTypes() {\r\n    this.types.forEach((type: Type) => {\r\n      if (!this.typesInShop.some((typeInShop: ShopType) => typeInShop._id === type._id) && !type.superTypeId) {\r\n          this.availableTypes.push(type);\r\n      }\r\n    });\r\n  }\r\n\r\n  private setInShopSubTypes() {\r\n    const subTypesInShop: ShopType[] = [];\r\n    this.typesInShop.forEach((typeInShop: ShopType) => {\r\n      if (typeInShop.superTypeId) {\r\n        subTypesInShop.push(typeInShop);\r\n        this.typesInShop = this.typesInShop.filter((type: ShopType) => type._id !== typeInShop._id);\r\n      }\r\n    });\r\n    this.setInShopSubTypesHelper(subTypesInShop);\r\n  }\r\n\r\n  private setInShopSubTypesHelper(subTypesInShop: ShopType[]) {\r\n    subTypesInShop.forEach((subType: ShopType) => {\r\n      const superType = this.typesInShop.find((typeInShop: Type) => typeInShop._id === subType.superTypeId);\r\n      if (!superType.subTypes) {\r\n        superType.subTypes = [];\r\n      }\r\n      superType.subTypes.push(subType);\r\n    });\r\n  }\r\n\r\n  private showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`Shop successfully updated.`, 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`Shop failed to update.`, 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateShop();\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateProducts();\r\n  }\r\n\r\n  private sortTypesByName(shopTypes: ShopType[]) {\r\n    shopTypes.sort((beforeType: Type, afterType: Type) => {\r\n      return beforeType.typeName > afterType.typeName ? 1 : -1;\r\n    });\r\n    shopTypes.forEach((shopType: ShopType) => {\r\n      if (shopType.subTypes) {\r\n        shopType.subTypes.sort((beforeSubType: Type, afterSubType: Type) => {\r\n          return beforeSubType.typeName > afterSubType.typeName ? 1 : -1;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private unwrapSubTypes() {\r\n    this.typesInShop.forEach((typeInShop: ShopType) => {\r\n      if (typeInShop.subTypes) {\r\n        typeInShop.subTypes.forEach((subType: ShopType) => {\r\n          this.typesInShop.push(subType);\r\n        });\r\n        typeInShop.subTypes = undefined;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span>Shop Edit</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n        <button mat-raised-button (click)=\"onSaveClick()\">Save and Exit</button>\r\n    </span>\r\n    <div id=\"grid-container\">\r\n        <mat-card class=\"drag-drop-header\" id=\"left-header\">Available Types</mat-card>\r\n        <mat-card class=\"drag-drop-header\">Types in Shop</mat-card> \r\n        <cdk-virtual-scroll-viewport class=\"viewport\" itemSize=\"\">\r\n            <mat-card class=\"type-container\" #availableTypesList=\"cdkDropList\" [cdkDropListData]=\"availableTypes\" [cdkDropListConnectedTo]=\"[typesInShopList]\" (cdkDropListDropped)=\"dropType($event)\" cdkDropList>\r\n                <mat-card class=\"margin-top grabbable\" *ngFor=\"let availableType of availableTypes\" cdkDrag>{{availableType.typeName}}\r\n                    <ng-container *ngIf=\"availableType.subTypes\">\r\n                        <span></span>\r\n                        <mat-card class=\"margin-top\" id=\"available-sub-type-card\" *ngFor=\"let subType of availableType.subTypes\">{{subType.typeName}}</mat-card>\r\n                    </ng-container>\r\n                </mat-card>\r\n            </mat-card>\r\n        </cdk-virtual-scroll-viewport>    \r\n        <cdk-virtual-scroll-viewport class=\"viewport\" itemSize=\"\"> \r\n            <mat-card class=\"type-container\" #typesInShopList=\"cdkDropList\" [cdkDropListData]=\"typesInShop\" [cdkDropListConnectedTo]=\"[availableTypesList]\" (cdkDropListDropped)=\"dropType($event)\" cdkDropList>\r\n                <mat-card class=\"margin-top grabbable\" *ngFor=\"let typeInShop of typesInShop\" cdkDrag>{{typeInShop.typeName}}\r\n                    <ng-container *ngIf=\"typeInShop.subTypes\">\r\n                        <span></span>\r\n                        <mat-card class=\"margin-top\" *ngFor=\"let subType of typeInShop.subTypes\">{{subType.typeName}}</mat-card>\r\n                    </ng-container>\r\n                </mat-card>\r\n            </mat-card>\r\n        </cdk-virtual-scroll-viewport>  \r\n    </div>\r\n</mat-card>\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { Router } from '@angular/router';\r\nimport { ShopType } from 'src/app/models/shop-type.model';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.css']\r\n})\r\nexport class ShopComponent implements OnInit, OnDestroy {\r\n  currentTypes: ShopType[];\r\n  loading = true;\r\n  shop: Shop;\r\n  shopTypes: ShopType[];\r\n  typesInShop: ShopType[];\r\n  private subscription = new Subscription();\r\n\r\n  constructor(private dataService: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.dataService.getShop().subscribe((shop: Shop) => {\r\n        this.loading = true;\r\n        this.initShop(shop);\r\n        this.setSubTypes();\r\n        this.sortShop();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  initShop(shop: Shop) {\r\n    this.currentTypes = [];\r\n    this.typesInShop = [];\r\n    this.shopTypes = [];\r\n    const shopClone = cloneDeep(shop);\r\n    this.currentTypes = shopClone.shop;\r\n  }\r\n\r\n  onEditClick() {\r\n    this.router.navigate(['/shop']);\r\n  }\r\n\r\n  private setSubTypes() {\r\n    this.currentTypes.forEach((currentType: ShopType) => {\r\n      if (!currentType.superTypeId) {\r\n        this.shopTypes.push(currentType);\r\n      }\r\n    });\r\n    this.shopTypes.forEach((shopType: ShopType) => {\r\n      this.currentTypes.forEach((currentType: ShopType) => {\r\n        if (currentType.superTypeId === shopType._id) {\r\n          if (!shopType.subTypes) {\r\n            shopType.subTypes = [];\r\n          }\r\n          shopType.subTypes.push(currentType);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private sortShop() {\r\n    this.shopTypes.forEach((shopType: ShopType) => {\r\n      shopType.products.sort((beforeProduct: Product, afterProduct: Product) => {\r\n        return beforeProduct.productName > afterProduct.productName ? 1 : -1;\r\n      });\r\n      if (shopType.subTypes) {\r\n        shopType.subTypes.forEach((subType: Type) => {\r\n          subType.products.sort((beforeSubProduct: Product, afterSubProduct: Product) => {\r\n            return beforeSubProduct.productName > afterSubProduct.productName ? 1 : -1;\r\n          });\r\n        });\r\n        shopType.subTypes.sort((beforeSubType: Type, afterSubType: Type) => {\r\n          return beforeSubType.typeName > afterSubType.typeName ? 1 : -1;\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<mat-card id=\"top-container\" class=\"blue\">\r\n    <span id=\"top-button\" class=\"margin-bottom\">\r\n        <span id=\"shop-title\">Current Shop</span>\r\n        <button mat-raised-button (click)=\"onEditClick()\">Edit Shop</button>\r\n    </span>\r\n    <mat-card id=\"shop-container\" class=\"margin-bottom\">\r\n        <mat-expansion-panel class=\"type-card margin-bottom\" *ngFor=\"let type of shopTypes\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>{{type.typeName}}</mat-panel-title>\r\n                <mat-panel-description>\r\n                    Click Here\r\n                </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <mat-card class=\"margin-bottom blue\" *ngFor=\"let product of type.products\">{{product.productName}}</mat-card>\r\n            <mat-card class=\"sub-type-card margin-bottom\" *ngFor=\"let subType of type.subTypes\">\r\n                <div class=\"margin-bottom\">{{subType.typeName}}</div>\r\n                <mat-card class=\"margin-bottom blue\" *ngFor=\"let subProduct of subType.products\">{{subProduct.productName}}</mat-card>\r\n            </mat-card>\r\n        </mat-expansion-panel>\r\n    </mat-card>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { TypeService } from 'src/app/services/type.service';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { ShopType } from 'src/app/models/shop-type.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Subscription, forkJoin, from as ObservableFrom, combineLatest } from 'rxjs';\r\nimport { concatMap } from 'rxjs/operators';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n// REFACTOR ME PLEASE (08/09/2020)\r\n\r\n@Component({\r\n  selector: 'app-sub-type-edit',\r\n  templateUrl: './sub-type-edit.component.html',\r\n  styleUrls: ['./sub-type-edit.component.css']\r\n})\r\nexport class SubTypeEditComponent implements OnInit, OnDestroy {\r\n  loading = true;\r\n  possibleSubs: ShopType[];\r\n  possibleSupers: ShopType[];\r\n  shop: Shop;\r\n  private subscription = new Subscription();\r\n  types: Type[];\r\n\r\n  constructor(private dataService: DataService, private router: Router, private snackBar: MatSnackBar,\r\n              private typeService: TypeService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getShop(),\r\n        this.dataService.getTypes(),\r\n      ]).subscribe(([shop, types]) => {\r\n          this.shop = shop;\r\n          this.initComponentVariables(shop);\r\n          this.types = types;\r\n          this.initDragDropArrays();\r\n          this.initDragDropValues();\r\n          this.sortTypesByName(this.possibleSubs);\r\n          this.sortTypesByName(this.possibleSupers);\r\n          this.possibleSupers.forEach((superType: ShopType) => {\r\n            this.sortTypesByName(superType.subTypes);\r\n          });\r\n          this.loading = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  dropIntoSubs(event: CdkDragDrop<ShopType[]>) {\r\n    const superTypeToAdd: ShopType = event.previousContainer.data[event.previousIndex];\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n      this.dropIntoSubsSetArrayValues(superTypeToAdd);\r\n    }\r\n    this.sortTypesByName(this.possibleSubs);\r\n    this.sortTypesByName(this.possibleSupers);\r\n  }\r\n\r\n  private dropIntoSubsSetArrayValues(superTypeToAdd: ShopType) {\r\n    this.possibleSupers.push(superTypeToAdd);\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      if (!superType.subTypes.length  && !this.possibleSubs.some((subType: ShopType) => subType._id === superType._id)\r\n       && superType.products.length) {\r\n        this.possibleSubs.push(superType);\r\n      }\r\n    });\r\n    this.filterIneligibleSubTypes(this.possibleSubs);\r\n  }\r\n\r\n  dropIntoSupers(event: CdkDragDrop<ShopType[]>, newSuperType: ShopType) {\r\n    const typeToMove: ShopType = event.previousContainer.data[event.previousIndex];\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else if (typeToMove._id !== newSuperType._id  &&\r\n      (this.getInShopStatus(typeToMove) && this.getInShopStatus(newSuperType) ||\r\n      (!this.getInShopStatus(typeToMove) && !this.getInShopStatus(newSuperType)))) {\r\n        transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n        this.dropIntoSupersSetArrayValues(typeToMove);\r\n    } else if (typeToMove._id === newSuperType._id) {\r\n        this.snackBar.open('Cannot put a type within itself.', `Dismiss`, {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open('Both the super-type and sub-type must currently be in the shop.', `Dismiss`, {\r\n        duration: 4000,\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.sortTypesByName(this.possibleSupers);\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      this.sortTypesByName(superType.subTypes);\r\n    });\r\n  }\r\n\r\n  private dropIntoSupersSetArrayValues(typeToMove: ShopType) {\r\n    this.possibleSupers = this.possibleSupers.filter((superTypeToRemove: ShopType) => superTypeToRemove._id !== typeToMove._id);\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      if (superType.subTypes.length || !superType.products.length) {\r\n        this.possibleSubs = this.possibleSubs.filter((subType: ShopType) => subType._id !== superType._id);\r\n      }\r\n      if (!superType.subTypes.length  && !this.possibleSubs.some((subType: ShopType) => subType._id === superType._id)\r\n      && superType.products.length) {\r\n        this.possibleSubs.push(superType);\r\n      }\r\n    });\r\n    this.filterIneligibleSubTypes(this.possibleSubs);\r\n  }\r\n\r\n  private filterIneligibleSubTypes(types: Type[]) {\r\n    types.forEach((type: Type) => {\r\n      if (!type.products.length || !type.typeLimits || (type.typeLimits && !type.typeLimits.enableTypeTracking)) {\r\n        this.possibleSubs = this.possibleSubs.filter((ineligibleType: ShopType) => type._id !== ineligibleType._id);\r\n      }\r\n    });\r\n  }\r\n\r\n  getInShopStatus(typeToCheck: Type) {\r\n    let inShop = false;\r\n    this.shop.shop.forEach((type: Type) => {\r\n      if (type._id === typeToCheck._id) {\r\n        inShop = true;\r\n      }\r\n    });\r\n    return inShop;\r\n  }\r\n\r\n  initComponentVariables(shop: Shop) {\r\n    this.possibleSubs = [];\r\n    this.possibleSupers = [];\r\n    const shopClone = cloneDeep(shop);\r\n    this.shop = shopClone;\r\n  }\r\n\r\n  /* Adds all types to possible sub-types and possible super-types arrays.\r\n  // All types are inserted into both arrays so that sub-types can be put in super-types.\r\n  */\r\n  private initDragDropArrays() {\r\n    this.types.forEach((type: Type) => {\r\n      const emptyArray: ShopType[] = [];\r\n      this.possibleSubs.push(\r\n        {_id: type._id, typeName: type.typeName, typeLimits: type.typeLimits, subTypes: emptyArray, products: type.products}\r\n      );\r\n      this.possibleSupers.push(\r\n        {_id: type._id, typeName: type.typeName, typeLimits: type.typeLimits, subTypes: emptyArray, products: type.products}\r\n      );\r\n    });\r\n  }\r\n\r\n  private initDragDropValues() {\r\n    // sets possible sub-types\r\n    this.filterIneligibleSubTypes(this.types);\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      this.types.forEach((type: Type) => {\r\n        if (type.superTypeId === superType._id) {\r\n          // find sub-types of super-types\r\n          const newSubType = this.possibleSubs.find((subType: ShopType) => subType._id === type._id);\r\n          // add sub-type to super-type\r\n          superType.subTypes.push(newSubType);\r\n          // remove sub-type from possible sub-types\r\n          this.possibleSubs = this.possibleSubs.filter((subType: ShopType) => subType._id !== newSubType._id);\r\n          // remove super-type from possible sub-types\r\n          this.possibleSubs = this.possibleSubs.filter((subType: ShopType) => subType._id !== superType._id);\r\n          // remove sub-type from possible super-types\r\n          this.possibleSupers = this.possibleSupers.filter((superTypeRemove: ShopType) => superTypeRemove._id !== newSubType._id);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private showResponseStatus(status: number) {\r\n    if (status === 200) {\r\n      this.snackBar.open('Types updated successfully', 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open('Types update failed.', 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateShop();\r\n    this.dataService.updateProducts();\r\n  }\r\n\r\n  sortTypesByName(dragDropArray: ShopType[]) {\r\n    dragDropArray.sort((before, after) => before.typeName.trim().toLowerCase() > after.typeName.trim().toLowerCase() ? 1 : -1);\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  onSaveClick() {\r\n    this.loading = true;\r\n    if (this.getTypeIdsToUpdate().length) {\r\n      forkJoin([\r\n        this.typeService.removeSuperTypeIdMany(this.getTypeIdsToRemove()),\r\n        ObservableFrom(this.getTypeIdsToUpdate()).pipe(\r\n          concatMap((update: {\r\n            superTypeId: string,\r\n            updateIds: string[]\r\n          }) => this.typeService.updateSuperTypeIdMany(update.superTypeId, update.updateIds)))\r\n        ]).subscribe(([remove, update]) => {\r\n          let response: number;\r\n          const typedRemove: any = remove;\r\n          const typedUpdate: any = update;\r\n          typedRemove.status === 200 && typedUpdate.status === 200 ? response = 200 : response = 400;\r\n          this.showResponseStatus(response);\r\n          this.router.navigate([`/pantry`]);\r\n\r\n        });\r\n    } else {\r\n      this.typeService.removeSuperTypeIdMany(this.getTypeIdsToRemove()).subscribe((response: any) => {\r\n        this.showResponseStatus(response.status);\r\n        this.router.navigate([`/pantry`]);\r\n      });\r\n    }\r\n  }\r\n\r\n  private getTypeIdsToRemove(): string[] {\r\n    const typeIdsToRemove: string[] = [];\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      typeIdsToRemove.push(superType._id);\r\n    });\r\n    return typeIdsToRemove;\r\n  }\r\n\r\n  private getTypeIdsToUpdate(): any[] {\r\n    const updateObjects: {\r\n      superTypeId: string,\r\n      updateIds: string[]\r\n    }[] = [];\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      if (superType.subTypes.length) {\r\n        const idsToUpdate: string[] = [];\r\n        superType.subTypes.forEach((subType: ShopType) => {\r\n          idsToUpdate.push(subType._id);\r\n        });\r\n        updateObjects.push({superTypeId: superType._id, updateIds: idsToUpdate});\r\n      }\r\n    });\r\n    return updateObjects;\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" class=\"margin-top-2\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span>Set Sub-Types</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n        <button mat-raised-button (click)=\"onSaveClick()\">Save and Exit</button>\r\n    </span>\r\n    <mat-card class=\"margin-top-2 dark-blue\">\r\n        <ul>\r\n            <li>In order to assign a sub-type, the sub-type and super-type must both be in the shop or both not in the shop.</li>\r\n            <li>Only types with products and that have type limits with type tracking enabled appear under the Available Sub-Types column.</li>\r\n            <li>Only types that are not sub-types appear under the Available Super-Types column.</li>\r\n            <li>Types cannot be both super-types and sub-types.</li>\r\n        </ul>\r\n    </mat-card>\r\n    <div id=\"grid-container\" class=\"margin-top-2\" cdkDropListGroup>\r\n        <mat-card class=\"drag-drop-header dark-blue\" id=\"left-header\">Available Sub-Types</mat-card>\r\n        <mat-card class=\"drag-drop-header dark-blue\">Available Super-Types</mat-card> \r\n        <cdk-virtual-scroll-viewport id=\"sub-type-viewport\" itemSize=\"\">\r\n            <mat-card id=\"sub-type-container\" [cdkDropListData]=\"possibleSubs\" (cdkDropListDropped)=\"dropIntoSubs($event)\" cdkDropList>\r\n                <mat-card class=\"sub-type-card type-name\" *ngFor=\"let subType of possibleSubs\" cdkDrag>{{subType.typeName}}<div class=\"in-shop\" *ngIf=\"getInShopStatus(subType)\">In Shop</div></mat-card>\r\n            </mat-card>\r\n        </cdk-virtual-scroll-viewport>\r\n        <cdk-virtual-scroll-viewport id=\"super-type-viewport\" itemSize=\"\">  \r\n            <mat-card id=\"super-type-container\">\r\n                <ng-container *ngFor=\"let superType of possibleSupers\">\r\n                    <mat-card class=\"super-type-card-container\" [cdkDropListData]=\"superType.subTypes\" (cdkDropListDropped)=\"dropIntoSupers($event, superType)\" cdkDropList>\r\n                        <span class=\"type-name\">{{superType.typeName}}<div class=\"in-shop\" *ngIf=\"getInShopStatus(superType)\">In Shop</div></span>\r\n                        <mat-card class=\"super-type-card type-name margin-top-2\" *ngFor=\"let subType of superType.subTypes\" cdkDrag>\r\n                            {{subType.typeName}}\r\n                        </mat-card>\r\n                    </mat-card>\r\n                </ng-container>\r\n            </mat-card>\r\n        </cdk-virtual-scroll-viewport>\r\n    </div>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder, FormControlName } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { minMaxValidator } from '../product-add/product-add.component';\r\nimport { Type } from '../../models/type.model';\r\nimport { TypeService } from 'src/app/services/type.service';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { combineLatest, Subscription } from 'rxjs';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-type-add',\r\n  templateUrl: './type-add.component.html',\r\n  styleUrls: ['./type-add.component.css']\r\n})\r\n\r\nexport class TypeAddComponent implements OnInit, OnDestroy {\r\n  availableProducts: Product[] = [];\r\n  availableSubTypes: Type[] = [];\r\n  currentTypeName: string;\r\n  deletedOrMoved = false;\r\n  inShop = false;\r\n  limitPanelOpenState = false;\r\n  loading = true;\r\n  newSubTypes: Type[] = [];\r\n  products: Product[];\r\n  productPanelOpenState = false;\r\n  productsInType: Product[] = [];\r\n  requiredError = 'This field is required.';\r\n  enableTypeTracking: FormControl;\r\n  subscription = new Subscription();\r\n  superTypeName: string;\r\n  type = new Type();\r\n  typeEdit = false;\r\n  typeForm = new FormGroup({\r\n    typeName: new FormControl('', Validators.required),\r\n    typeComment: new FormControl('')\r\n  });\r\n  types: Type[];\r\n  typeLimitsForm: FormGroup;\r\n  typeLimitsFormOpen = false;\r\n  typeSizeAmount: FormArray;\r\n\r\n  constructor(protected dataService: DataService, protected formBuilder: FormBuilder, protected snackBar: MatSnackBar,\r\n              protected typeService: TypeService, protected router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getProducts(),\r\n        this.dataService.getTypes()\r\n      ]).subscribe(([products, types]) => {\r\n        this.products = products;\r\n        this.types = types;\r\n        this.initAvailableProducts();\r\n        this.loading = !this.loading;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  addSizeAmount() {\r\n    this.typeSizeAmount.push(this.formBuilder.group({\r\n      minFamSize: ['', [Validators.required]],\r\n      maxFamSize: ['', Validators.required],\r\n      maxAmount: ['', Validators.required]\r\n    }, { validator: minMaxValidator }\r\n    ));\r\n  }\r\n\r\n  deleteSizeAmount(index: number) {\r\n    this.deletedOrMoved = true;\r\n    this.typeSizeAmount.removeAt(index);\r\n    if (!this.typeSizeAmount.length) {\r\n      this.typeForm.removeControl('typeLimitsForm');\r\n      this.typeLimitsFormOpen = false;\r\n    }\r\n  }\r\n\r\n  dropProduct(event: CdkDragDrop<Product[]>) {\r\n    this.deletedOrMoved = true;\r\n    event.previousContainer === event.container ?\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex) :\r\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n    this.sortProductsByName(this.availableProducts);\r\n    this.sortProductsByName(this.productsInType);\r\n  }\r\n\r\n  initAvailableProducts() {\r\n    const unavailableProducts: Product[] = [];\r\n    this.types.forEach(type => type.products.forEach(product => unavailableProducts.push(product)));\r\n    this.products.forEach(product => {\r\n      if (!unavailableProducts.some(unavailable => unavailable._id === product._id)) {\r\n        this.availableProducts.push(product);\r\n      }\r\n    });\r\n    this.sortProductsByName(this.availableProducts);\r\n  }\r\n\r\n  initTypeLimitsForm() {\r\n    this.typeLimitsFormOpen = true;\r\n    this.typeLimitsForm = new FormGroup({});\r\n    this.enableTypeTracking = new FormControl(true);\r\n    this.typeLimitsForm.addControl('enableTypeTracking', this.enableTypeTracking);\r\n    this.typeSizeAmount = new FormArray([]);\r\n    this.addSizeAmount();\r\n    this.typeLimitsForm.addControl('typeSizeAmount', this.typeSizeAmount);\r\n    this.typeForm.addControl('typeLimitsForm', this.typeLimitsForm);\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  onSaveClick() {\r\n    if (this.typeForm.valid) {\r\n      this.setTypeValues();\r\n      if (!this.typeEdit) {\r\n        this.typeService.addType(this.type).subscribe((response: any) => this.showResponseStatus(response.status));\r\n      } else {\r\n        this.migrateTypeSizeAmount();\r\n        this.removeFromSuperType();\r\n        this.typeService.updateType(this.type._id, this.type).subscribe((response: any) => {\r\n          this.showResponseStatus(response.status);\r\n          this.dataService.updateTypes();\r\n          this.dataService.updateShop();\r\n          this.dataService.updateProducts();\r\n        });\r\n      }\r\n    }\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  removeFromSuperType() {\r\n    if (this.type.superTypeId && (!this.type.typeLimits || (this.type.typeLimits && !this.type.typeLimits.enableTypeTracking))) {\r\n      this.type.superTypeId = undefined;\r\n    }\r\n  }\r\n\r\n  setTypeValues() {\r\n    this.type.typeName = this.typeForm.get('typeName').value;\r\n    this.typeForm.get('typeComment').value.trim() !== '' ?\r\n      this.type.typeComment = this.typeForm.get('typeComment').value :\r\n      this.type.typeComment = undefined;\r\n    this.productsInType.length ?\r\n      this.type.products = this.productsInType :\r\n      this.type.products = [];\r\n    if (this.typeLimitsForm && this.typeSizeAmount.length) {\r\n      const addTypeLimits = {\r\n        typeLimits: {\r\n          enableTypeTracking: this.typeLimitsForm.get('enableTypeTracking').value,\r\n          typeSizeAmount:  this.typeLimitsForm.get('typeSizeAmount').value\r\n        }\r\n      };\r\n      this.type.typeLimits = addTypeLimits.typeLimits;\r\n    } else {\r\n      this.type.typeLimits = undefined;\r\n    }\r\n  }\r\n\r\n  showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`${this.type.typeName} successfully updated.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`${this.type.typeName} failed to update.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateProducts();\r\n    this.dataService.updateShop();\r\n  }\r\n\r\n  sortProductsByName(dragDropCard: Product[]) {\r\n    dragDropCard.sort((before, after) => before.productName.trim().toLowerCase() > after.productName.trim().toLowerCase() ? 1 : -1);\r\n  }\r\n\r\n  // This is temporary.\r\n  // Take it out when we decide about migrating db or not.\r\n  private migrateTypeSizeAmount() {\r\n    if (this.type.typeSizeAmount) {\r\n      const addTypeLimits = {\r\n        typeLimits: {\r\n          enableTypeTracking: true,\r\n          typeSizeAmount:  this.type.typeSizeAmount\r\n        }\r\n      };\r\n      this.type.typeLimits = addTypeLimits.typeLimits;\r\n      this.type.typeSizeAmount = undefined;\r\n    }\r\n  }\r\n}\r\n","<div id=\"spinner\" class=\"center-grid\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n\r\n\r\n<mat-card id=\"top-container\" class=\"margin-top-2\" [formGroup]=\"typeForm\" *ngIf=\"!loading\">\r\n\r\n    <!-- Top Buttons --> \r\n    <span id=\"top-buttons\">\r\n        <span *ngIf=\"!typeEdit\" class=\"type-title\">Type Create</span>\r\n        <span *ngIf=\"typeEdit\" class=\"type-title\">Type Edit</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n        <button mat-raised-button (click)=\"onSaveClick()\" *ngIf=\"!typeEdit\" [disabled]=\"!typeForm.valid\">Save Type and Exit</button>\r\n        <button mat-raised-button (click)=\"onSaveClick()\" *ngIf=\"typeEdit\" [disabled]=\"(typeForm.pristine && !deletedOrMoved) || !typeForm.valid\">Save Update and Exit</button>         \r\n    </span>\r\n\r\n    <!-- In Shop And Super Type Name --> \r\n    <span class=\"flex-space-evenly margin-top-2\">\r\n        <mat-card class=\"red\" *ngIf=\"inShop\">Currently in the Shop</mat-card>\r\n        <mat-card class=\"red\" *ngIf=\"(typeLimitsFormOpen && superTypeName && typeLimitsForm.get('enableTypeTracking').value)\">{{'Sub-type of ' + superTypeName}}</mat-card>  \r\n    </span>\r\n     \r\n    <!--- Name And Comments -->\r\n    <div id=\"name-container-grid\" class=\"margin-top-2\">\r\n        <mat-card class=\"center-grid blue\">\r\n            <div>\r\n                <mat-form-field>\r\n                    <mat-label>Type Name</mat-label>\r\n                    <input matInput formControlName=\"typeName\">\r\n                    <mat-error *ngIf=\"typeForm.get('typeName').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div> \r\n        </mat-card>\r\n        <div></div>\r\n        <mat-card class=\" flex-align-items blue\">\r\n            <mat-form-field class=\"full-width\">\r\n                <mat-label>Comment (optional)</mat-label>\r\n                <input matInput formControlName=\"typeComment\">\r\n            </mat-form-field>\r\n        </mat-card>\r\n    </div>\r\n\r\n    <!-- Add and Remove Products-->\r\n    <mat-expansion-panel class=\"blue margin-top-2 texture\" [expanded]=\"productPanelOpenState\" \r\n    (opened)=\"productPanelOpenState = true\" (closed)=\"productPanelOpenState = false\">\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Add and Remove Products</mat-panel-title>\r\n            <mat-panel-description>{{productPanelOpenState ? 'close' : 'open'}}</mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <mat-card class=\"dark-blue\">\r\n            <ul>\r\n                <li>Only products not already assigned to a type appear in the \"Available Products\" column.</li>\r\n                <li>Types without products will be automatically removed from the shop.</li>\r\n            </ul>\r\n        </mat-card>\r\n        <div id=\"add-product-container\" class=\"margin-top-1 blue texture\">\r\n            <mat-card id=\"available-container\" class=\"texture\">\r\n                <div class=\"margin-bottom-1\">Available Products</div>\r\n                <cdk-virtual-scroll-viewport class=\"add-remove-products-viewport margin-top-2\" itemSize=\"\" #productList=\"cdkDropList\" \r\n                [cdkDropListData]=\"availableProducts\" [cdkDropListConnectedTo]=\"[productTypeList]\" (cdkDropListDropped)=\"dropProduct($event)\" cdkDropList>\r\n                    <mat-card class=\"product-card margin-top-1-not-first dark-blue\" *ngFor=\"let product of availableProducts\" cdkDrag>{{product.productName}}</mat-card>\r\n                </cdk-virtual-scroll-viewport>\r\n            </mat-card>\r\n            <mat-card class=\"texture\">\r\n                <div class=\"margin-bottom-1\">Products in this Type</div>\r\n                <cdk-virtual-scroll-viewport class=\"add-remove-products-viewport margin-top-2\" itemSize=\"\" #productTypeList=\"cdkDropList\" \r\n                [cdkDropListData]=\"productsInType\" [cdkDropListConnectedTo]=\"[productList]\" (cdkDropListDropped)=\"dropProduct($event)\" cdkDropList>\r\n                    <mat-card class=\"product-card margin-top-1-not-first dark-blue\" *ngFor=\"let product of productsInType\" cdkDrag>{{product.productName}}</mat-card>\r\n                </cdk-virtual-scroll-viewport>  \r\n            </mat-card>\r\n        </div>\r\n    </mat-expansion-panel >\r\n    \r\n    <!-- Type Limits -->\r\n    <mat-expansion-panel class=\"blue margin-top-2 texture\" [expanded]=\"limitPanelOpenState\" \r\n    (opened)=\"limitPanelOpenState = true\" (closed)=\"limitPanelOpenState = false\">\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Set Type Limits (optional)</mat-panel-title>\r\n            <mat-panel-description>{{limitPanelOpenState ? 'close' : 'open'}}</mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n            <div class=\"margin-top-1 blue texture\">\r\n                <!-- Information -->\r\n                <mat-card class=\"margin-top-2 dark-blue\">\r\n                    <ul>\r\n                        <li>Only add type limits if the combined quantity of products selected by the user from this type cannot exceed a certain number per family size.</li>\r\n                        <li *ngIf=\"!typeEdit || (typeEdit && !superTypeName)\">Types without limits or with type tracking disabled cannot be a sub-type.</li>\r\n                        <li *ngIf=\"typeEdit && superTypeName && !inShop\">If all type limits are removed or type tracking disabled, this type will be automatically removed as a sub-type.</li>\r\n                        <li *ngIf=\"typeEdit && superTypeName && inShop\">If all type limits are removed or type tracking disabled, this type will be automatically removed as a sub-type but remain in the shop.</li>\r\n                    </ul>\r\n                </mat-card>\r\n                <button class=\"margin-top-2\" mat-raised-button (click)=\"initTypeLimitsForm()\" *ngIf=\"!typeLimitsFormOpen\">Create Limits</button>\r\n                <!-- Type Limits Form -->\r\n                <div formGroupName=\"typeLimitsForm\" *ngIf=\"typeLimitsFormOpen\">\r\n                    <!-- Enable Type Tracking Form -->\r\n                    <mat-card class=\"margin-top-2 dark-blue\" >\r\n                        <label>Enable type tracking?</label>\r\n                        <mat-radio-group matInput formControlName=\"enableTypeTracking\">\r\n                            <mat-radio-button [value]=true>Yes</mat-radio-button>\r\n                            <mat-radio-button [value]=false>No</mat-radio-button>\r\n                        </mat-radio-group>\r\n                        <ul>\r\n                            <li>Click \"Yes\" for types composed only of shelf stable items (e.g., canned goods, juice).</li>  \r\n                            <li>Click \"No\" for types composed only of shelf instable itmes (e.g. meat, fresh fruit).</li>  \r\n                            <li>If choosing \"No\", it's best to remove any product limits add a comment to the type explaining potential product scarcity.</li>\r\n                            <li>The max amount per family size will be shown to the user regardless of the above choice.</li>\r\n                        </ul>  \r\n                    </mat-card>\r\n                    <button class=\"margin-top-2\" mat-raised-button (click)=\"addSizeAmount()\">Add Another Limit</button>\r\n                    <!-- Type Size Amount Form -->\r\n                    <div class=\"margin-top-2\">\r\n                        <mat-card class=\"margin-top-2-not-first dark-blue\" *ngFor=\"let element of typeLimitsForm.get('typeSizeAmount')['controls']; let i = index\" formArrayName=\"typeSizeAmount\">\r\n                            <ng-container [formGroupName]=\"i\">\r\n                                <div id=\"type-size-amount-form\">\r\n                                    <span class=\"center-grid\">\r\n                                        <button mat-raised-button (click)=\"deleteSizeAmount(i)\">Delete Limit</button>\r\n                                    </span>    \r\n                                    <mat-form-field >\r\n                                    <mat-label>Minimum Family Size</mat-label>\r\n                                    <mat-select matInput formControlName=\"minFamSize\">\r\n                                        <mat-option [value]=1>1</mat-option>\r\n                                        <mat-option [value]=2>2</mat-option>\r\n                                        <mat-option [value]=3>3</mat-option>\r\n                                        <mat-option [value]=4>4</mat-option>\r\n                                        <mat-option [value]=5>5</mat-option>\r\n                                        <mat-option [value]=6>6</mat-option>\r\n                                        <mat-option [value]=7>7</mat-option>\r\n                                        <mat-option [value]=8>8</mat-option>\r\n                                        <mat-option [value]=9>9</mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"typeLimitsForm.get('typeSizeAmount')['controls'][i].get('minFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                                    </mat-form-field>\r\n                                    <mat-form-field>\r\n                                    <mat-label>Maximum Family Size</mat-label>\r\n                                    <mat-select matInput formControlName=\"maxFamSize\">\r\n                                        <mat-option [value]=1>1</mat-option>\r\n                                        <mat-option [value]=2>2</mat-option>\r\n                                        <mat-option [value]=3>3</mat-option>\r\n                                        <mat-option [value]=4>4</mat-option>\r\n                                        <mat-option [value]=5>5</mat-option>\r\n                                        <mat-option [value]=6>6</mat-option>\r\n                                        <mat-option [value]=7>7</mat-option>\r\n                                        <mat-option [value]=8>8</mat-option>\r\n                                        <mat-option [value]=9>9</mat-option>\r\n                                    </mat-select>    \r\n                                    <mat-error *ngIf=\"typeLimitsForm.get('typeSizeAmount')['controls'][i].get('maxFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                                    </mat-form-field>        \r\n                                    <mat-form-field>\r\n                                    <mat-label>Type Limit</mat-label>\r\n                                    <mat-select matInput formControlName=\"maxAmount\">\r\n                                        <mat-option [value]=1>1</mat-option>\r\n                                        <mat-option [value]=2>2</mat-option>\r\n                                        <mat-option [value]=3>3</mat-option>\r\n                                        <mat-option [value]=4>4</mat-option>\r\n                                        <mat-option [value]=5>5</mat-option>\r\n                                        <mat-option [value]=6>6</mat-option>\r\n                                        <mat-option [value]=7>7</mat-option>\r\n                                        <mat-option [value]=8>8</mat-option>\r\n                                        <mat-option [value]=9>9</mat-option>\r\n                                        <mat-option [value]=10>10</mat-option>\r\n                                        <mat-option [value]=11>11</mat-option>\r\n                                        <mat-option [value]=12>12</mat-option>\r\n                                        <mat-option [value]=13>13</mat-option>\r\n                                        <mat-option [value]=14>14</mat-option>\r\n                                        <mat-option [value]=15>15</mat-option>\r\n                                    </mat-select>    \r\n                                    <mat-error *ngIf=\"typeLimitsForm.get('typeSizeAmount')['controls'][i].get('maxAmount').hasError('required')\">{{requiredError}}</mat-error>\r\n                                    </mat-form-field>    \r\n                                </div>\r\n                                <mat-error *ngIf=\"typeLimitsForm.get('typeSizeAmount')['controls'][i].hasError('minMax')\">Minimum size must be equal to or smaller than maximum size.</mat-error>     \r\n                            </ng-container>      \r\n                        </mat-card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n    </mat-expansion-panel>\r\n</mat-card>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { TypeService } from 'src/app/services/type.service';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-type-delete-modal',\r\n  templateUrl: './type-delete-modal.component.html',\r\n  styleUrls: ['./type-delete-modal.component.css']\r\n})\r\nexport class TypeDeleteModalComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<TypeDeleteModalComponent>, @Inject (MAT_DIALOG_DATA) public type: Type,\r\n              private dataService: DataService, private router: Router, private snackBar: MatSnackBar,\r\n              private typeService: TypeService) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  private deleteType() {\r\n    this.typeService.deleteType(this.type._id).subscribe((response: any) => this.showResponseStatus(response.status));\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  onProceedClick() {\r\n    this.deleteType();\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  private showResponseStatus(status: number) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`${this.type.typeName} successfully deleted.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`${this.type.typeName} failed to delete.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateShop();\r\n    this.dataService.updateProducts();\r\n  }\r\n}\r\n","<mat-card>\r\n    <p>This action will permanently delete {{type.typeName}}.  Permanently deleting a type removes it\r\n    from the shop and unassigns&mdash;but does not delete&mdash;any products currently assigned to it.</p>\r\n</mat-card>\r\n<p id=\"proceed-prompt\">Do you wish to proceed?</p>\r\n<span>\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button (click)=\"onProceedClick()\">Proceed</button>\r\n</span>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { TypeAddComponent } from '../type-add/type-add.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { TypeService } from 'src/app/services/type.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { minMaxValidator } from '../product-add/product-add.component';\r\nimport { combineLatest } from 'rxjs';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-type-edit',\r\n  templateUrl: '../type-add/type-add.component.html',\r\n  styleUrls: ['../type-add/type-add.component.css']\r\n})\r\nexport class TypeEditComponent extends TypeAddComponent implements OnInit, OnDestroy {\r\n  shop: Shop;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, protected dataService: DataService, protected formBuilder: FormBuilder,\r\n              protected typeService: TypeService, protected snackBar: MatSnackBar, protected router: Router) {\r\n      super(dataService, formBuilder, snackBar, typeService, router);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.typeEdit = true;\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getShop(),\r\n        this.dataService.getTypes(),\r\n        this.activatedRoute.params.pipe(\r\n          switchMap(params => this.dataService.getTypeById(params.id)),\r\n          take(1)\r\n        ),\r\n        this.dataService.getProducts(),\r\n      ]).subscribe(([shop, types, type, products]) => {\r\n          this.rerouteOnEmptyType(type);\r\n          this.shop = shop;\r\n          this.types = types;\r\n          this.type = type;\r\n          this.products = products;\r\n          this.typeForm = new FormGroup({\r\n            typeName: new FormControl(this.type.typeName, Validators.required),\r\n            typeComment: new FormControl(this.initEditTypeCommentForm()),\r\n          });\r\n          this.initAvailableProducts();\r\n          this.initProductsInType();\r\n          this.initEditTypeLimitsForm();\r\n          this.setInShop();\r\n          this.setSuperTypeName();\r\n          this.loading = !this.loading;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private initProductsInType() {\r\n    this.productsInType = this.type.products;\r\n  }\r\n\r\n  private initEditTypeCommentForm(): string {\r\n    if (this.type.typeComment) {\r\n      return this.type.typeComment;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private initEditTypeLimitsForm() {\r\n    if (this.type.typeLimits) {\r\n      this.typeLimitsFormOpen = true;\r\n      this.typeLimitsForm = new FormGroup({});\r\n      this.enableTypeTracking = new FormControl(this.type.typeLimits.enableTypeTracking);\r\n      this.typeLimitsForm.addControl('enableTypeTracking', this.enableTypeTracking);\r\n      this.typeSizeAmount = new FormArray([]);\r\n      this.type.typeLimits.typeSizeAmount.forEach(element => {\r\n        this.typeSizeAmount.push(this.formBuilder.group({\r\n          minFamSize: [element.minFamSize, Validators.required],\r\n          maxFamSize: [element.maxFamSize, Validators.required],\r\n          maxAmount: [element.maxAmount, Validators.required]\r\n        },\r\n        { validator: minMaxValidator }\r\n        ));\r\n        this.typeLimitsForm.addControl('typeSizeAmount', this.typeSizeAmount);\r\n      });\r\n      this.typeForm.addControl('typeLimitsForm', this.typeLimitsForm);\r\n    }\r\n  }\r\n\r\n  private setInShop() {\r\n    this.shop.shop.forEach((type: Type) => {\r\n      if (type._id === this.type._id) {\r\n        this.inShop = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  private setSuperTypeName() {\r\n    if (this.type.superTypeId) {\r\n      this.superTypeName = this.types.find((superType) => superType._id === this.type.superTypeId).typeName;\r\n    }\r\n  }\r\n\r\n  private rerouteOnEmptyType(type: any) {\r\n    if (type === undefined || Object.entries(type).length === 0 && type.constructor === Object) {\r\n      this.snackBar.open('Type not found. Please try again.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      this.router.navigate([`/pantry`]);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TypeDeleteModalComponent } from '../type-delete-modal/type-delete-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-type-grid-buttons',\r\n  templateUrl: './type-grid-buttons.component.html',\r\n  styleUrls: ['./type-grid-buttons.component.css']\r\n})\r\nexport class TypeGridButtonsComponent implements OnInit {\r\n  data: any;\r\n  params: any;\r\n\r\n  constructor(private dialog: MatDialog, private router: Router) { }\r\n\r\n  agInit(params) {\r\n    this.data =  params.data;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onDeleteClick() {\r\n    this.dialog.open(TypeDeleteModalComponent, {\r\n      data: this.data,\r\n      disableClose: true,\r\n      panelClass: ['delete-dialog-container'],\r\n      width: '34rem'\r\n    });\r\n  }\r\n\r\n  onEditClick() {\r\n    this.router.navigate(['/type', this.data._id]);\r\n  }\r\n}\r\n","<button id=\"edit-button\" (click)=\"onEditClick()\">Edit</button>\r\n<button id=\"delete-button\" (click)=\"onDeleteClick()\">Delete</button>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { TypeGridButtonsComponent } from '../type-grid-buttons/type-grid-buttons.component';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { combineLatest, Subscription } from 'rxjs';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-types',\r\n  templateUrl: './types.component.html',\r\n  styleUrls: ['./types.component.css']\r\n})\r\nexport class TypesComponent implements OnInit, OnDestroy {\r\n  columnDefs = [\r\n    {headerName: 'Type Name', field: 'typeName', sort: 'asc'},\r\n    {headerName: 'Product Count', field: 'productCount'},\r\n    {headerName: 'Type Limit', field: 'typeLimit'},\r\n    {headerName: 'Super Type', field: 'superType'},\r\n    {headerName: 'In Shop', field: 'inShop'},\r\n    {headerName: '', field: 'action', filter: false, sortable: false, width: 150, cellRendererFramework: TypeGridButtonsComponent}\r\n  ];\r\n  defaultColDef = {\r\n    filter: true,\r\n    filterParams: {\r\n      suppressAndOrCondition: true\r\n    },\r\n    resizable: true,\r\n    sortable: true,\r\n    width: 120\r\n  };\r\n  private gridApi;\r\n  loading = true;\r\n  rowData = [];\r\n  shop: Shop;\r\n  subscription = new Subscription();\r\n  types: Type[];\r\n\r\n  constructor(private dataService: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n      this.dataService.getShop(),\r\n      this.dataService.getTypes()\r\n      ]).subscribe(([shop, types]) => {\r\n        this.shop = shop;\r\n        this.types = types;\r\n        this.rowData = this.getFormattedFields();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridApi.setRowData(this.rowData);\r\n  }\r\n\r\n  private getInShopStatus(typeToCheck: Type) {\r\n    let inShop = false;\r\n    this.shop.shop.forEach((type: Type) => {\r\n      if (type._id === typeToCheck._id) {\r\n        inShop = true;\r\n      }\r\n    });\r\n    return inShop;\r\n  }\r\n\r\n  private getSuperTypeName(typeToCheck: Type) {\r\n    let superTypeName = 'None';\r\n    this.types.forEach((type: Type) => {\r\n      if (type._id === typeToCheck.superTypeId) {\r\n        superTypeName = type.typeName;\r\n      }\r\n    });\r\n    return superTypeName;\r\n  }\r\n\r\n  private getFormattedFields() {\r\n    const rowData = [];\r\n    this.types.forEach((type: Type) => {\r\n      const rowEntry = {};\r\n      Object.defineProperty(rowEntry, '_id', {value: type._id});\r\n      Object.defineProperty(rowEntry, 'typeName', {value: type.typeName});\r\n      type.products ?\r\n        Object.defineProperty(rowEntry, 'productCount', {value: type.products.length}) :\r\n        Object.defineProperty(rowEntry, 'productCount', {value: 0});\r\n      type.typeLimits ?\r\n        Object.defineProperty(rowEntry, 'typeLimit', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'typeLimit', {value: 'No'});\r\n      Object.defineProperty(rowEntry, 'superType', {value: this.getSuperTypeName(type)});\r\n      this.getInShopStatus(type) ?\r\n        Object.defineProperty(rowEntry, 'inShop', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'inShop', {value: 'No'});\r\n      rowData.push(rowEntry);\r\n    });\r\n    return rowData;\r\n  }\r\n\r\n  onCreateTypeClick() {\r\n    this.router.navigate(['/type']);\r\n  }\r\n\r\n  onRowClicked() {\r\n    this.router.navigate(['/product']);\r\n  }\r\n\r\n  onSubTypesClick() {\r\n    this.router.navigate(['/sub-types']);\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div id=\"ag-grid-super-container\">\r\n    <mat-card id=\"ag-grid-sub-container\" *ngIf=\"!loading\">\r\n        <span id=\"button-grid-container\">\r\n            <span id=\"types-title\">Types</span>\r\n            <button mat-raised-button (click)=\"onSubTypesClick()\">Set Sub-Types</button>\r\n            <button mat-raised-button (click)=\"onCreateTypeClick()\">Create Type</button>\r\n        </span>\r\n        <ag-grid-angular \r\n        style=\"width: 760px; height: 500px;\" \r\n        class=\"ag-theme-balham\"\r\n        [columnDefs]=\"columnDefs\"\r\n        [defaultColDef]=\"defaultColDef\"\r\n        [suppressCellSelection]=\"true\"\r\n        [pagination]=\"true\"\r\n        [paginationAutoPageSize]=\"true\"\r\n        [rowData]=\"rowData\"\r\n        (gridReady)=\"onGridReady($event)\"\r\n        >\r\n        </ag-grid-angular>\r\n    </mat-card>\r\n</div>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean|UrlTree> | boolean {\r\n    return this.authService.isAuthenticated.pipe(\r\n      tap(loggedIn => {\r\n        if (!loggedIn) {\r\n          this.authService.login(state.url);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Family } from './family.model';\r\nimport { CartItemsByType } from './cart-items-by-type.model';\r\n\r\nexport class Order {\r\n    // tslint:disable-next-line:variable-name\r\n    _id: string;\r\n    family: Family;\r\n    cart: CartItemsByType[];\r\n    pickUpDate: string;\r\n    received: boolean;\r\n}\r\n","export class Product {\r\n    // tslint:disable-next-line:variable-name\r\n    _id: string;\r\n    productName: string;\r\n    prodSizeAmount?: {\r\n        minFamSize: number;\r\n        maxFamSize: number;\r\n        maxAmount: number;\r\n    } [];\r\n    points?: number;\r\n    school?: boolean;\r\n    infant?: boolean;\r\n}\r\n","import { Product } from './product.model';\r\n\r\nexport class Type {\r\n    // tslint:disable-next-line:variable-name\r\n    _id: string;\r\n    typeName: string;\r\n    products: Product[];\r\n    typeComment?: string;\r\n    typeSizeAmount?: {\r\n        minFamSize: number;\r\n        maxFamSize: number;\r\n        maxAmount: number;\r\n    } [];\r\n    typeLimits?: {\r\n        enableTypeTracking: boolean;\r\n        typeSizeAmount: {\r\n            minFamSize: number;\r\n            maxFamSize: number;\r\n            maxAmount: number;\r\n        } []\r\n    };\r\n    superTypeId?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { from, of, Observable, BehaviorSubject, combineLatest, throwError } from 'rxjs';\r\nimport { tap, catchError, concatMap, shareReplay } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport authConfig from '../../../auth.config';\r\nimport Auth0Client from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  loggedIn: boolean = null;\r\n\r\n  logOutClick = false;\r\n  private logOutClickSource = new BehaviorSubject(this.logOutClick);\r\n  currentLogOutClick = this.logOutClickSource.asObservable();\r\n\r\n  auth0Client = (from(createAuth0Client(authConfig)) as Observable<Auth0Client>).pipe(\r\n    shareReplay(1),\r\n    catchError(err => throwError(err))\r\n  );\r\n  isAuthenticated = this.auth0Client.pipe(\r\n    concatMap((client: Auth0Client) => from(client.isAuthenticated())),\r\n    tap(res => this.loggedIn = res)\r\n  );\r\n  handleRedirectCallback = this.auth0Client.pipe(\r\n    concatMap((client: Auth0Client) => from(client.handleRedirectCallback()))\r\n  );\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  getTokenSilently$(options?): Observable<string> {\r\n    return this.auth0Client.pipe(\r\n      concatMap((client: Auth0Client) => from(client.getTokenSilently(options)))\r\n    );\r\n  }\r\n\r\n  localAuthSetup() {\r\n    const checkAuth = this.isAuthenticated.pipe(\r\n      concatMap((loggedIn: boolean) => {\r\n        return of(loggedIn);\r\n      })\r\n    );\r\n    checkAuth.subscribe((response: { [key: string]: any } | boolean) => {\r\n      this.loggedIn = !!response;\r\n    });\r\n  }\r\n\r\n  login(redirectPath: string = `/orders`) {\r\n    this.auth0Client.subscribe((client: Auth0Client) => {\r\n      client.loginWithRedirect({\r\n        redirect_uri: `${window.location.origin}/callback`,\r\n        appState: { target: redirectPath }\r\n      });\r\n    });\r\n  }\r\n\r\n  handleAuthCallback() {\r\n    let targetRoute: string;\r\n    const authComplete = this.handleRedirectCallback.pipe(\r\n      tap(cbRes => {\r\n        targetRoute = cbRes.appState && cbRes.appState.target ? cbRes.appState.target : '/';\r\n      }),\r\n      concatMap(() => {\r\n        return combineLatest([\r\n          this.isAuthenticated\r\n        ]);\r\n      })\r\n    );\r\n    authComplete.subscribe(([loggedIn]) => {\r\n      this.router.navigate([targetRoute]);\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.auth0Client.subscribe((client: Auth0Client) => {\r\n      client.logout({\r\n        client_id: authConfig.client_id,\r\n        returnTo: `${window.location.origin}`\r\n      });\r\n    });\r\n  }\r\n\r\n  getLogOutClicked(): Observable<boolean> {\r\n    return this.currentLogOutClick;\r\n  }\r\n\r\n  logOutClicked() {\r\n    this.logOutClickSource.next(true);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TypeService } from './type.service';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { Type } from '../models/type.model';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductService } from './product.service';\r\nimport { Product } from '../models/product.model';\r\nimport { Shop } from '../models/shop.model';\r\nimport { ShopService } from './shop.service';\r\nimport { OrderService } from './order.service';\r\nimport { Order } from '../models/order.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  orders: Order[] = [];\r\n  products: Product[] = [];\r\n  shop: Shop = {_id: null, shop: []};\r\n  types: Type[] = [];\r\n\r\n  constructor(private snackBar: MatSnackBar, private orderService: OrderService, private productService: ProductService, \r\n              private shopService: ShopService, private typeService: TypeService) {\r\n                this.updateShop();\r\n                this.updateTypes();\r\n                this.updateProducts();\r\n                this.updateOrders();\r\n               }\r\n\r\n  private ordersSource = new BehaviorSubject(this.orders);\r\n  currentOrders = this.ordersSource.asObservable();\r\n\r\n  private productsSource = new BehaviorSubject(this.products);\r\n  currentProducts = this.productsSource.asObservable();\r\n\r\n  private shopSource = new BehaviorSubject(this.shop);\r\n  currentShop = this.shopSource.asObservable();\r\n\r\n  private typesSource = new BehaviorSubject(this.types);\r\n  currentTypes = this.typesSource.asObservable();\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    return this.currentOrders;\r\n  }\r\n\r\n  getOrderById(orderId: string) {\r\n    return this.currentOrders.pipe(map(\r\n      (orders: Order[]) => orders.find((order: Order) => order._id === orderId)\r\n    ));\r\n  }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.currentProducts;\r\n  }\r\n\r\n  getProductById(productId: string): Observable<Product> {\r\n    return this.currentProducts.pipe(map(\r\n      (products: Product[]) => products.find((product: Product) => product._id === productId)\r\n    ));\r\n  }\r\n\r\n  getShop(): Observable<Shop> {\r\n    return this.currentShop;\r\n  }\r\n\r\n  getTypes(): Observable<Type[]> {\r\n    return this.currentTypes;\r\n  }\r\n\r\n  getTypeById(typeId: string) {\r\n    return this.currentTypes.pipe(map(\r\n      (types: Type[]) => types.find((type: Type) => type._id === typeId)\r\n    ));\r\n  }\r\n\r\n  updateOrders() {\r\n    this.orderService.getOrders().subscribe((orders: Order[]) => {\r\n      this.ordersSource.next(orders);\r\n    });\r\n  }\r\n\r\n  updateProducts() {\r\n    this.productService.getProducts().subscribe((products: Product[]) => {\r\n      this.productsSource.next(products);\r\n    });\r\n  }\r\n\r\n  /** Removes any empty types from the shop and updates shop in db if empty types are removed.\r\n   *  Updates shopSource behavior subject.\r\n   *  @param shop the current shop observable.\r\n   */\r\n  updateShop() {\r\n    this.shopService.getShop().subscribe((shop: Shop) => {\r\n      shop = this.updateShopRemoveEmptyTypes(shop);\r\n      this.shopSource.next(shop);\r\n    });\r\n  }\r\n\r\n  /** Collects all type ids that have subtypes and then removes all types\r\n   *  from the passed in shop object if both (a) a type does not contain products\r\n   *  and (b) a type does not contain subTypes. Updates db if types are removed.\r\n   *  Called in updateShop().\r\n   *  @param shop the current shop observable.\r\n   *  @returns the shop with epmty types removed.\r\n   */\r\n  private updateShopRemoveEmptyTypes(shop: Shop): Shop {\r\n    const preFilterShopLength: number = shop.shop.length;\r\n    const superTypeIds: string[] = [];\r\n    shop.shop.forEach((subType: Type) => {\r\n      if (subType.superTypeId) {\r\n        superTypeIds.push(subType.superTypeId);\r\n      }\r\n    });\r\n    shop.shop.forEach((currentType: Type) => {\r\n      if (!currentType.products.length && !superTypeIds.includes(currentType._id)) {\r\n        shop.shop = shop.shop.filter((type: Type) => type._id !== currentType._id);\r\n      }\r\n    });\r\n    if (preFilterShopLength > shop.shop.length) {\r\n      this.updateShopService(shop);\r\n    }\r\n    return shop;\r\n  }\r\n\r\n  /** Updates the shop in the db.  Called in updateShopRemoveEmptTypes() when empty types\r\n   *  are removed from the passed in shop object.  If the db update fails, the shop view will\r\n   *  be misaligned with the db.  A refresh will align the view with the db, however.  May\r\n   *  improve this in the future.\r\n   *  @param shop the current shop observable.\r\n   */\r\n  private updateShopService(shop: Shop) {\r\n    this.shopService.updateShop(shop._id, shop).subscribe((response: any) => {\r\n      if (response.status === 200) {\r\n        this.snackBar.open('Empty type removed.', 'Dismiss', {\r\n          panelClass: ['green-snackbar']});\r\n      } else {\r\n        this.snackBar.open('Empty type failed to be removed. Please refresh screen.', 'Dismiss', {\r\n          panelClass: ['red-snackbar']});\r\n      }\r\n    });\r\n  }\r\n\r\n  updateTypes() {\r\n    this.typeService.getTypes().subscribe((types: Type[]) => {\r\n      this.typesSource.next(types);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { mergeMap, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return this.authService.getTokenSilently$().pipe(\r\n      mergeMap(token => {\r\n        const tokenReq = req.clone({\r\n          setHeaders: { Authorization: `Bearer ${token}` }\r\n        });\r\n        return next.handle(tokenReq);\r\n      }),\r\n      catchError(err => throwError(err))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Order } from '../models/order.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  url = environment.apiUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getOrderById(orderId: string) {\r\n    return this.httpClient.get<Order>(`${this.url}/orders/${orderId}`);\r\n  }\r\n\r\n  getOrders() {\r\n    return this.httpClient.get<Order[]>(`${this.url}/orders/`);\r\n  }\r\n\r\n  updateOrderReceived(orderId: string, received: object) {\r\n    return this.httpClient.put(`${this.url}/orders/update-received/${orderId}`, received);\r\n  }\r\n\r\n  deleteOrder(orderId: string) {\r\n    return this.httpClient.delete(`${this.url}/orders/delete/${orderId}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PantryPanelService {\r\n  panelOpenStates = new Map <string, boolean>([\r\n    ['product', false],\r\n    ['type', false],\r\n    ['shop', false]\r\n  ]);\r\n\r\n  private panelOpenSource = new BehaviorSubject(this.panelOpenStates);\r\n  currentPanelOpen = this.panelOpenSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  getPanelOpenStates(): Observable<Map<string, boolean>> {\r\n    return this.currentPanelOpen;\r\n  }\r\n\r\n  setPanelOpenStates(panel: string, state: boolean) {\r\n    this.panelOpenStates.set(panel, state);\r\n    this.panelOpenSource.next(this.panelOpenStates);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Product } from '../models/product.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  url = environment.apiUrl;\r\n  products: Product[] = [];\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getProductById(productId: string) {\r\n    return this.httpClient.get<Product>(`${this.url}/products/${productId}`);\r\n  }\r\n\r\n  getProducts() {\r\n    return this.httpClient.get<Product[]>(`${this.url}/products`);\r\n  }\r\n\r\n  addProduct(product: object) {\r\n    return this.httpClient.post(`${this.url}/products/add`, product);\r\n  }\r\n\r\n  updateProduct(productId: string, product: object) {\r\n    return this.httpClient.put(`${this.url}/products/update/${productId}`, product);\r\n  }\r\n\r\n  deleteProduct(productId: string) {\r\n    return this.httpClient.delete(`${this.url}/products/delete/${productId}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Shop } from '../models/shop.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { entriesIn } from 'lodash';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShopService {\r\n  url = environment.apiUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getShop() {\r\n    return this.httpClient.get<Shop>(`${this.url}/shop`).pipe(\r\n      map(result => result[0])\r\n    );\r\n  }\r\n\r\n  updateShop(shopId: string, shop: Shop) {\r\n    return this.httpClient.put<Shop>(`${this.url}/shop/update/${shopId}`, shop);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Type } from '../models/type.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TypeService {\r\n  url = environment.apiUrl;\r\n  types: Type[] = [];\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  addType(type: object) {\r\n    return this.httpClient.post(`${this.url}/types/add`, type);\r\n  }\r\n\r\n  deleteType(typeId: string) {\r\n    return this.httpClient.delete(`${this.url}/types/delete/${typeId}`);\r\n  }\r\n\r\n  getTypeById(typeId: string) {\r\n    return this.httpClient.get<Type>(`${this.url}/types/${typeId}`);\r\n  }\r\n\r\n  getTypes() {\r\n    return this.httpClient.get<Type[]>(`${this.url}/types`);\r\n  }\r\n\r\n  removeSuperTypeIdMany(removeIds: string[]) {\r\n    return this.httpClient.post(`${this.url}/types/remove-super-type-many`, removeIds);\r\n  }\r\n\r\n  updateSuperTypeIdMany(superTypeId: string, updateIds: string[]) {\r\n    return this.httpClient.post(`${this.url}/types/update-super-type-many/${superTypeId}`, updateIds);\r\n  }\r\n\r\n  updateType(typeId: string, type: object) {\r\n    return this.httpClient.put(`${this.url}/types/update/${typeId}`, type);\r\n  }\r\n\r\n}\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:4201/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}