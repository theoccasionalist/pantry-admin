{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///auth.config.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/callback/callback.component.html","webpack:///src/app/components/callback/callback.component.ts","webpack:///src/app/components/cart-print/cart-print.component.html","webpack:///src/app/components/cart-print/cart-print.component.ts","webpack:///src/app/components/cart/cart.component.html","webpack:///src/app/components/cart/cart.component.ts","webpack:///src/app/components/family-print/family-print.component.html","webpack:///src/app/components/family-print/family-print.component.ts","webpack:///src/app/components/family/family.component.html","webpack:///src/app/components/family/family.component.ts","webpack:///src/app/components/log-in/log-in.component.html","webpack:///src/app/components/log-in/log-in.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/order-delete-modal/order-delete-modal.component.html","webpack:///src/app/components/order-delete-modal/order-delete-modal.component.ts","webpack:///src/app/components/order-grid-buttons/order-grid-buttons.component.html","webpack:///src/app/components/order-grid-buttons/order-grid-buttons.component.ts","webpack:///src/app/components/order-overview/order-overview.component.html","webpack:///src/app/components/order-overview/order-overview.component.ts","webpack:///src/app/components/order/order.component.html","webpack:///src/app/components/order/order.component.ts","webpack:///src/app/components/orders/orders.component.html","webpack:///src/app/components/orders/orders.component.ts","webpack:///src/app/components/pantry-overview/pantry-overview.component.html","webpack:///src/app/components/pantry-overview/pantry-overview.component.ts","webpack:///src/app/components/product-add/product-add.component.html","webpack:///src/app/components/product-add/product-add.component.ts","webpack:///src/app/components/product-delete-modal/product-delete-modal.component.html","webpack:///src/app/components/product-delete-modal/product-delete-modal.component.ts","webpack:///src/app/components/product-edit/product-edit.component.html","webpack:///src/app/components/product-edit/product-edit.component.ts","webpack:///src/app/components/product-grid-buttons/product-grid-buttons.component.html","webpack:///src/app/components/product-grid-buttons/product-grid-buttons.component.ts","webpack:///src/app/components/products/products.component.html","webpack:///src/app/components/products/products.component.ts","webpack:///src/app/components/shop-edit/shop-edit.component.html","webpack:///src/app/components/shop-edit/shop-edit.component.ts","webpack:///src/app/components/shop/shop.component.html","webpack:///src/app/components/shop/shop.component.ts","webpack:///src/app/components/sub-type-edit/sub-type-edit.component.html","webpack:///src/app/components/sub-type-edit/sub-type-edit.component.ts","webpack:///src/app/components/type-add/type-add.component.html","webpack:///src/app/components/type-add/type-add.component.ts","webpack:///src/app/components/type-delete-modal/type-delete-modal.component.html","webpack:///src/app/components/type-delete-modal/type-delete-modal.component.ts","webpack:///src/app/components/type-edit/type-edit.component.ts","webpack:///src/app/components/type-grid-buttons/type-grid-buttons.component.html","webpack:///src/app/components/type-grid-buttons/type-grid-buttons.component.ts","webpack:///src/app/components/types/types.component.html","webpack:///src/app/components/types/types.component.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/models/product.model.ts","webpack:///src/app/models/type.model.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/interceptor.service.ts","webpack:///src/app/services/order.service.ts","webpack:///src/app/services/pantry-panel.service.ts","webpack:///src/app/services/product.service.ts","webpack:///src/app/services/shop.service.ts","webpack:///src/app/services/type.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","domain","client_id","audience","redirect_uri","window","location","origin","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","AppComponent","authService","title","localAuthSetup","duration","AppModule","CallbackComponent","handleAuthCallback","CartPrintComponent","columns","CartComponent","panelOpenState","cart","order","FamilyPrintComponent","FamilyComponent","family","pickUpDate","LogInComponent","router","navigate","NavbarComponent","OrderDeleteModalComponent","dataService","dialogRef","orderService","snackBar","sliceId","_id","slice","deleteOrder","subscribe","response","showResponseStatus","status","close","open","panelClass","updateOrders","OrderGridButtonsComponent","dialog","params","data","received","disableClose","width","OrderOverviewComponent","OrderComponent","activatedRoute","loading","subscription","add","pipe","getOrderById","rerouteOnEmptyOrder","sortProductsByName","sortTypesByName","unsubscribe","updateOrderReceived","undefined","Object","entries","length","constructor","update","forEach","typeInCart","products","sort","before","after","productName","trim","toLowerCase","typeName","OrdersComponent","columnDefs","headerName","field","comparator","firstChildren","secondChildren","noneComparator","firstInfants","secondInfants","filter","sortable","cellRendererFramework","defaultColDef","filterParams","suppressAndOrCondition","resizable","rowData","getOrders","orders","getFormattedFields","rowEntry","defineProperty","value","firstName","lastName","familySize","schoolChildren","infants","phoneNumber","emailAddress","referral","push","first","second","isNaN","PantryOverviewComponent","pantryPanelService","productPanelOpenState","shopPanelOpenState","typePanelOpenState","getPanelOpenStates","panelOpenStates","get","minMaxValidator","formGroup","minFamSize","maxFamSize","minMax","ProductAddComponent","formBuilder","productService","limitDeleted","product","productForm","required","points","school","infant","requiredError","prodSizeAmount","group","maxAmount","validator","index","removeAt","removeControl","addSizeAmount","addControl","valid","setProductValues","addProduct","updateProducts","updateShop","updateTypes","ProductDeleteModalComponent","deleteProduct","ProductEditComponent","inShop","getProductById","getShop","shop","rerouteOnEmptyProduct","setProdSizeAmountForm","setInShop","updateProduct","type","element","ProductGridButtonsComponent","ProductsComponent","firstPoints","secondPoints","pointsComparator","getTypes","getProducts","types","productToCheck","gridApi","api","setRowData","superTypeName","superTypeId","superType","hasTypeLimit","typeLimits","getProductTypeName","getProductSuperTypeName","getTypeLimitStatus","getInShopStatus","ShopEditComponent","shopService","initShop","setInShopSubTypes","setAvailableSuperTypes","setAvailableSubTypes","removeProductLessType","availableTypes","typesInShop","event","previousContainer","container","previousIndex","currentIndex","shopClone","typesClone","unwrapSubTypes","availableType","subTypes","productLessType","some","typeInShop","subTypesInShop","setInShopSubTypesHelper","subType","find","shopTypes","beforeType","afterType","shopType","beforeSubType","afterSubType","ShopComponent","setSubTypes","sortShop","currentTypes","currentType","beforeProduct","afterProduct","beforeSubProduct","afterSubProduct","SubTypeEditComponent","typeService","initComponentVariables","initDragDropArrays","initDragDropValues","possibleSubs","possibleSupers","superTypeToAdd","dropIntoSubsSetArrayValues","filterIneligibleSubTypes","newSuperType","typeToMove","dropIntoSupersSetArrayValues","superTypeToRemove","enableTypeTracking","ineligibleType","typeToCheck","emptyArray","newSubType","superTypeRemove","dragDropArray","getTypeIdsToUpdate","removeSuperTypeIdMany","getTypeIdsToRemove","updateSuperTypeIdMany","updateIds","remove","typedRemove","typedUpdate","typeIdsToRemove","updateObjects","idsToUpdate","TypeAddComponent","availableProducts","availableSubTypes","deletedOrMoved","limitPanelOpenState","newSubTypes","productsInType","typeEdit","typeForm","typeComment","typeLimitsFormOpen","initAvailableProducts","typeSizeAmount","unavailableProducts","unavailable","typeLimitsForm","setTypeValues","addType","migrateTypeSizeAmount","removeFromSuperType","updateType","addTypeLimits","dragDropCard","TypeDeleteModalComponent","deleteType","TypeEditComponent","getTypeById","rerouteOnEmptyType","initEditTypeCommentForm","initProductsInType","initEditTypeLimitsForm","setSuperTypeName","TypeGridButtonsComponent","TypesComponent","getSuperTypeName","AuthGuard","next","state","isAuthenticated","loggedIn","login","url","Product","Type","AuthService","logOutClick","logOutClickSource","currentLogOutClick","asObservable","auth0Client","err","client","res","handleRedirectCallback","options","getTokenSilently","checkAuth","redirectPath","loginWithRedirect","appState","target","targetRoute","authComplete","cbRes","logout","returnTo","DataService","ordersSource","currentOrders","productsSource","currentProducts","shopSource","currentShop","typesSource","orderId","productId","typeId","updateShopRemoveEmptyTypes","preFilterShopLength","superTypeIds","includes","updateShopService","InterceptorService","getTokenSilently$","token","tokenReq","clone","setHeaders","Authorization","handle","OrderService","httpClient","apiUrl","put","PantryPanelService","Map","panelOpenSource","currentPanelOpen","panel","set","ProductService","post","ShopService","result","shopId","TypeService","removeIds","environment","production","console","error"],"mappings":"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;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAA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AA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAKA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAMJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAMJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AA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AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIR;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AA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;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAuB,O;AAAA;;;qEAvE/C,sU,GAAA;AAAA;AAAA,c,EAAA,uM,EAAA,gO,GAEI,8Y,GAAA,qP,GACI,uH,IAAO,+F,IACP,6Z,GAAA,8N,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,kF,EAAA;AAAA;AAAA,c,EAAA,kM,EAAA,qN,GACI;AAAA;;AAAA;;;;;;OAAA,E,2GAAA,E,+GAAA,C;;iBAA+B,0E,IAC/B;AAAA;;AAAA;;;;;;OAAA,E,2GAAA,E,+GAAA,C;;iBAAgC,yE,IAEpC,qH,IACI,wH,IAAI,kK,IACJ,wH,IAAI,gK,IACJ,wH,IAAI,qM,IACJ,wH,IAAI,kK,IAGZ;AAAA;AAAA,oBAAyE,UAAzE;;AAA+C;;;;;AAA/C;AAAA,4N,GAAA,oX,GAAyE,wF,IAEzE,kJ,IACI,mH,GAAA;AAAA;AAAA,c,GAA0K;AAAA;AAlB7K;;AAAL,sBAAK,SAAL;;AAIkC;;AAA1B,uBAA0B,UAA1B;;AACsB;;AAAlB,uBAAkB,UAAlB;;AACkB;;AAAlB,uBAAkB,UAAlB;;AAY+C;;AAAnD,uBAAmD,UAAnD;AAA0I,O,EAAA;AAlBlJ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AACA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AASR;AAAA;;AAAA;AAAyE,O;AAAA;;;qEAtG7F;AAAA;;AAAA;;;;;;;;;;;OAAA,E,mGAAA,E,uGAAA,C;;wrBAGI,4I,IACI,kH,GAAA;AAAA;AAAA,c,GACA,kH,GAAA;AAAA;AAAA,c,GACA;AAAA;AAAA,oBAAoD,UAApD;;AAA0B;;;;;AAA1B;AAAA,4N,GAAA,oX,GAAoD,6E,IACpD,kH,GAAA;AAAA;AAAA,c,GACA,kH,GAAA;AAAA;AAAA,c,GAIJ,kK,IACI,kH,GAAA;AAAA;AAAA,c,GACA,kH,GAAA;AAAA;AAAA,c,GAIJ,+K,IACI,yY,GAAA,sP,GACI,uH,IACI,wmC,GAAA,svB,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,GACI,4H,GAAA,0K,GAAW,mF,IACX;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;;s0CACA,+G,GAAA;AAAA;AAAA,c,GAIZ,yH,IACA,+Y,GAAA,sP,GACI,gnC,GAAA,svB,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,GACI,4H,GAAA,4K,GAAW,4F,IACX;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;;w0CAMZ;AAAA;AAAA,oBACiF,UADjF;;AACA;;;;;AAAwC;;;;;AADxC;AAAA,oP,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,wJ,GAEI;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wHAAA,E,4HAAA,C;;;;;;WACI,+K,GAAA,2K,GAAiB,iG,IACjB,2L,GAAA,iL,GAAuB,8E,IAE3B,8X,GAAA,sP,GACI,qH,IACI,wH,IAAI,mK,IACJ,wH,IAAI,6I,IAGZ,8L,IACI,+Z,GAAA,sP,GACI,kJ,IAA6B,4F,IAC7B;AAAA;AAAA,oBAC0I,UAD1I;;AACmF;;;;;AADnF;AAAA,wP,GAAA,kN,EAAA,+N,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EACsC,0D,EADtC;AAAA;AAAA,c,EAAA,oU,EAAA,6oB,EAAA,sJ,GAEI,gH,GAAA;AAAA;AAAA,c,GAGR,iY,GAAA,uP,GACI,mJ,IAA6B,+F,IAC7B;AAAA;AAAA,oBACmI,UADnI;;AAC4E;;;;;AAD5E;AAAA,wP,GAAA,kN,EAAA,+N,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EACmC,0D,EADnC;AAAA;AAAA,c,EAAA,oU,EAAA,6oB,EAAA,sJ,GAEI,gH,GAAA;AAAA;AAAA,c,GAOhB;AAAA;AAAA,oBAC6E,UAD7E;;AACA;;;;;AAAsC;;;;;AADtC;AAAA,oP,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,wJ,GAEI;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wHAAA,E,4HAAA,C;;;;;;WACI,gL,GAAA,4K,GAAiB,oG,IACjB,4L,GAAA,kL,GAAuB,+E,IAEvB,8J,IAEI,gZ,GAAA,uP,GACI,sH,IACI,yH,IAAI,uN,IACJ,mH,GAAA;AAAA;AAAA,c,GACA,mH,GAAA;AAAA;AAAA,c,GACA,mH,GAAA;AAAA;AAAA,c,GAGR,mH,GAAA;AAAA;AAAA,c,GAEA,mH,GAAA;AAAA;AAAA,c,GAA+D;AAAA;AAvF7B,2BAAsB,SAAtB;;AAAlD,sBAAkD,SAAlD;;AAIc,4BAAiB,SAAjB;;AAAN,sBAAM,SAAN;;AACM,4BAAgB,SAAhB;;AAAN,sBAAM,UAAN;;AAEkD,6BAAiB,SAAjB;;AAAlD,uBAAkD,UAAlD;;AACkD,4BAAgB,SAAhB;;AAAlD,uBAAkD,UAAlD;;AAKsB,4BAAc,OAAd;;AAAtB,uBAAsB,UAAtB;;AACsB,qHAA+F,KAA/F;;AAAtB,uBAAsB,UAAtB;;AAS4B;;AAAhB,uBAAgB,UAAhB;;AAAA;;AACW;;AAAX,uBAAW,UAAX;;AAQY;;AAAhB,uBAAgB,UAAhB;;AAAA;;AAM2C,6BAAkC,sBAAlC;;AAAvD,uBAAuD,WAAvD;;AAgBkD;;AAAtC,6BAAqC,kBAArC;;AADA,wBACsC,WADtC,EACA,WADA;;AAA+E;;AAA/E,wBAA+E,WAA/E;;AAAA;;AAEoE,6BAAyC,kBAAzC;;AAAhE,wBAAgE,WAAhE;;AAM+B;;AAAnC,6BAAkC,eAAlC;;AADA,wBACmC,WADnC,EACA,WADA;;AAA+E;;AAA/E,wBAA+E,WAA/E;;AAAA;;AAEoE,6BAAsC,eAAtC;;AAAhE,wBAAgE,WAAhE;;AAOuC,6BAAgC,oBAAhC;;AAAvD,wBAAuD,WAAvD;;AAWwB,+DAAiD,cAAjD;;AAAJ,wBAAI,WAAJ;;AACI,mEAA4C,OAA5C;;AAAJ,wBAAI,WAAJ;;AACI,kEAA2C,OAA3C;;AAAJ,wBAAI,WAAJ;;AAGsE,8BAA2B,mBAA3B;;AAA9E,wBAA8E,WAA9E;;AAEoC,6BAA0B,mBAA1B;;AAApC,wBAAoC,WAApC;AAA8D,O,EAAA;AAAA;;AAvF9E;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAMQ;AAAA;;AAAA;;AAaA;;AAAA;;AAEQ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAMZ;;AAAA;;AACI;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAMZ;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAE2B;;AAAA;;AAE3B;;AAAA;;AAOI;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAKJ;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AASZ;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAE2B;;AAAA;;AAInB;;AAAA;AAAyC,O;AAAA;;;qEAlFzD,kH,GAAA;AAAA;AAAA,c,GAKA,kH,GAAA;AAAA;AAAA,c,GAA0F;AAAA;AALpD,2BAAe,QAAf;;AAAtC,sBAAsC,SAAtC;;AAKyE,4BAAgB,QAAhB;;AAAzE,sBAAyE,SAAzE;AAAyF,O,EAAA,I;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACHzF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgBaE,gB;AA2BX,gCAAsB1O,WAAtB,EAA0DsG,WAA1D,EAA8FnG,QAA9F,EACsBwM,WADtB,EAC0D/M,MAD1D,EAC0E;AAAA;;AADpD,aAAAI,WAAA,GAAAA,WAAA;AAAoC,aAAAsG,WAAA,GAAAA,WAAA;AAAoC,aAAAnG,QAAA,GAAAA,QAAA;AACxE,aAAAwM,WAAA,GAAAA,WAAA;AAAoC,aAAA/M,MAAA,GAAAA,MAAA;AA3B1D,aAAA+O,iBAAA,GAA+B,EAA/B;AACA,aAAAC,iBAAA,GAA4B,EAA5B;AAEA,aAAAC,cAAA,GAAiB,KAAjB;AACA,aAAA3G,MAAA,GAAS,KAAT;AACA,aAAA4G,mBAAA,GAAsB,KAAtB;AACA,aAAApN,OAAA,GAAU,IAAV;AACA,aAAAqN,WAAA,GAAsB,EAAtB;AAEA,aAAArJ,qBAAA,GAAwB,KAAxB;AACA,aAAAsJ,cAAA,GAA4B,EAA5B;AACA,aAAAjI,aAAA,GAAgB,yBAAhB;AAEA,aAAApF,YAAA,GAAe,IAAI,iDAAJ,EAAf;AAEA,aAAA+G,IAAA,GAAO,IAAI,uDAAJ,EAAP;AACA,aAAAuG,QAAA,GAAW,KAAX;AACA,aAAAC,QAAA,GAAW,IAAI,wDAAJ,CAAc;AACvB/L,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWwD,QAA/B,CADa;AAEvBwI,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAFU,SAAd,CAAX;AAMA,aAAAC,kBAAA,GAAqB,KAArB;AAI6E;;;;mCAElE;AAAA;;AACT,eAAKzN,YAAL,CAAkBC,GAAlB,CACE,2DAAc,CACZ,KAAK5B,WAAL,CAAiBkJ,WAAjB,EADY,EAEZ,KAAKlJ,WAAL,CAAiBiJ,QAAjB,EAFY,CAAd,EAGGzI,SAHH,CAGa,kBAAuB;AAAA;AAAA,gBAArBoC,QAAqB;AAAA,gBAAXuG,KAAW;;AAClC,mBAAI,CAACvG,QAAL,GAAgBA,QAAhB;AACA,mBAAI,CAACuG,KAAL,GAAaA,KAAb;;AACA,mBAAI,CAACkG,qBAAL;;AACA,mBAAI,CAAC3N,OAAL,GAAe,CAAC,OAAI,CAACA,OAArB;AACD,WARD,CADF;AAWD;;;sCAEa;AACZ,eAAKC,YAAL,CAAkBO,WAAlB;AACD;;;wCAEe;AACd,eAAKoN,cAAL,CAAoBlK,IAApB,CAAyB,KAAKkB,WAAL,CAAiBW,KAAjB,CAAuB;AAC9Cf,sBAAU,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWS,QAAZ,CAAL,CADkC;AAE9CR,sBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWQ,QAAhB,CAFkC;AAG9CO,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB;AAHmC,WAAvB,EAItB;AAAEQ,qBAAS,EAAE;AAAb,WAJsB,CAAzB;AAMD;;;yCAEgBC,K,EAAe;AAC9B,eAAKyH,cAAL,GAAsB,IAAtB;AACA,eAAKS,cAAL,CAAoBjI,QAApB,CAA6BD,KAA7B;;AACA,cAAI,CAAC,KAAKkI,cAAL,CAAoB/M,MAAzB,EAAiC;AAC/B,iBAAK2M,QAAL,CAAc5H,aAAd,CAA4B,gBAA5B;AACA,iBAAK8H,kBAAL,GAA0B,KAA1B;AACD;AACF;;;oCAEW1E,K,EAA+B;AACzC,eAAKmE,cAAL,GAAsB,IAAtB;AACAnE,eAAK,CAACC,iBAAN,KAA4BD,KAAK,CAACE,SAAlC,GACE,+EAAgBF,KAAK,CAACE,SAAN,CAAgBzJ,IAAhC,EAAsCuJ,KAAK,CAACG,aAA5C,EAA2DH,KAAK,CAACI,YAAjE,CADF,GAEE,iFAAkBJ,KAAK,CAACC,iBAAN,CAAwBxJ,IAA1C,EAAgDuJ,KAAK,CAACE,SAAN,CAAgBzJ,IAAhE,EAAsEuJ,KAAK,CAACG,aAA5E,EAA2FH,KAAK,CAACI,YAAjG,CAFF;AAGA,eAAK9I,kBAAL,CAAwB,KAAK2M,iBAA7B;AACA,eAAK3M,kBAAL,CAAwB,KAAKgN,cAA7B;AACD;;;gDAEuB;AAAA;;AACtB,cAAMO,mBAAmB,GAAc,EAAvC;AACA,eAAKpG,KAAL,CAAWzG,OAAX,CAAmB,UAAAgG,IAAI;AAAA,mBAAIA,IAAI,CAAC9F,QAAL,CAAcF,OAAd,CAAsB,UAAA+D,OAAO;AAAA,qBAAI8I,mBAAmB,CAACnK,IAApB,CAAyBqB,OAAzB,CAAJ;AAAA,aAA7B,CAAJ;AAAA,WAAvB;AACA,eAAK7D,QAAL,CAAcF,OAAd,CAAsB,UAAA+D,OAAO,EAAI;AAC/B,gBAAI,CAAC8I,mBAAmB,CAAClE,IAApB,CAAyB,UAAAmE,WAAW;AAAA,qBAAIA,WAAW,CAACnP,GAAZ,KAAoBoG,OAAO,CAACpG,GAAhC;AAAA,aAApC,CAAL,EAA+E;AAC7E,qBAAI,CAACsO,iBAAL,CAAuBvJ,IAAvB,CAA4BqB,OAA5B;AACD;AACF,WAJD;AAKA,eAAKzE,kBAAL,CAAwB,KAAK2M,iBAA7B;AACD;;;6CAEoB;AACnB,eAAKS,kBAAL,GAA0B,IAA1B;AACA,eAAKK,cAAL,GAAsB,IAAI,wDAAJ,CAAc,EAAd,CAAtB;AACA,eAAKjC,kBAAL,GAA0B,IAAI,0DAAJ,CAAgB,IAAhB,CAA1B;AACA,eAAKiC,cAAL,CAAoBjI,UAApB,CAA+B,oBAA/B,EAAqD,KAAKgG,kBAA1D;AACA,eAAK8B,cAAL,GAAsB,IAAI,wDAAJ,CAAc,EAAd,CAAtB;AACA,eAAK/H,aAAL;AACA,eAAKkI,cAAL,CAAoBjI,UAApB,CAA+B,gBAA/B,EAAiD,KAAK8H,cAAtD;AACA,eAAKJ,QAAL,CAAc1H,UAAd,CAAyB,gBAAzB,EAA2C,KAAKiI,cAAhD;AACD;;;wCAEe;AACd,eAAK7P,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;sCAEa;AAAA;;AACZ,cAAI,KAAKqP,QAAL,CAAczH,KAAlB,EAAyB;AACvB,iBAAKiI,aAAL;;AACA,gBAAI,CAAC,KAAKT,QAAV,EAAoB;AAClB,mBAAKtC,WAAL,CAAiBgD,OAAjB,CAAyB,KAAKjH,IAA9B,EAAoClI,SAApC,CAA8C,UAACC,QAAD;AAAA,uBAAmB,OAAI,CAACC,kBAAL,CAAwBD,QAAQ,CAACE,MAAjC,CAAnB;AAAA,eAA9C;AACD,aAFD,MAEO;AACL,mBAAKiP,qBAAL;AACA,mBAAKC,mBAAL;AACA,mBAAKlD,WAAL,CAAiBmD,UAAjB,CAA4B,KAAKpH,IAAL,CAAUrI,GAAtC,EAA2C,KAAKqI,IAAhD,EAAsDlI,SAAtD,CAAgE,UAACC,QAAD,EAAmB;AACjF,uBAAI,CAACC,kBAAL,CAAwBD,QAAQ,CAACE,MAAjC;;AACA,uBAAI,CAACX,WAAL,CAAiB8H,WAAjB;;AACA,uBAAI,CAAC9H,WAAL,CAAiB6H,UAAjB;;AACA,uBAAI,CAAC7H,WAAL,CAAiB4H,cAAjB;AACD,eALD;AAMD;AACF;;AACD,eAAKhI,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;8CAEqB;AACpB,cAAI,KAAK6I,IAAL,CAAUe,WAAV,KAA0B,CAAC,KAAKf,IAAL,CAAUkB,UAAX,IAA0B,KAAKlB,IAAL,CAAUkB,UAAV,IAAwB,CAAC,KAAKlB,IAAL,CAAUkB,UAAV,CAAqB4D,kBAAlG,CAAJ,EAA4H;AAC1H,iBAAK9E,IAAL,CAAUe,WAAV,GAAwBrH,SAAxB;AACD;AACF;;;wCAEe;AACd,eAAKsG,IAAL,CAAUvF,QAAV,GAAqB,KAAK+L,QAAL,CAAcnJ,GAAd,CAAkB,UAAlB,EAA8BpB,KAAnD;AACA,eAAKuK,QAAL,CAAcnJ,GAAd,CAAkB,aAAlB,EAAiCpB,KAAjC,CAAuC1B,IAAvC,OAAkD,EAAlD,GACE,KAAKyF,IAAL,CAAUyG,WAAV,GAAwB,KAAKD,QAAL,CAAcnJ,GAAd,CAAkB,aAAlB,EAAiCpB,KAD3D,GAEE,KAAK+D,IAAL,CAAUyG,WAAV,GAAwB/M,SAF1B;AAGA,eAAK4M,cAAL,CAAoBzM,MAApB,GACE,KAAKmG,IAAL,CAAU9F,QAAV,GAAqB,KAAKoM,cAD5B,GAEE,KAAKtG,IAAL,CAAU9F,QAAV,GAAqB,EAFvB;;AAGA,cAAI,KAAK6M,cAAL,IAAuB,KAAKH,cAAL,CAAoB/M,MAA/C,EAAuD;AACrD,gBAAMwN,aAAa,GAAG;AACpBnG,wBAAU,EAAE;AACV4D,kCAAkB,EAAE,KAAKiC,cAAL,CAAoB1J,GAApB,CAAwB,oBAAxB,EAA8CpB,KADxD;AAEV2K,8BAAc,EAAG,KAAKG,cAAL,CAAoB1J,GAApB,CAAwB,gBAAxB,EAA0CpB;AAFjD;AADQ,aAAtB;AAMA,iBAAK+D,IAAL,CAAUkB,UAAV,GAAuBmG,aAAa,CAACnG,UAArC;AACD,WARD,MAQO;AACL,iBAAKlB,IAAL,CAAUkB,UAAV,GAAuBxH,SAAvB;AACD;AACF;;;2CAEkBzB,M,EAAa;AAC9B,cAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB,iBAAKR,QAAL,CAAcU,IAAd,WAAsB,KAAK6H,IAAL,CAAUvF,QAAhC,6BAAkE,SAAlE,EAA6E;AAC3ErC,wBAAU,EAAE,CAAC,gBAAD;AAD+D,aAA7E;AAGD,WAJD,MAIO;AACL,iBAAKX,QAAL,CAAcU,IAAd,WAAsB,KAAK6H,IAAL,CAAUvF,QAAhC,yBAA8D,SAA9D,EAAyE;AACvErC,wBAAU,EAAE,CAAC,cAAD;AAD2D,aAAzE;AAGD;;AACD,eAAKd,WAAL,CAAiB8H,WAAjB;AACA,eAAK9H,WAAL,CAAiB4H,cAAjB;AACA,eAAK5H,WAAL,CAAiB6H,UAAjB;AACD;;;2CAEkBmI,Y,EAAyB;AAC1CA,sBAAY,CAACnN,IAAb,CAAkB,UAACC,MAAD,EAASC,KAAT;AAAA,mBAAmBD,MAAM,CAACE,WAAP,CAAmBC,IAAnB,GAA0BC,WAA1B,KAA0CH,KAAK,CAACC,WAAN,CAAkBC,IAAlB,GAAyBC,WAAzB,EAA1C,GAAmF,CAAnF,GAAuF,CAAC,CAA3G;AAAA,WAAlB;AACD,S,CAED;AACA;;;;gDACgC;AAC9B,cAAI,KAAKwF,IAAL,CAAU4G,cAAd,EAA8B;AAC5B,gBAAMS,aAAa,GAAG;AACpBnG,wBAAU,EAAE;AACV4D,kCAAkB,EAAE,IADV;AAEV8B,8BAAc,EAAG,KAAK5G,IAAL,CAAU4G;AAFjB;AADQ,aAAtB;AAMA,iBAAK5G,IAAL,CAAUkB,UAAV,GAAuBmG,aAAa,CAACnG,UAArC;AACA,iBAAKlB,IAAL,CAAU4G,cAAV,GAA2BlN,SAA3B;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECrMH,oX,GAAA,oP,GACI,mH,IAAG,0P,IAGP,8I,IAAuB,iG,IACvB,yH,IACI;AAAA;AAAA,oBAAoD,UAApD;;AAA0B;;;;;AAA1B;AAAA,4N,GAAA,mX,GAAoD,6E,IACpD;AAAA;AAAA,oBAAqD,UAArD;;AAA0B;;;;;AAA1B;AAAA,4N,GAAA,oX,GAAqD,8E,IAAO,I,EAAA;AAAA;AAPhE;;AAAA;;AACO;;AAAA;;AAKH;AAAA;;AAAA;;AACA;AAAA;;AAAA;AAAqD,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACOzD;AAAA;;;AAAA;AAAA;AAAA;;QAAa6N,wB;AAEX,wCAAmBhQ,SAAnB,EAAuGyI,IAAvG,EACoB1I,WADpB,EACsDJ,MADtD,EAC8EO,QAD9E,EAEoBwM,WAFpB,EAE8C;AAAA;;AAF3B,aAAA1M,SAAA,GAAAA,SAAA;AAAoF,aAAAyI,IAAA,GAAAA,IAAA;AACnF,aAAA1I,WAAA,GAAAA,WAAA;AAAkC,aAAAJ,MAAA,GAAAA,MAAA;AAAwB,aAAAO,QAAA,GAAAA,QAAA;AAC1D,aAAAwM,WAAA,GAAAA,WAAA;AAA6B;;;;mCAEtC,CAAE;;;qCAEQ;AAAA;;AACnB,eAAKA,WAAL,CAAiBuD,UAAjB,CAA4B,KAAKxH,IAAL,CAAUrI,GAAtC,EAA2CG,SAA3C,CAAqD,UAACC,QAAD;AAAA,mBAAmB,OAAI,CAACC,kBAAL,CAAwBD,QAAQ,CAACE,MAAjC,CAAnB;AAAA,WAArD;AACD;;;wCAEe;AACd,eAAKV,SAAL,CAAeW,KAAf;AACA,eAAKhB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;yCAEgB;AACf,eAAKqQ,UAAL;AACA,eAAKjQ,SAAL,CAAeW,KAAf;AACA,eAAKhB,MAAL,CAAYC,QAAZ,CAAqB,WAArB;AACD;;;2CAE0Bc,M,EAAgB;AACzC,cAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB,iBAAKR,QAAL,CAAcU,IAAd,WAAsB,KAAK6H,IAAL,CAAUvF,QAAhC,6BAAkE,SAAlE,EAA6E;AAC3ErC,wBAAU,EAAE,CAAC,gBAAD;AAD+D,aAA7E;AAGD,WAJD,MAIO;AACL,iBAAKX,QAAL,CAAcU,IAAd,WAAsB,KAAK6H,IAAL,CAAUvF,QAAhC,yBAA8D,SAA9D,EAAyE;AACvErC,wBAAU,EAAE,CAAC,cAAD;AAD2D,aAAzE;AAGD;;AACD,eAAKd,WAAL,CAAiB8H,WAAjB;AACA,eAAK9H,WAAL,CAAiB6H,UAAjB;AACA,eAAK7H,WAAL,CAAiB4H,cAAjB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qEHlDH,mK,IACI,0gB,GAAA,siB,GAAA;AAAA;AAAA,O,EAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAa,O;AAAA;;;qEAQT,gJ,IAA2C,qF,IAAW,I,EAAA,I;AAAA;;;qEACtD,gJ,IAA0C,mF,IAAS,I,EAAA,I;AAAA;;;qEAEnD;AAAA;AAAA,oBAAiG,UAAjG;;AAA0B;;;;;AAA1B;AAAA,4N,GAAA;AAAA;AAAA,c,GAAiG,yF,IAAkB;AAAA;AAA/C,4BAA4B,SAA5B,CAA4B,KAA5B;;AAApE,sBAAoE,SAApE;AAAgG,O,EAAA;AAAhG;AAAA;;AAAA;AAAiG,O;AAAA;;;qEACjG;AAAA;AAAA,oBAA0I,UAA1I;;AAA0B;;;;;AAA1B;AAAA,4N,GAAA;AAAA;AAAA,c,GAA0I,2F,IAAoB;AAAA;AAA3F,4EAAsE,SAAtE,CAAsE,KAAtE;;AAAnE,sBAAmE,SAAnE;AAAyI,O,EAAA;AAAzI;AAAA;;AAAA;AAA0I,O;AAAA;;;qEAK1I,0X,GAAA,qP,GAAqC,4F,IAAqB,I,EAAA;AAA1D;;AAAA;AAAqC,O;AAAA;;;qEACrC,0X,GAAA,qP,GAAsH,0E,IAAkC,I,EAAA;AAAA;AAAxJ;;AAAA;;AAAsH;;AAAA;AAAkC,O;AAAA;;;qEAU5I,iL,GAAA,iK,GAAiE,6E,IAAiB,I,EAAA;AAAA;;AAAlF;;AAAA;;AAAiE;;AAAA;AAAiB,O;AAAA;;;qEA+BlF,qgB,GAAA,gP,EAAA,quB,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,qP,GAAkH,0E,IAAuB,4E,IAAA,I,EAAA;AAAzI;;AAAA;;AAAA;;AAAA;;AAAkH;;AAAA;AAAuB,O;AAAA;;;qEAOzI,qgB,GAAA,gP,EAAA,quB,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,qP,GAA+G,0E,IAAuB,4E,IAAA,I,EAAA;AAAtI;;AAAA;;AAAA;;AAAA;;AAA+G;;AAAA;AAAuB,O;AAAA;;;qEAkBlI,uH,IAAsD,mJ,IAAyE,I,EAAA,I;AAAA;;;qEAC/H,uH,IAAiD,0L,IAAgH,I,EAAA,I;AAAA;;;qEACjK,uH,IAAgD,iN,IAAuI,I,EAAA,I;AAAA;;;qEAG/L;AAAA;AAAA,oBAA0G,UAA1G;;AAA+C;;;;;AAA/C;AAAA,4N,GAAA,mX,GAA0G,oF,IAAa,I,EAAA;AAAvH;AAAA;;AAAA;AAA0G,O;AAAA;;;qEAuCtF,iL,GAAA,kK,GAA8G,6E,IAAiB,I,EAAA;AAAA;;AAA/H;;AAAA;;AAA8G;;AAAA;AAAiB,O;AAAA;;;qEAe/H,iL,GAAA,kK,GAA8G,6E,IAAiB,I,EAAA;AAAA;;AAA/H;;AAAA;;AAA8G;;AAAA;AAAiB,O;AAAA;;;qEAqB/H,iL,GAAA,kK,GAA6G,6E,IAAiB,I,EAAA;AAAA;;AAA9H;;AAAA;;AAA6G;;AAAA;AAAiB,O;AAAA;;;qEAGlI,iL,GAAA,6J,GAA0F,qI,IAA2D,I,EAAA;AAArJ;;AAAA;AAA0F,O;AAAA;;;qEA1DlG,4mB,GAAA;AAAA;AAAA,c,EAAA,uM,EAAA,gO,EAAA,qP,GACI,wH,GAAA;AAAA;AAAA,c,EAAA,uM,EAAA,gO,GACI,yJ,IACI,kJ,IACI;AAAA;AAAA,oBAAwD,UAAxD;;AAA0B;;;;;AAA1B;AAAA,4N,GAAA,oX,GAAwD,mF,IAE5D,wmC,GAAA,svB,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,GACA,4H,GAAA,4K,GAAW,6F,IACX;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,uGAAA,E,2GAAA,C;;;;;;;;2dACI;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IAE1B,iH,GAAA;AAAA;AAAA,c,GAEA,wmC,GAAA,svB,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,GACA,4H,GAAA,4K,GAAW,6F,IACX;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,uGAAA,E,2GAAA,C;;;;;;;;2dACI;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IAE1B,iH,GAAA;AAAA;AAAA,c,GAEA,ymC,GAAA,uvB,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,GACA,6H,GAAA,6K,GAAW,oF,IACX;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,uGAAA,E,2GAAA,C;;;;;;;;2dACI;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAsB,wE,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAuB,yE,IACvB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAuB,yE,IACvB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAuB,yE,IACvB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAuB,yE,IACvB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAuB,yE,IACvB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,qGAAA,E,yGAAA,C;;iBAAuB,yE,IAE3B,iH,GAAA;AAAA;AAAA,c,GAGJ,oH,GAAA;AAAA;AAAA,c,GAA0F;AAAA;AA1DyC;;AAA3I,sBAA2I,SAA3I;;AACkB,0BAAmB,QAAnB,CAAmB,KAAnB;;AAAd,sBAAc,SAAd;;AAO6B;;AAArB,uBAAqB,UAArB;;AAAA;;AACgB;;AAAZ,uBAAY,UAAZ;;AACY;;AAAZ,uBAAY,UAAZ;;AACY;;AAAZ,uBAAY,UAAZ;;AACY;;AAAZ,uBAAY,UAAZ;;AACY;;AAAZ,uBAAY,WAAZ;;AACY;;AAAZ,uBAAY,WAAZ;;AACY;;AAAZ,uBAAY,WAAZ;;AACY;;AAAZ,uBAAY,WAAZ;;AACY;;AAAZ,uBAAY,WAAZ;;AAEO;;AAAX,uBAAW,WAAX;;AAIqB;;AAArB,uBAAqB,WAArB;;AAAA;;AACgB;;AAAZ,uBAAY,WAAZ;;AACY;;AAAZ,uBAAY,WAAZ;;AACY;;AAAZ,uBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AAEO;;AAAX,wBAAW,WAAX;;AAIqB;;AAArB,wBAAqB,WAArB;;AAAA;;AACgB;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AACY;;AAAZ,wBAAY,WAAZ;;AAEO;;AAAX,wBAAW,WAAX;;AAGO;;AAAX,wBAAW,WAAX;AAAyF,O,EAAA;AA1DjG;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIgB;AAAA;;AAAA;;AAEJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;A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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default {\r\n    domain: 'snowy-pond-4495.us.auth0.com',\r\n    client_id: 'jfGPTHVGqOK5lcd0k6vKCK8lnjdRkd4O',\r\n    audience: 'https://bsfp-volunteer-test.herokuapp.com/api',\r\n    redirect_uri: `${window.location.origin}/callback`\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PantryOverviewComponent } from './components/pantry-overview/pantry-overview.component';\r\nimport { OrderOverviewComponent } from './components/order-overview/order-overview.component';\r\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\r\nimport { ProductAddComponent } from './components/product-add/product-add.component';\r\nimport { TypeAddComponent } from './components/type-add/type-add.component';\r\nimport { TypeEditComponent } from './components/type-edit/type-edit.component';\r\nimport { SubTypeEditComponent } from './components/sub-type-edit/sub-type-edit.component';\r\nimport { ShopEditComponent } from './components/shop-edit/shop-edit.component';\r\nimport { OrderComponent } from './components/order/order.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { LogInComponent } from './components/log-in/log-in.component';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { InterceptorService } from './services/interceptor.service';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'callback', component: CallbackComponent},\r\n  {path: 'log-in', component: LogInComponent},\r\n  {path: 'orders', component: OrderOverviewComponent, canActivate: [AuthGuard]},\r\n  {path: 'order/:id', component: OrderComponent, canActivate: [AuthGuard]},\r\n  {path: 'pantry', component: PantryOverviewComponent, canActivate: [AuthGuard]},\r\n  {path: 'product', component: ProductAddComponent, canActivate: [AuthGuard]},\r\n  {path: 'product/:id', component: ProductEditComponent, canActivate: [AuthGuard]},\r\n  {path: 'shop', component: ShopEditComponent, canActivate: [AuthGuard]},\r\n  {path: 'sub-types', component: SubTypeEditComponent, canActivate: [AuthGuard]},\r\n  {path: 'type', component: TypeAddComponent, canActivate: [AuthGuard]},\r\n  {path: 'type/:id', component: TypeEditComponent, canActivate: [AuthGuard]},\r\n  {path: '', redirectTo: 'log-in', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: InterceptorService,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'front-end';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.localAuthSetup();\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {NgxPrintModule} from 'ngx-print';\r\nimport { TypesComponent } from './components/types/types.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { OrderOverviewComponent } from './components/order-overview/order-overview.component';\r\nimport { PantryOverviewComponent } from './components/pantry-overview/pantry-overview.component';\r\nimport { ProductsComponent } from './components/products/products.component';\r\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\r\nimport { ProductAddComponent } from './components/product-add/product-add.component';\r\nimport { TypeAddComponent } from './components/type-add/type-add.component';\r\nimport { TypeEditComponent } from './components/type-edit/type-edit.component';\r\nimport { SubTypeEditComponent } from './components/sub-type-edit/sub-type-edit.component';\r\nimport { ShopComponent } from './components/shop/shop.component';\r\nimport { ShopEditComponent } from './components/shop-edit/shop-edit.component';\r\nimport { ProductGridButtonsComponent } from './components/product-grid-buttons/product-grid-buttons.component';\r\nimport { TypeGridButtonsComponent } from './components/type-grid-buttons/type-grid-buttons.component';\r\nimport { ProductDeleteModalComponent } from './components/product-delete-modal/product-delete-modal.component';\r\nimport { TypeDeleteModalComponent } from './components/type-delete-modal/type-delete-modal.component';\r\nimport { OrdersComponent } from './components/orders/orders.component';\r\nimport { OrderGridButtonsComponent } from './components/order-grid-buttons/order-grid-buttons.component';\r\nimport { OrderComponent } from './components/order/order.component';\r\nimport { CartComponent } from './components/cart/cart.component';\r\nimport { FamilyComponent } from './components/family/family.component';\r\nimport { FamilyPrintComponent } from './components/family-print/family-print.component';\r\nimport { CartPrintComponent } from './components/cart-print/cart-print.component';\r\nimport { OrderDeleteModalComponent } from './components/order-delete-modal/order-delete-modal.component';\r\nimport { LogInComponent } from './components/log-in/log-in.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TypesComponent,\r\n    NavbarComponent,\r\n    OrderOverviewComponent,\r\n    PantryOverviewComponent,\r\n    ProductsComponent,\r\n    ProductEditComponent,\r\n    ProductAddComponent,\r\n    TypeAddComponent,\r\n    TypeEditComponent,\r\n    SubTypeEditComponent,\r\n    ShopComponent,\r\n    ShopEditComponent,\r\n    ProductGridButtonsComponent,\r\n    TypeGridButtonsComponent,\r\n    ProductDeleteModalComponent,\r\n    TypeDeleteModalComponent,\r\n    OrdersComponent,\r\n    OrderGridButtonsComponent,\r\n    OrderComponent,\r\n    CartComponent,\r\n    FamilyComponent,\r\n    FamilyPrintComponent,\r\n    CartPrintComponent,\r\n    OrderDeleteModalComponent,\r\n    LogInComponent,\r\n    CallbackComponent,\r\n  ],\r\n  imports: [\r\n    AgGridModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    DragDropModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatExpansionModule,\r\n    MatOptionModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    NgxPrintModule,\r\n    ReactiveFormsModule,\r\n    ScrollingModule,\r\n  ],\r\n  entryComponents: [\r\n    OrderDeleteModalComponent,\r\n    OrderGridButtonsComponent,\r\n    ProductDeleteModalComponent,\r\n    ProductGridButtonsComponent,\r\n    TypeDeleteModalComponent,\r\n    TypeGridButtonsComponent\r\n  ],\r\n  providers: [\r\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 2000}}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<mat-spinner></mat-spinner>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.css']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.handleAuthCallback();\r\n  }\r\n\r\n}\r\n","<div class=\"flex-container\">\r\n    <div *ngFor=\"let type of order.cart\">\r\n        <table class=\"no-border\">\r\n            <tr class=\"no-border\"><td class=\"no-border\">\r\n                <mat-toolbar class=\"items-toolbar top-table\">{{type.typeName}}</mat-toolbar>\r\n                <table mat-table [dataSource]=\"type.products\">\r\n                    <ng-container matColumnDef=\"column1\">\r\n                        <th class=\"half\" mat-header-cell *matHeaderCellDef>Product</th>\r\n                        <td class=\"half\" mat-cell *matCellDef=\"let product\"><div>{{product.productName}}</div></td>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!type.typeAmountReceived\" matColumnDef=\"column2\">\r\n                        <th mat-header-cell *matHeaderCellDef><span class=\"margin-left\">Amount</span></th>\r\n                        <td mat-cell *matCellDef=\"let product\"><span class=\"margin-left\">{{product.amount}}</span></td>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"type.typeAmountReceived\" matColumnDef=\"column2\">\r\n                        <th mat-header-cell *matHeaderCellDef><span class=\"margin-left\">{{'Amount Received: ' + type.typeAmountReceived}}</span></th>\r\n                        <td mat-cell *matCellDef=\"let product\"><span class=\"margin-left\">Requested</span></td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\r\n                </table>\r\n                <div class=\"items-toolbar bottom-table\">\r\n                    <span>{{'Family: ' + order.family.lastName}}</span>\r\n                    <span>{{' Order Id: ' + sliceId}}</span>\r\n                </div>\r\n            </td></tr>\r\n        </table>\r\n    </div>    \r\n</div>\r\n   ","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Order } from 'src/app/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-cart-print',\r\n  templateUrl: './cart-print.component.html',\r\n  styleUrls: ['./cart-print.component.css']\r\n})\r\nexport class CartPrintComponent implements OnInit {\r\n  columns: string[] = ['column1', 'column2'];\r\n  @Input() order: Order;\r\n  @Input() sliceId: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-expansion-panel (opened)=\"panelOpenState=true\" (closed)=\"panelOpenState=false\" [expanded]=\"panelOpenState\">\r\n    <mat-expansion-panel-header>\r\n        <mat-panel-title>Cart</mat-panel-title>\r\n        <mat-panel-description>{{panelOpenState ? 'close' : 'open'}}</mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <div class=\"flex-container\">\r\n        <div  *ngFor=\"let type of cart\">\r\n            <div class=\"margin-left\">\r\n                <mat-toolbar class=\"items-toolbar\">{{type.typeName}}</mat-toolbar>\r\n                <table mat-table [dataSource]=\"type.products\">\r\n                    <ng-container matColumnDef=\"column1\">\r\n                        <th mat-header-cell *matHeaderCellDef>Name</th>\r\n                        <td mat-cell *matCellDef=\"let product\">{{product.productName}}</td>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!type.typeAmountReceived\" matColumnDef=\"column2\">\r\n                        <th mat-header-cell *matHeaderCellDef>Amount</th>\r\n                        <td mat-cell *matCellDef=\"let product\">{{product.amount}}</td>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"type.typeAmountReceived\" matColumnDef=\"column2\">\r\n                        <th mat-header-cell *matHeaderCellDef>{{'Total Amount Received: ' + type.typeAmountReceived}}</th>\r\n                        <td mat-cell *matCellDef=\"let product\">Requested</td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\r\n                </table>\r\n                <div class=\"items-toolbar bottom-table\"></div>\r\n            </div>\r\n        </div>    \r\n    </div>   \r\n    <mat-action-row (click)=\"panelOpenState = false\"></mat-action-row> \r\n</mat-expansion-panel>   \r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\nimport { Order } from 'src/app/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit {\r\n  cart: CartItemsByType[];\r\n  columns: string[] = ['column1', 'column2'];\r\n  @Input() order: Order;\r\n  panelOpenState = true;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.cart = this.order.cart;\r\n  }\r\n}\r\n","<div class=\"info-header\">Contact</div>   \r\n<mat-card>                \r\n    <div id=\"contact-inner-grid\">\r\n        <div>\r\n            <div class=\"info info-label\">First Name:</div>\r\n            <div class=\"info info-label\">Last Name:</div>\r\n            <div class=\"info info-label\">Zip Code:</div>\r\n            <div class=\"info info-label\">Phone Number:</div>\r\n            <div class=\"info info-label\">Email Address:</div>\r\n        </div>\r\n        <div>\r\n            <div class=\"info\">{{order.family.firstName}}</div>\r\n            <div class=\"info\">{{order.family.lastName}}</div>\r\n            <div class=\"info\">{{order.family.zipCode}}</div>\r\n            <div class=\"info\">{{order.family.phoneNumber}}</div>\r\n            <div class=\"info\">{{order.family.emailAddress ? order.family.emailAddress : 'Not Provided' }}</div>\r\n        </div>\r\n    </div>        \r\n</mat-card>\r\n<div id=\"house-pick-up-grid\">\r\n    <div>\r\n        <header class=\"info-header\">Household</header>   \r\n        <mat-card>\r\n            <div id=\"household-inner-grid\">   \r\n                <div>\r\n                    <div class=\"info\">Family Size:</div>\r\n                    <div class=\"info\">School Children:</div>\r\n                    <div class=\"info\">Infants:</div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"info\">{{order.family.familySize}}</div>\r\n                    <div class=\"info\">{{order.family.schoolChildren ? order.family.schoolChildren : 'None' }}</div>\r\n                    <div class=\"info\">{{order.family.infants ? order.family.infants : 'None'}}</div>\r\n                </div>\r\n            </div>    \r\n        </mat-card>    \r\n    </div>\r\n    <div>\r\n        <header class=\"info-header\">Pick Up</header>   \r\n        <mat-card>\r\n            <div id=\"pick-up-inner-grid\">   \r\n                <div>\r\n                    <div class=\"info\">Date:</div>\r\n                    <div class=\"info\">Location:</div>\r\n                    <div class=\"info\">Order Id:</div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"info\">{{order.pickUpDate}}</div>\r\n                    <div class=\"info\">{{order.family.referral ? 'CELC' : 'Broad St.' }}</div>\r\n                    <div class=\"info\">{{sliceId}}</div>\r\n                </div>\r\n            </div>    \r\n        </mat-card>\r\n    </div>     \r\n</div> \r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Order } from 'src/app/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-family-print',\r\n  templateUrl: './family-print.component.html',\r\n  styleUrls: ['./family-print.component.css']\r\n})\r\nexport class FamilyPrintComponent implements OnInit {\r\n  @Input() order: Order;\r\n  @Input() sliceId: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-expansion-panel (opened)=\"panelOpenState=true\" (closed)=\"panelOpenState=false\" [expanded]=\"panelOpenState\">\r\n    <mat-expansion-panel-header>\r\n        <mat-panel-title>Guest and Pick Up Information</mat-panel-title>\r\n        <mat-panel-description>{{panelOpenState ? 'close' : 'open'}}</mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <mat-card id=\"info-outer-grid\">\r\n        <div>\r\n            <div class=\"info-header\">Contact</div>   \r\n            <mat-card class=\"info-card\">                \r\n                <div id=\"contact-inner-grid\">\r\n                    <div>\r\n                        <div class=\"info info-label\">First Name:</div>\r\n                        <div class=\"info info-label\">Last Name:</div>\r\n                        <div class=\"info info-label\">Zip Code:</div>\r\n                        <div class=\"info info-label\">Phone Number:</div>\r\n                        <div class=\"info info-label\">Email Address:</div>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"info\">{{family.firstName}}</div>\r\n                        <div class=\"info\">{{family.lastName}}</div>\r\n                        <div class=\"info\">{{family.zipCode}}</div>\r\n                        <div class=\"info\">{{family.phoneNumber}}</div>\r\n                        <div class=\"info\">{{family.emailAddress ? family.emailAddress : 'Not Provided' }}</div>\r\n                    </div>\r\n                </div>        \r\n            </mat-card>\r\n        </div>    \r\n        <div>\r\n            <div class=\"info-header\">Household</div>   \r\n            <mat-card class=\"info-card\">\r\n                <div id=\"household-inner-grid\">   \r\n                    <div>\r\n                        <div class=\"info info-label\">Family Size:</div>\r\n                        <div class=\"info info-label\">School Children:</div>\r\n                        <div class=\"info info-label\">Infants:</div>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"info\">{{family.familySize}}</div>\r\n                        <div class=\"info\">{{family.schoolChildren ? family.schoolChildren : 'None' }}</div>\r\n                        <div class=\"info\">{{family.infants ? family.infants : 'None'}}</div>\r\n                    </div>\r\n                </div>    \r\n            </mat-card>    \r\n        </div>\r\n        <div>\r\n            <div class=\"info-header\">Pick Up</div>   \r\n            <mat-card class=\"info-card\">\r\n                <div id=\"pick-up-inner-grid\">   \r\n                    <div>\r\n                        <div class=\"info info-label\">Date:</div>\r\n                        <div class=\"info info-label\">Location:</div>\r\n                        <div class=\"info info-label\">Order Id:</div>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"info\">{{pickUpDate}}</div>\r\n                        <div class=\"info\">{{family.referral ? 'CELC' : 'Broad St.' }}</div>\r\n                        <div class=\"info\">{{sliceId}}</div>\r\n                    </div>\r\n                </div>    \r\n            </mat-card>    \r\n        </div>      \r\n    </mat-card>\r\n</mat-expansion-panel>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { Family } from 'src/app/models/family.model';\r\n\r\n@Component({\r\n  selector: 'app-family',\r\n  templateUrl: './family.component.html',\r\n  styleUrls: ['./family.component.css']\r\n})\r\nexport class FamilyComponent implements OnInit {\r\n  family: Family;\r\n  @Input() order: Order;\r\n  panelOpenState = true;\r\n  pickUpDate: string;\r\n  @Input() sliceId: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.family = this.order.family;\r\n    this.pickUpDate = this.order.pickUpDate;\r\n  }\r\n\r\n}\r\n","<div id=\"grid-container\"> \r\n    <mat-card id=\"outer-card\" class=\"border\">   \r\n    <img class=\"border\" src=\"../../../assets/images/bsfp-logo-login.png\" alt=\"bsfp-logo-login\">\r\n    <div id=\"message-button-container\">\r\n        <mat-card id=\"inner-card\" class=\"border\">\r\n            <div>Online Manager</div>\r\n            <button class=\"border\" mat-raised-button (click)=\"authService.login()\" *ngIf=\"!authService.loggedIn\">Log In</button>\r\n            <button class=\"border\" mat-raised-button (click)=\"toOrders()\" *ngIf=\"authService.loggedIn\">To Family</button>\r\n        </mat-card> \r\n    </div>   \r\n    </mat-card>\r\n</div>    \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css']\r\n})\r\nexport class LogInComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  toOrders() {\r\n    this.router.navigate([`/orders`]);\r\n  }\r\n\r\n}\r\n","<mat-toolbar>\r\n    <span>Broad Street Food Pantry Online Manager</span>\r\n    <div id=\"button-container\">\r\n        <button mat-raised-button (click)=\"onOrderClick()\">Order Manager</button>\r\n        <button mat-raised-button (click)=\"onPantryClick()\">Pantry Manager</button>\r\n        <button mat-raised-button (click)=\"authService.logout()\">Log Out</button>\r\n    </div>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onOrderClick() {\r\n    this.router.navigate([`/orders`]);\r\n  }\r\n\r\n  onPantryClick() {\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <p>This will permanently delete order i.d. {{sliceId}}.  Please assure that this order has been accommodated.</p>\r\n</mat-card>\r\n<p id=\"proceed-prompt\">Do you wish to proceed?</p>\r\n<span>\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button (click)=\"onProceedClick()\">Proceed</button>\r\n</span>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-order-delete-modal',\r\n  templateUrl: './order-delete-modal.component.html',\r\n  styleUrls: ['./order-delete-modal.component.css']\r\n})\r\nexport class OrderDeleteModalComponent implements OnInit {\r\n  sliceId: string;\r\n\r\n  constructor(private dataService: DataService, public dialogRef: MatDialogRef<OrderDeleteModalComponent>,\r\n              @Inject (MAT_DIALOG_DATA) public order: Order, private orderService: OrderService, private router: Router, \r\n              private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.sliceId = this.order._id.slice(-5);\r\n  }\r\n\r\n  onProceedClick() {\r\n    this.orderService.deleteOrder(this.order._id).subscribe((response: any) => {\r\n      this.showResponseStatus(response.status);\r\n      this.dialogRef.close();\r\n      this.router.navigate(['/orders']);\r\n    });\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/orders`]);\r\n  }\r\n\r\n  showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`Order Id ${this.sliceId} successfully deleted.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`Order Id ${this.sliceId} failed to delete.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateOrders();\r\n  }\r\n}\r\n","<button id=\"view-button\" (click)=\"onViewClick()\">View</button>\r\n<button id=\"delete-button\" (click)=\"onDeleteClick()\">Delete</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { OrderDeleteModalComponent } from '../order-delete-modal/order-delete-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-order-grid-buttons',\r\n  templateUrl: './order-grid-buttons.component.html',\r\n  styleUrls: ['./order-grid-buttons.component.css']\r\n})\r\nexport class OrderGridButtonsComponent implements OnInit {\r\n  data: any;\r\n  params: any;\r\n\r\n  constructor(private dialog: MatDialog, private router: Router, private snackBar: MatSnackBar) { }\r\n\r\n  agInit(params) {\r\n    this.data =  params.data;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onDeleteClick() {\r\n    this.data.received === 'Yes' ?\r\n      this.dialog.open(OrderDeleteModalComponent, {\r\n      data: this.data,\r\n      disableClose: true,\r\n      panelClass: ['delete-dialog-container'],\r\n      width: '34rem'})\r\n    :\r\n      this.snackBar.open('Orders must be marked as received before deleting.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']});\r\n  }\r\n\r\n  onViewClick() {\r\n    this.router.navigate(['/order', this.data._id]);\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<mat-card id=\"top-container\">\r\n    <app-orders></app-orders>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-order-overview',\r\n  templateUrl: './order-overview.component.html',\r\n  styleUrls: ['./order-overview.component.css']\r\n})\r\nexport class OrderOverviewComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\" class=\"margin-bottom\">\r\n        <span id=\"title\">Order</span>\r\n        <button mat-raised-button (click)=\"onBackClick()\">Back</button>    \r\n        <button mat-raised-button printSectionId=\"print-section\" [useExistingCss]=\"true\" ngxPrint>Print</button>        \r\n        <button mat-raised-button [ngClass]=\"{'unreceived': !order.received }\" *ngIf=\"!order.received\" (click)=\"onReceivedClick()\">Mark Received</button>  \r\n        <button mat-raised-button [ngClass]=\"{'received': order.received }\" *ngIf=\"order.received\" (click)=\"onReceivedClick()\">Mark Unreceived</button>\r\n    </span>\r\n    <cdk-virtual-scroll-viewport itemSize=\"\">\r\n        <div id=\"expand-grid\">\r\n            <app-family [order]=\"order\" [sliceId]=\"sliceId\"></app-family>\r\n            <app-cart [order]=\"order\"></app-cart>\r\n        </div>\r\n    </cdk-virtual-scroll-viewport>\r\n</mat-card>\r\n<div id=\"print-section\" *ngIf=\"!loading\">\r\n    <header>\r\n        <div class=\"header-content\">Broad St. Food Pantry Online Order</div>\r\n    </header>\r\n    <div class=\"seperator\">Guest and Pick Up Information</div>\r\n    <app-family-print [order]=\"order\" [sliceId]=\"sliceId\"></app-family-print>\r\n    <div class=\"seperator\">Cart</div>\r\n    <app-cart-print [order]=\"order\" [sliceId]=\"sliceId\"></app-cart-print>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { CartItemsByType } from 'src/app/models/cart-items-by-type.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-order-view',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.css']\r\n})\r\nexport class OrderComponent implements OnInit, OnDestroy {\r\n  loading = true;\r\n  order: Order;\r\n  sliceId: string;\r\n  subscription = new Subscription();\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private dataService: DataService, private router: Router,\r\n              private orderService: OrderService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.activatedRoute.params.pipe(\r\n        switchMap(params => this.dataService.getOrderById(params.id)),\r\n        take(1)\r\n      ).subscribe((order: Order) => {\r\n        this.rerouteOnEmptyOrder(order);\r\n        this.order = order;\r\n        this.sliceId = order._id.slice(-5);\r\n        this.sortProductsByName();\r\n        this.sortTypesByName();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onBackClick() {\r\n    this.router.navigate(['/orders']);\r\n  }\r\n\r\n  onReceivedClick() {\r\n    const received = {received: !this.order.received};\r\n    this.orderService.updateOrderReceived(this.order._id, received).subscribe((response: any) => {\r\n      this.showResponseStatus(response.status);\r\n    });\r\n  }\r\n\r\n  rerouteOnEmptyOrder(order: any) {\r\n    if (order === undefined || Object.entries(order).length === 0 && order.constructor === Object) {\r\n      this.snackBar.open('Order not found. Please try again.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      this.router.navigate([`/orders`]);\r\n    }\r\n  }\r\n\r\n  showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      let update: string;\r\n      this.order.received ? update = 'unreceived' : update = 'received';\r\n      this.snackBar.open(`Order marked as ${update}.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']});\r\n      this.order.received = !this.order.received;\r\n    } else {\r\n      this.snackBar.open('Order failed to update.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']});\r\n    }\r\n    this.dataService.updateOrders();\r\n  }\r\n\r\n  sortProductsByName() {\r\n    this.order.cart.forEach((typeInCart: CartItemsByType) => {\r\n      typeInCart.products.sort(\r\n        (before, after) => before.productName.trim().toLowerCase() > after.productName.trim().toLowerCase() ? 1 : -1);\r\n    });\r\n  }\r\n\r\n  sortTypesByName() {\r\n    this.order.cart.sort((before, after) => before.typeName.trim().toLowerCase() > after.typeName.trim().toLowerCase() ? 1 : -1);\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"ag-grid-container\" *ngIf=\"!loading\">\r\n    <span id=\"button-grid-container\">\r\n        <span id=\"orders-title\">Orders</span>\r\n        <button mat-raised-button (click)=\"updateOrders()\">Refresh Orders</button>\r\n    </span>\r\n    <cdk-virtual-scroll-viewport  itemSize=\"\">    \r\n        <ag-grid-angular \r\n        style=\"width: 1140px; height: 500px;\" \r\n        class=\"ag-theme-balham\"\r\n        [columnDefs]=\"columnDefs\"\r\n        [defaultColDef]=\"defaultColDef\"\r\n        [suppressCellSelection]=\"true\"\r\n        [pagination]=\"true\"\r\n        [paginationAutoPageSize]=\"true\"\r\n        [rowData]=\"rowData\">\r\n        </ag-grid-angular>\r\n    </cdk-virtual-scroll-viewport >    \r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Order } from 'src/app/models/order.model';\r\nimport { OrderGridButtonsComponent } from '../order-grid-buttons/order-grid-buttons.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit, OnDestroy {\r\n  columnDefs = [\r\n    {headerName: 'First Name', field: 'firstName'},\r\n    {headerName: 'Last Name', field: 'lastName'},\r\n    {headerName: 'Family Size', field: 'familySize'},\r\n    {headerName: 'Children', field: 'schoolChildren',\r\n      comparator: (firstChildren, secondChildren) => this.noneComparator(firstChildren, secondChildren)},\r\n    {headerName: 'Infants', field: 'infants',\r\n      comparator: (firstInfants, secondInfants) => this.noneComparator(firstInfants, secondInfants)},\r\n    {headerName: 'Phone', field: 'phoneNumber'},\r\n    {headerName: 'Email', field: 'emailAddress'},\r\n    {headerName: 'Location', field: 'location'},\r\n    {headerName: 'Pick Up', field: 'pickUpDate', width: 90},\r\n    {headerName: 'Received', field: 'received', width: 90, sort: 'asc'},\r\n    {headerName: '', field: 'action', filter: false, sortable: false, width: 150, cellRendererFramework: OrderGridButtonsComponent}\r\n  ];\r\n  defaultColDef = {\r\n    filter: true,\r\n    filterParams: {\r\n      suppressAndOrCondition: true\r\n    },\r\n    resizable: true,\r\n    sortable: true,\r\n    width: 100\r\n  };\r\n  gridOptions: any;\r\n  loading = true;\r\n  orders: Order[];\r\n  subscription = new Subscription();\r\n  rowData = [];\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n        this.dataService.getOrders().subscribe((orders: Order[]) => {\r\n        this.orders = orders;\r\n        this.rowData = this.getFormattedFields();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private getFormattedFields() {\r\n    const rowData = [];\r\n    this.orders.forEach((order: Order) => {\r\n      const rowEntry = {};\r\n      const family  = order.family;\r\n      Object.defineProperty(rowEntry, '_id', {value: order._id});\r\n      Object.defineProperty(rowEntry, 'firstName', {value: family.firstName});\r\n      Object.defineProperty(rowEntry, 'lastName', {value: family.lastName});\r\n      Object.defineProperty(rowEntry, 'familySize', {value: order.family.familySize});\r\n      family.schoolChildren ?\r\n        Object.defineProperty(rowEntry, 'schoolChildren', {value: family.schoolChildren}) :\r\n        Object.defineProperty(rowEntry, 'schoolChildren', {value: 'None'});\r\n      family.infants ?\r\n        Object.defineProperty(rowEntry, 'infants', {value: family.infants}) :\r\n        Object.defineProperty(rowEntry, 'infants', {value: 'None'});\r\n      Object.defineProperty(rowEntry, 'phoneNumber', {value: family.phoneNumber});\r\n      family.emailAddress ?\r\n        Object.defineProperty(rowEntry, 'emailAddress', {value: family.emailAddress}) :\r\n        Object.defineProperty(rowEntry, 'emailAddress', {value: '-'});\r\n      family.referral ?\r\n        Object.defineProperty(rowEntry, 'location', {value: 'CELC'}) :\r\n        Object.defineProperty(rowEntry, 'location', {value: 'Broad St.'});\r\n      Object.defineProperty(rowEntry, 'pickUpDate', {value: order.pickUpDate});\r\n      order.received ?\r\n        Object.defineProperty(rowEntry, 'received', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'received', {value: 'No'});\r\n      rowData.push(rowEntry);\r\n    });\r\n    return rowData;\r\n  }\r\n\r\n  private noneComparator(first: any, second: any) {\r\n    if (isNaN(first)) {\r\n      first = 0;\r\n    }\r\n    if (isNaN(second)) {\r\n      second = 0;\r\n    }\r\n    return first > second ? 1 : -1;\r\n  }\r\n\r\n  updateOrders() {\r\n    this.dataService.updateOrders();\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <cdk-virtual-scroll-viewport itemSize=\"\" [ngClass]=\"{\r\n        'open-view-height' : productPanelOpenState || shopPanelOpenState || typePanelOpenState, \r\n        'closed-view-height': !productPanelOpenState && !shopPanelOpenState && !typePanelOpenState\r\n        }\">\r\n        <mat-expansion-panel \r\n        (opened) =\"pantryPanelService.setPanelOpenStates('shop',true)\" \r\n        (closed)=\"pantryPanelService.setPanelOpenStates('shop',false)\" \r\n        [expanded]=\"shopPanelOpenState\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                    Shop Manager\r\n                </mat-panel-title>\r\n                <mat-panel-description>\r\n                    {{shopPanelOpenState ? 'close' : 'open'}}\r\n                </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <app-shop></app-shop>\r\n        </mat-expansion-panel>\r\n        <mat-expansion-panel \r\n        (opened) =\"pantryPanelService.setPanelOpenStates('type',true)\" \r\n        (closed)=\"pantryPanelService.setPanelOpenStates('type',false)\" \r\n        [expanded]=\"typePanelOpenState\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                    Type Manager\r\n                </mat-panel-title>\r\n                <mat-panel-description>\r\n                    {{typePanelOpenState ? 'close' : 'open'}}\r\n                </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <app-types></app-types>\r\n        </mat-expansion-panel>\r\n        <mat-expansion-panel \r\n        (opened) =\"pantryPanelService.setPanelOpenStates('product',true)\" \r\n        (closed)=\"pantryPanelService.setPanelOpenStates('product',false)\" \r\n        [expanded]=\"productPanelOpenState\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                    Product Manager\r\n                </mat-panel-title>\r\n                <mat-panel-description>\r\n                    {{productPanelOpenState ? 'close' : 'open'}}\r\n                </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <app-products></app-products>\r\n        </mat-expansion-panel>\r\n    </cdk-virtual-scroll-viewport>\r\n</mat-card>\r\n\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { PantryPanelService } from 'src/app/services/pantry-panel.service';\r\nimport { Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-pantry-overview',\r\n  templateUrl: './pantry-overview.component.html',\r\n  styleUrls: ['./pantry-overview.component.css']\r\n})\r\nexport class PantryOverviewComponent implements OnInit, OnDestroy {\r\n  loading = true;\r\n  productPanelOpenState = false;\r\n  shopPanelOpenState = false;\r\n  subscription = new Subscription();\r\n  typePanelOpenState = false;\r\n\r\n  constructor(public pantryPanelService: PantryPanelService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.pantryPanelService.getPanelOpenStates().subscribe((panelOpenStates) => {\r\n        this.productPanelOpenState = panelOpenStates.get('product');\r\n        this.typePanelOpenState = panelOpenStates.get('type');\r\n        this.shopPanelOpenState = panelOpenStates.get('shop');\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span *ngIf=\"!product.productName\" class=\"product-title\">Product Create</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n        <button mat-raised-button (click)=\"onAddClick()\" [disabled]=\"!productForm.valid\">Save Product and Exit</button>        \r\n    </span>\r\n    <div id=\"grid-container\">\r\n        <mat-card class=\"left-form\" [formGroup]=\"productForm\">\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Product Name</mat-label>\r\n                <input matInput formControlName=\"productName\">\r\n                <mat-error *ngIf=\"productForm.get('productName').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Points</mat-label>\r\n                <mat-select matInput formControlName=\"points\">\r\n                    <mat-option [value]=false>None</mat-option>\r\n                    <mat-option [value]=1>1</mat-option>\r\n                    <mat-option [value]=2>2</mat-option>\r\n                    <mat-option [value]=3>3</mat-option>\r\n                    <mat-option [value]=4>4</mat-option>\r\n                    <mat-option [value]=5>5</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('points').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>After School?</mat-label>\r\n                <mat-select matInput formControlName=\"school\">\r\n                    <mat-option [value]=true>Yes</mat-option>\r\n                    <mat-option [value]=false>No</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('school').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Infant?</mat-label>\r\n                <mat-select matInput formControlName=\"infant\">\r\n                    <mat-option [value]=true>Yes</mat-option>\r\n                    <mat-option [value]=false>No</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('infant').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </mat-card>\r\n        <mat-card id=\"right-form\" [formGroup]=\"productForm\">\r\n            <mat-card id=\"init-size-amount\" *ngIf=\"!productForm.get('prodSizeAmount')\">\r\n                <span>This product does not currently have limits.</span>\r\n                <button mat-raised-button (click)=\"initSizeAmount()\">Create Limits</button> \r\n            </mat-card>\r\n            <span id=\"add-limit\" *ngIf=\"productForm.get('prodSizeAmount')\">\r\n                <span>Product Limits</span>\r\n                <button mat-raised-button (click)=\"addSizeAmount()\">Add Another Limit</button>  \r\n            </span>\r\n            <cdk-virtual-scroll-viewport  itemSize=\"\" *ngIf=\"productForm.get('prodSizeAmount')\">\r\n                <mat-card class=\"prod-size-amount-card\" *ngFor=\"let element of productForm.get('prodSizeAmount')['controls']; let i = index\" formArrayName=\"prodSizeAmount\">\r\n                    <ng-container [formGroupName]=\"i\">\r\n                        <div class=\"prod-size-amount-form\">\r\n                            <mat-form-field >\r\n                                <mat-label>Minimum Family Size</mat-label>\r\n                                <mat-select matInput formControlName=\"minFamSize\">\r\n                                    <mat-option [value]=1>1</mat-option>\r\n                                    <mat-option [value]=2>2</mat-option>\r\n                                    <mat-option [value]=3>3</mat-option>\r\n                                    <mat-option [value]=4>4</mat-option>\r\n                                    <mat-option [value]=5>5</mat-option>\r\n                                    <mat-option [value]=6>6</mat-option>\r\n                                    <mat-option [value]=7>7</mat-option>\r\n                                    <mat-option [value]=8>8</mat-option>\r\n                                    <mat-option [value]=9>9</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('minFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                            <mat-label>Maximum Family Size</mat-label>\r\n                            <mat-select matInput formControlName=\"maxFamSize\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('maxFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>        \r\n                            <mat-form-field>\r\n                            <mat-label>Product Limit</mat-label>\r\n                            <mat-select matInput formControlName=\"maxAmount\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                                <mat-option [value]=10>10</mat-option>\r\n                                <mat-option [value]=11>11</mat-option>\r\n                                <mat-option [value]=12>12</mat-option>\r\n                                <mat-option [value]=13>13</mat-option>\r\n                                <mat-option [value]=14>14</mat-option>\r\n                                <mat-option [value]=15>15</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('maxAmount').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <span>\r\n                                <button mat-raised-button (click)=\"deleteSizeAmount(i)\">Delete Limit</button>\r\n                            </span>  \r\n                        </div> \r\n                        <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].hasError('minMax')\">Minimum size must be equal to or smaller than maximum size.</mat-error>    \r\n                    </ng-container>      \r\n                </mat-card>\r\n            </cdk-virtual-scroll-viewport>          \r\n        </mat-card>\r\n    </div>\r\n</mat-card>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder, ValidatorFn } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\nexport const minMaxValidator: ValidatorFn = (formGroup: FormGroup) => {\r\n  const minFamSize = formGroup.get('minFamSize').value;\r\n  const maxFamSize = formGroup.get('maxFamSize').value;\r\n  if (minFamSize !== '' && maxFamSize !== '') {\r\n    return minFamSize > maxFamSize ? {minMax: true} : null;\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'app-product-add',\r\n  templateUrl: './product-add.component.html',\r\n  styleUrls: ['./product-add.component.css']\r\n})\r\nexport class ProductAddComponent implements OnInit {\r\n  limitDeleted = false;\r\n  loading = true;\r\n  prodSizeAmount: FormArray;\r\n  product = new Product();\r\n  productForm = new FormGroup({\r\n    productName: new FormControl('', Validators.required),\r\n    points: new FormControl('', Validators.required),\r\n    school: new FormControl('', Validators.required),\r\n    infant: new FormControl('', Validators.required),\r\n  });\r\n  requiredError = 'This field is required.';\r\n\r\n  constructor(protected dataService: DataService, protected formBuilder: FormBuilder, protected productService: ProductService,\r\n              protected snackBar: MatSnackBar, protected router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.loading = !this.loading;\r\n  }\r\n\r\n  addSizeAmount() {\r\n    this.prodSizeAmount.push(this.formBuilder.group({\r\n      minFamSize: ['', [Validators.required]],\r\n      maxFamSize: ['', Validators.required],\r\n      maxAmount: ['', Validators.required]\r\n    }, { validator: minMaxValidator }\r\n    ));\r\n  }\r\n\r\n  deleteSizeAmount(index: number) {\r\n    this.limitDeleted = true;\r\n    this.prodSizeAmount.removeAt(index);\r\n    if (!this.prodSizeAmount.length) {\r\n      this.productForm.removeControl('prodSizeAmount');\r\n    }\r\n  }\r\n\r\n  initSizeAmount() {\r\n    this.prodSizeAmount = new FormArray([]);\r\n    this.addSizeAmount();\r\n    this.productForm.addControl('prodSizeAmount', this.prodSizeAmount);\r\n  }\r\n\r\n  onAddClick() {\r\n    if (this.productForm.valid) {\r\n      this.setProductValues();\r\n      this.productService.addProduct(this.product).subscribe((response: any) => {\r\n        this.showResponseStatus(response.status);\r\n        this.router.navigate([`/pantry`]);\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  setProductValues() {\r\n    this.product.productName = this.productForm.get('productName').value;\r\n    this.productForm.get('prodSizeAmount') && this.prodSizeAmount.length ?\r\n      this.product.prodSizeAmount = this.productForm.get('prodSizeAmount').value :\r\n      this.product.prodSizeAmount = undefined;\r\n    this.productForm.get('points') && this.productForm.get('points').value ?\r\n      this.product.points = this.productForm.get('points').value :\r\n      this.product.points = undefined;\r\n    this.productForm.get('school') && this.productForm.get('school').value ?\r\n      this.product.school = this.productForm.get('school').value :\r\n      this.product.school = undefined;\r\n    this.productForm.get('infant') && this.productForm.get('infant').value ?\r\n      this.product.infant = this.productForm.get('infant').value :\r\n      this.product.infant = undefined;\r\n  }\r\n\r\n  showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`${this.product.productName} successfully updated.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`${this.product.productName} failed to update.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateProducts();\r\n    this.dataService.updateShop();\r\n    this.dataService.updateTypes();\r\n  }\r\n}\r\n","<mat-card>\r\n    <p>This action will permanently delete {{product.productName}}.  Permanently deleting a product removes it\r\n    from the shop and from types that contain it.</p>\r\n</mat-card>\r\n<p id=\"proceed-prompt\">Do you wish to proceed?</p>\r\n<span>\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button (click)=\"onProceedClick()\">Proceed</button>\r\n</span>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-delete-modal',\r\n  templateUrl: './product-delete-modal.component.html',\r\n  styleUrls: ['./product-delete-modal.component.css']\r\n})\r\nexport class ProductDeleteModalComponent implements OnInit {\r\n\r\n  constructor(private dataService: DataService, public dialogRef: MatDialogRef<ProductDeleteModalComponent>,\r\n              @Inject (MAT_DIALOG_DATA) public product: Product, private productService: ProductService, \r\n              private router: Router, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {}\r\n\r\n\r\n  private deleteProduct() {\r\n    this.productService.deleteProduct(this.product._id).subscribe((response: any) => {\r\n      this.showResponseStatus(response.status);\r\n    });\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  onProceedClick() {\r\n    this.deleteProduct();\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  private showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`${this.product.productName} successfully deleted.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`${this.product.productName} failed to delete.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateProducts();\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateShop();\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span class=\"product-title\">Product Edit</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>    \r\n        <button mat-raised-button *ngIf=\"product.productName\" (click)=\"onUpdateClick()\" [disabled]=\"(productForm.pristine && !limitDeleted) || !productForm.valid\">Save Update and Exit</button>  \r\n    </span>\r\n    <div id=\"grid-container\">\r\n        <mat-card class=\"left-form\" [ngClass]=\"{'in-shop-left-form': inShop}\" [formGroup]=\"productForm\">\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Product Name</mat-label>\r\n                <input matInput formControlName=\"productName\">\r\n                <mat-error *ngIf=\"productForm.get('productName').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Points</mat-label>\r\n                <mat-select matInput formControlName=\"points\">\r\n                    <mat-option [value]=false>None</mat-option>\r\n                    <mat-option [value]=1>1</mat-option>\r\n                    <mat-option [value]=2>2</mat-option>\r\n                    <mat-option [value]=3>3</mat-option>\r\n                    <mat-option [value]=4>4</mat-option>\r\n                    <mat-option [value]=5>5</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('points').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>After School?</mat-label>\r\n                <mat-select matInput formControlName=\"school\">\r\n                    <mat-option [value]=true>Yes</mat-option>\r\n                    <mat-option [value]=false>No</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('school').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field>\r\n                <mat-label>Infant?</mat-label>\r\n                <mat-select matInput formControlName=\"infant\">\r\n                    <mat-option [value]=true>Yes</mat-option>\r\n                    <mat-option [value]=false>No</mat-option>\r\n                </mat-select>    \r\n                <mat-error *ngIf=\"productForm.get('infant').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div id=\"shop\" *ngIf=\"inShop\">Currently in the Shop</div>   \r\n        </mat-card>\r\n        <mat-card id=\"right-form\" [formGroup]=\"productForm\">\r\n            <mat-card id=\"init-size-amount\" *ngIf=\"!productForm.get('prodSizeAmount')\">\r\n                <span>This product does not currently have limits.</span>\r\n                <button mat-raised-button (click)=\"initSizeAmount()\">Create Limits</button> \r\n            </mat-card>\r\n            <span id=\"add-limit\" *ngIf=\"productForm.get('prodSizeAmount')\">\r\n                <span>Product Limits</span>\r\n                <button mat-raised-button (click)=\"addSizeAmount()\">Add Another Limit</button>  \r\n            </span>\r\n            <cdk-virtual-scroll-viewport  itemSize=\"\" *ngIf=\"productForm.get('prodSizeAmount')\">\r\n                <mat-card class=\"prod-size-amount-card\" *ngFor=\"let element of productForm.get('prodSizeAmount')['controls']; let i = index\" formArrayName=\"prodSizeAmount\">\r\n                    <ng-container [formGroupName]=\"i\">\r\n                        <div class=\"prod-size-amount-form\">\r\n                            <mat-form-field >\r\n                                <mat-label>Minimum Family Size</mat-label>\r\n                                <mat-select matInput formControlName=\"minFamSize\">\r\n                                    <mat-option [value]=1>1</mat-option>\r\n                                    <mat-option [value]=2>2</mat-option>\r\n                                    <mat-option [value]=3>3</mat-option>\r\n                                    <mat-option [value]=4>4</mat-option>\r\n                                    <mat-option [value]=5>5</mat-option>\r\n                                    <mat-option [value]=6>6</mat-option>\r\n                                    <mat-option [value]=7>7</mat-option>\r\n                                    <mat-option [value]=8>8</mat-option>\r\n                                    <mat-option [value]=9>9</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('minFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                            <mat-label>Maximum Family Size</mat-label>\r\n                            <mat-select matInput formControlName=\"maxFamSize\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('maxFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>        \r\n                            <mat-form-field>\r\n                            <mat-label>Product Limit</mat-label>\r\n                            <mat-select matInput formControlName=\"maxAmount\">\r\n                                <mat-option [value]=1>1</mat-option>\r\n                                <mat-option [value]=2>2</mat-option>\r\n                                <mat-option [value]=3>3</mat-option>\r\n                                <mat-option [value]=4>4</mat-option>\r\n                                <mat-option [value]=5>5</mat-option>\r\n                                <mat-option [value]=6>6</mat-option>\r\n                                <mat-option [value]=7>7</mat-option>\r\n                                <mat-option [value]=8>8</mat-option>\r\n                                <mat-option [value]=9>9</mat-option>\r\n                                <mat-option [value]=10>10</mat-option>\r\n                                <mat-option [value]=11>11</mat-option>\r\n                                <mat-option [value]=12>12</mat-option>\r\n                                <mat-option [value]=13>13</mat-option>\r\n                                <mat-option [value]=14>14</mat-option>\r\n                                <mat-option [value]=15>15</mat-option>\r\n                            </mat-select>    \r\n                            <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].get('maxAmount').hasError('required')\">{{requiredError}}</mat-error>\r\n                            </mat-form-field>\r\n                            <span>\r\n                                <button mat-raised-button (click)=\"deleteSizeAmount(i)\">Delete Limit</button>\r\n                            </span>  \r\n                        </div> \r\n                        <mat-error *ngIf=\"productForm.get('prodSizeAmount')['controls'][i].hasError('minMax')\">Minimum size must be equal to or smaller than maximum size.</mat-error>    \r\n                    </ng-container>      \r\n                </mat-card>\r\n            </cdk-virtual-scroll-viewport>          \r\n        </mat-card>\r\n    </div>\r\n</mat-card>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { minMaxValidator, ProductAddComponent } from '../product-add/product-add.component';\r\nimport { combineLatest } from 'rxjs';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-product-edit',\r\n  templateUrl: '../product-edit/product-edit.component.html',\r\n  styleUrls: ['../product-add/product-add.component.css']\r\n})\r\nexport class ProductEditComponent extends ProductAddComponent implements OnInit {\r\n  inShop = false;\r\n  loading = true;\r\n  prodSizeAmount: FormArray;\r\n  product: Product;\r\n  productForm: FormGroup;\r\n  requiredError = 'This field is required';\r\n  shop: Shop;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, protected dataService: DataService, protected formBuilder: FormBuilder,\r\n              protected productService: ProductService, protected snackBar: MatSnackBar,\r\n              protected router: Router) {\r\n                super(dataService, formBuilder, productService, snackBar, router);\r\n              }\r\n\r\n  ngOnInit() {\r\n    combineLatest([\r\n      this.activatedRoute.params.pipe(\r\n        switchMap(params => this.dataService.getProductById(params.id)),\r\n        take(1)),\r\n      this.dataService.getShop()\r\n      ]).subscribe(([product, shop]) => {\r\n      this.rerouteOnEmptyProduct(product);\r\n      this.product = product;\r\n      this.productForm = new FormGroup({\r\n        productName: new FormControl(this.product.productName, Validators.required),\r\n        points: new FormControl(this.product.points ? this.product.points : false, Validators.required),\r\n        school: new FormControl(this.product.school ? this.product.school : false, Validators.required),\r\n        infant: new FormControl(this.product.infant ? this.product.infant : false, Validators.required),\r\n      });\r\n      this.setProdSizeAmountForm();\r\n      this.shop = shop;\r\n      this.setInShop();\r\n      this.loading = !this.loading;\r\n    });\r\n  }\r\n\r\n  onUpdateClick() {\r\n    if (this.productForm.valid) {\r\n      this.setProductValues();\r\n      this.productService.updateProduct(this.product._id, this.product).subscribe((response: any) => {\r\n        if (response.status === 200) {\r\n          this.snackBar.open(`${this.product.productName} updated successfully.`, 'Dismiss', {\r\n            panelClass: ['green-snackbar']\r\n          });\r\n          this.router.navigate([`/pantry`]);\r\n        } else {\r\n          this.snackBar.open(`${this.product.productName} failed to update.`, 'Dismiss', {\r\n            panelClass: ['red-snackbar']\r\n          });\r\n          this.router.navigate([`/pantry`]);\r\n        }\r\n        this.dataService.updateProducts();\r\n        this.dataService.updateShop();\r\n        this.dataService.updateTypes();\r\n      });\r\n    }\r\n  }\r\n\r\n  rerouteOnEmptyProduct(product: any) {\r\n    if (product === undefined || Object.entries(product).length === 0 && product.constructor === Object) {\r\n      this.snackBar.open('Product not found. Please try again.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      this.router.navigate([`/pantry`]);\r\n    }\r\n  }\r\n\r\n  setInShop() {\r\n    this.shop.shop.forEach((type: Type) => {\r\n      type.products.forEach((product: Product) => {\r\n        if (this.product._id === product._id) {\r\n          this.inShop = true;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  setProdSizeAmountForm() {\r\n    if (this.product.prodSizeAmount) {\r\n      this.prodSizeAmount = new FormArray([]);\r\n      this.product.prodSizeAmount.forEach(element => {\r\n        this.prodSizeAmount.push(this.formBuilder.group({\r\n          minFamSize: [element.minFamSize, Validators.required],\r\n          maxFamSize: [element.maxFamSize, Validators.required],\r\n          maxAmount: [element.maxAmount, Validators.required]\r\n        },\r\n        { validator: minMaxValidator }\r\n        ));\r\n        this.productForm.addControl('prodSizeAmount', this.prodSizeAmount);\r\n      });\r\n    }\r\n  }\r\n}\r\n","<button id=\"edit-button\" (click)=\"onEditClick()\">Edit</button>\r\n<button id=\"delete-button\"  (click)=\"onDeleteClick()\">Delete</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ProductDeleteModalComponent } from '../product-delete-modal/product-delete-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-product-grid-buttons',\r\n  templateUrl: './product-grid-buttons.component.html',\r\n  styleUrls: ['./product-grid-buttons.component.css']\r\n})\r\nexport class ProductGridButtonsComponent implements OnInit {\r\n  data: any;\r\n  params: any;\r\n\r\n  constructor(private dialog: MatDialog, private router: Router) { }\r\n\r\n  agInit(params) {\r\n    this.data =  params.data;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onDeleteClick() {\r\n    this.dialog.open(ProductDeleteModalComponent, {\r\n      data: this.data,\r\n      disableClose: true,\r\n      panelClass: ['delete-dialog-container'],\r\n      width: '34rem'\r\n    });\r\n  }\r\n\r\n  onEditClick() {\r\n    this.router.navigate(['/product', this.data._id]);\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div id=\"ag-grid-super-container\">\r\n    <mat-card id=\"ag-grid-sub-container\" *ngIf=\"!loading\">\r\n        <span id=\"button-grid-container\">\r\n            <span id=\"products-title\">Products</span>\r\n            <button mat-raised-button (click)=\"onCreateProductClick()\">Create Product</button>\r\n        </span>\r\n        <ag-grid-angular \r\n        style=\"width: 1120px; height: 500px;\" \r\n        class=\"ag-theme-balham\"\r\n        [columnDefs]=\"columnDefs\"\r\n        [defaultColDef]=\"defaultColDef\"\r\n        [suppressCellSelection]=\"true\"\r\n        [pagination]=\"true\"\r\n        [paginationAutoPageSize]=\"true\"\r\n        [rowData]=\"rowData\">\r\n        </ag-grid-angular>\r\n    </mat-card>\r\n</div>\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { Router } from '@angular/router';\r\nimport { ProductGridButtonsComponent } from '../product-grid-buttons/product-grid-buttons.component';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { combineLatest, Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\nexport class ProductsComponent implements OnInit, OnDestroy {\r\n  columnDefs = [\r\n    {headerName: 'Name', field: 'productName', sort: 'asc'},\r\n    {headerName: 'Points', field: 'points', comparator: (firstPoints, secondPoints) => this.pointsComparator(firstPoints, secondPoints)},\r\n    {headerName: 'After School', field: 'school', width: 120},\r\n    {headerName: 'Infant', field: 'infant'},\r\n    {headerName: 'Product Limit', field: 'productLimit', width: 120},\r\n    {headerName: 'Type', field: 'type'},\r\n    {headerName: 'Super Type', field: 'superType', width: 120},\r\n    {headerName: 'Type Limit', field: 'typeLimit'},\r\n    {headerName: 'In Shop', field: 'inShop'},\r\n    {headerName: '', field: 'action', filter: false, sortable: false, width: 150, cellRendererFramework: ProductGridButtonsComponent}\r\n  ];\r\n  defaultColDef = {\r\n    filter: true,\r\n    filterParams: {\r\n      suppressAndOrCondition: true\r\n    },\r\n    resizable: true,\r\n    sortable: true,\r\n    width: 100\r\n  };\r\n  private gridApi;\r\n  loading = true;\r\n  products: Product[];\r\n  rowData = [];\r\n  shop: Shop;\r\n  subscription = new Subscription();\r\n  types: Type[];\r\n\r\n  constructor(private dataService: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getShop(),\r\n        this.dataService.getTypes(),\r\n        this.dataService.getProducts()\r\n      ]).subscribe(([shop, types, products]) => {\r\n        this.shop = shop;\r\n        this.types = types;\r\n        this.products = products;\r\n        this.rowData = this.getFormattedFields();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private getInShopStatus(productToCheck: Product) {\r\n    let inShop = false;\r\n    this.shop.shop.forEach((type: Type) => {\r\n      type.products.forEach((product: Product) => {\r\n        if (product._id === productToCheck._id) {\r\n          inShop = true;\r\n        }\r\n      });\r\n    });\r\n    return inShop;\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridApi.setRowData(this.rowData);\r\n  }\r\n\r\n  private getProductTypeName(productToCheck: Product) {\r\n    let typeName = 'None';\r\n    this.types.forEach((type: Type)  => {\r\n      type.products.forEach((product: Product) => {\r\n        if (product._id === productToCheck._id ) {\r\n          typeName = type.typeName;\r\n        }\r\n      });\r\n    });\r\n    return typeName;\r\n  }\r\n\r\n  private getProductSuperTypeName(productToCheck: Product) {\r\n    let superTypeName = 'None';\r\n    this.types.forEach((type: Type) => {\r\n      type.products.forEach((product: Product) => {\r\n        if (product._id === productToCheck._id) {\r\n          if (type.superTypeId) {\r\n            this.types.forEach((superType: Type) => {\r\n              if (type.superTypeId === superType._id) {\r\n                superTypeName = superType.typeName;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return superTypeName;\r\n  }\r\n\r\n  private getTypeLimitStatus(productToCheck: Product) {\r\n    let hasTypeLimit = false;\r\n    this.types.forEach((type: Type) => {\r\n      type.products.forEach((product: Product) => {\r\n        if (product._id === productToCheck._id) {\r\n          if (type.typeLimits) {\r\n            hasTypeLimit = true;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return hasTypeLimit;\r\n  }\r\n\r\n  private getFormattedFields() {\r\n    const rowData = [];\r\n    this.products.forEach((product: Product) => {\r\n      const rowEntry = {};\r\n      Object.defineProperty(rowEntry, '_id', {value: product._id});\r\n      Object.defineProperty(rowEntry, 'productName', {value: product.productName});\r\n      product.points ?\r\n        Object.defineProperty(rowEntry, 'points', {value: product.points}) :\r\n        Object.defineProperty(rowEntry, 'points', {value: 'None'});\r\n      product.school ?\r\n        Object.defineProperty(rowEntry, 'school', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'school', {value: 'No'});\r\n      product.infant ?\r\n        Object.defineProperty(rowEntry, 'infant', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'infant', {value: 'No'});\r\n      product.prodSizeAmount ?\r\n        Object.defineProperty(rowEntry, 'productLimit', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'productLimit', {value: 'No'});\r\n      Object.defineProperty(rowEntry, 'type', {value: this.getProductTypeName(product)});\r\n      Object.defineProperty(rowEntry, 'superType', {value: this.getProductSuperTypeName(product)});\r\n      this.getTypeLimitStatus(product) ?\r\n        Object.defineProperty(rowEntry, 'typeLimit', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'typeLimit', {value: 'No'});\r\n      this.getInShopStatus(product) ?\r\n        Object.defineProperty(rowEntry, 'inShop', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'inShop', {value: 'No'});\r\n      rowData.push(rowEntry);\r\n    });\r\n    return rowData;\r\n  }\r\n\r\n  onCreateProductClick() {\r\n    this.router.navigate(['/product']);\r\n  }\r\n\r\n  private pointsComparator(firstPoints: any, secondPoints: any) {\r\n    if (isNaN(firstPoints)) {\r\n      firstPoints = 0;\r\n    }\r\n    if (isNaN(secondPoints)) {\r\n      secondPoints = 0;\r\n    }\r\n    return firstPoints > secondPoints ? 1 : -1;\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span>Shop Edit</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n        <button mat-raised-button (click)=\"onSaveClick()\">Save and Exit</button>\r\n    </span>\r\n    <div id=\"grid-container\">\r\n        <mat-card class=\"drag-drop-header\" id=\"left-header\">Available Types</mat-card>\r\n        <mat-card class=\"drag-drop-header\">Types in Shop</mat-card> \r\n        <cdk-virtual-scroll-viewport class=\"viewport\" itemSize=\"\">\r\n            <mat-card class=\"type-container\" #availableTypesList=\"cdkDropList\" [cdkDropListData]=\"availableTypes\" [cdkDropListConnectedTo]=\"[typesInShopList]\" (cdkDropListDropped)=\"dropType($event)\" cdkDropList>\r\n                <mat-card class=\"margin-top grabbable\" *ngFor=\"let availableType of availableTypes\" cdkDrag>{{availableType.typeName}}\r\n                    <ng-container *ngIf=\"availableType.subTypes\">\r\n                        <span></span>\r\n                        <mat-card class=\"margin-top\" id=\"available-sub-type-card\" *ngFor=\"let subType of availableType.subTypes\">{{subType.typeName}}</mat-card>\r\n                    </ng-container>\r\n                </mat-card>\r\n            </mat-card>\r\n        </cdk-virtual-scroll-viewport>    \r\n        <cdk-virtual-scroll-viewport class=\"viewport\" itemSize=\"\"> \r\n            <mat-card class=\"type-container\" #typesInShopList=\"cdkDropList\" [cdkDropListData]=\"typesInShop\" [cdkDropListConnectedTo]=\"[availableTypesList]\" (cdkDropListDropped)=\"dropType($event)\" cdkDropList>\r\n                <mat-card class=\"margin-top grabbable\" *ngFor=\"let typeInShop of typesInShop\" cdkDrag>{{typeInShop.typeName}}\r\n                    <ng-container *ngIf=\"typeInShop.subTypes\">\r\n                        <span></span>\r\n                        <mat-card class=\"margin-top\" *ngFor=\"let subType of typeInShop.subTypes\">{{subType.typeName}}</mat-card>\r\n                    </ng-container>\r\n                </mat-card>\r\n            </mat-card>\r\n        </cdk-virtual-scroll-viewport>  \r\n    </div>\r\n</mat-card>\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { ShopType } from 'src/app/models/shop-type.model';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-shop-edit',\r\n  templateUrl: './shop-edit.component.html',\r\n  styleUrls: ['./shop-edit.component.css']\r\n})\r\nexport class ShopEditComponent implements OnInit, OnDestroy {\r\n  availableTypes: ShopType[];\r\n  loading = true;\r\n  shop: Shop;\r\n  private subscription = new Subscription();\r\n  types: Type[];\r\n  typesInShop: ShopType[];\r\n\r\n  constructor(private dataService: DataService, private snackBar: MatSnackBar, private router: Router, private shopService: ShopService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getShop(),\r\n        this.dataService.getTypes()\r\n      ]).subscribe(([shop, types]) => {\r\n    this.initShop(shop, types);\r\n    this.setInShopSubTypes();\r\n    this.setAvailableSuperTypes();\r\n    this.setAvailableSubTypes();\r\n    this.removeProductLessType();\r\n    this.sortTypesByName(this.availableTypes);\r\n    this.sortTypesByName(this.typesInShop);\r\n    this.loading = false;\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  dropType(event: CdkDragDrop<Type[]>) {\r\n    event.previousContainer === event.container ?\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex) :\r\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n    this.sortTypesByName(this.availableTypes);\r\n    this.sortTypesByName(this.typesInShop);\r\n  }\r\n\r\n  private initShop(shop: Shop, types: Type[]) {\r\n    this.availableTypes = [];\r\n    this.shop = null;\r\n    this.types = [];\r\n    this.typesInShop = [];\r\n    const shopClone = cloneDeep(shop);\r\n    const typesClone = cloneDeep(types);\r\n    this.shop = shopClone;\r\n    this.typesInShop = this.shop.shop;\r\n    this.types = typesClone;\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate(['/pantry']);\r\n  }\r\n\r\n  onSaveClick() {\r\n    this.unwrapSubTypes();\r\n    this.shop.shop = this.typesInShop;\r\n    this.shopService.updateShop(this.shop._id, this.shop).subscribe((response: any) => {\r\n      this.showResponseStatus(response.status);\r\n      this.router.navigate([`/pantry`]);\r\n    });\r\n  }\r\n\r\n  private removeProductLessType() {\r\n    this.availableTypes.forEach((availableType: ShopType) => {\r\n      if (!availableType.products.length && !availableType.subTypes) {\r\n        this.availableTypes = this.availableTypes.filter((productLessType: ShopType) => availableType._id !== productLessType._id);\r\n      }\r\n    });\r\n  }\r\n\r\n  private setAvailableSubTypes() {\r\n    this.types.forEach((type: Type) => {\r\n      this.availableTypes.forEach((availableType: ShopType) => {\r\n        if (availableType._id === type.superTypeId) {\r\n          if (!availableType.subTypes) {\r\n            availableType.subTypes = [];\r\n          }\r\n          availableType.subTypes.push(type);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private setAvailableSuperTypes() {\r\n    this.types.forEach((type: Type) => {\r\n      if (!this.typesInShop.some((typeInShop: ShopType) => typeInShop._id === type._id) && !type.superTypeId) {\r\n          this.availableTypes.push(type);\r\n      }\r\n    });\r\n  }\r\n\r\n  private setInShopSubTypes() {\r\n    const subTypesInShop: ShopType[] = [];\r\n    this.typesInShop.forEach((typeInShop: ShopType) => {\r\n      if (typeInShop.superTypeId) {\r\n        subTypesInShop.push(typeInShop);\r\n        this.typesInShop = this.typesInShop.filter((type: ShopType) => type._id !== typeInShop._id);\r\n      }\r\n    });\r\n    this.setInShopSubTypesHelper(subTypesInShop);\r\n  }\r\n\r\n  private setInShopSubTypesHelper(subTypesInShop: ShopType[]) {\r\n    subTypesInShop.forEach((subType: ShopType) => {\r\n      const superType = this.typesInShop.find((typeInShop: Type) => typeInShop._id === subType.superTypeId);\r\n      if (!superType.subTypes) {\r\n        superType.subTypes = [];\r\n      }\r\n      superType.subTypes.push(subType);\r\n    });\r\n  }\r\n\r\n  private showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`Shop successfully updated.`, 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`Shop failed to update.`, 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateShop();\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateProducts();\r\n  }\r\n\r\n  private sortTypesByName(shopTypes: ShopType[]) {\r\n    shopTypes.sort((beforeType: Type, afterType: Type) => {\r\n      return beforeType.typeName > afterType.typeName ? 1 : -1;\r\n    });\r\n    shopTypes.forEach((shopType: ShopType) => {\r\n      if (shopType.subTypes) {\r\n        shopType.subTypes.sort((beforeSubType: Type, afterSubType: Type) => {\r\n          return beforeSubType.typeName > afterSubType.typeName ? 1 : -1;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private unwrapSubTypes() {\r\n    this.typesInShop.forEach((typeInShop: ShopType) => {\r\n      if (typeInShop.subTypes) {\r\n        typeInShop.subTypes.forEach((subType: ShopType) => {\r\n          this.typesInShop.push(subType);\r\n        });\r\n        typeInShop.subTypes = undefined;\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<mat-card id=\"top-container\" class=\"blue\">\r\n    <span id=\"top-button\" class=\"margin-bottom\">\r\n        <span id=\"shop-title\">Current Shop</span>\r\n        <button mat-raised-button (click)=\"onEditClick()\">Edit Shop</button>\r\n    </span>\r\n    <mat-card id=\"shop-container\" class=\"margin-bottom\">\r\n        <mat-expansion-panel class=\"type-card margin-bottom\" *ngFor=\"let type of shopTypes\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>{{type.typeName}}</mat-panel-title>\r\n                <mat-panel-description>\r\n                    Click Here\r\n                </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <mat-card class=\"margin-bottom blue\" *ngFor=\"let product of type.products\">{{product.productName}}</mat-card>\r\n            <mat-card class=\"sub-type-card margin-bottom\" *ngFor=\"let subType of type.subTypes\">\r\n                <div class=\"margin-bottom\">{{subType.typeName}}</div>\r\n                <mat-card class=\"margin-bottom blue\" *ngFor=\"let subProduct of subType.products\">{{subProduct.productName}}</mat-card>\r\n            </mat-card>\r\n        </mat-expansion-panel>\r\n    </mat-card>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { Router } from '@angular/router';\r\nimport { ShopType } from 'src/app/models/shop-type.model';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.css']\r\n})\r\nexport class ShopComponent implements OnInit, OnDestroy {\r\n  currentTypes: ShopType[];\r\n  loading = true;\r\n  shop: Shop;\r\n  shopTypes: ShopType[];\r\n  typesInShop: ShopType[];\r\n  private subscription = new Subscription();\r\n\r\n  constructor(private dataService: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.dataService.getShop().subscribe((shop: Shop) => {\r\n        this.loading = true;\r\n        this.initShop(shop);\r\n        this.setSubTypes();\r\n        this.sortShop();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  initShop(shop: Shop) {\r\n    this.currentTypes = [];\r\n    this.typesInShop = [];\r\n    this.shopTypes = [];\r\n    const shopClone = cloneDeep(shop);\r\n    this.currentTypes = shopClone.shop;\r\n  }\r\n\r\n  onEditClick() {\r\n    this.router.navigate(['/shop']);\r\n  }\r\n\r\n  private setSubTypes() {\r\n    this.currentTypes.forEach((currentType: ShopType) => {\r\n      if (!currentType.superTypeId) {\r\n        this.shopTypes.push(currentType);\r\n      }\r\n    });\r\n    this.shopTypes.forEach((shopType: ShopType) => {\r\n      this.currentTypes.forEach((currentType: ShopType) => {\r\n        if (currentType.superTypeId === shopType._id) {\r\n          if (!shopType.subTypes) {\r\n            shopType.subTypes = [];\r\n          }\r\n          shopType.subTypes.push(currentType);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private sortShop() {\r\n    this.shopTypes.forEach((shopType: ShopType) => {\r\n      shopType.products.sort((beforeProduct: Product, afterProduct: Product) => {\r\n        return beforeProduct.productName > afterProduct.productName ? 1 : -1;\r\n      });\r\n      if (shopType.subTypes) {\r\n        shopType.subTypes.forEach((subType: Type) => {\r\n          subType.products.sort((beforeSubProduct: Product, afterSubProduct: Product) => {\r\n            return beforeSubProduct.productName > afterSubProduct.productName ? 1 : -1;\r\n          });\r\n        });\r\n        shopType.subTypes.sort((beforeSubType: Type, afterSubType: Type) => {\r\n          return beforeSubType.typeName > afterSubType.typeName ? 1 : -1;\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<mat-card id=\"top-container\" class=\"margin-top-2\" *ngIf=\"!loading\">\r\n    <span id=\"top-buttons\">\r\n        <span>Set Sub-Types</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n        <button mat-raised-button (click)=\"onSaveClick()\">Save and Exit</button>\r\n    </span>\r\n    <mat-card class=\"margin-top-2 dark-blue\">\r\n        <ul>\r\n            <li>In order to assign a sub-type, the sub-type and super-type must both be in the shop or both not in the shop.</li>\r\n            <li>Only types with products and that have type limits with type tracking enabled appear under the Available Sub-Types column.</li>\r\n            <li>Only types that are not sub-types appear under the Available Super-Types column.</li>\r\n            <li>Types cannot be both super-types and sub-types.</li>\r\n        </ul>\r\n    </mat-card>\r\n    <div id=\"grid-container\" class=\"margin-top-2\" cdkDropListGroup>\r\n        <mat-card class=\"drag-drop-header dark-blue\" id=\"left-header\">Available Sub-Types</mat-card>\r\n        <mat-card class=\"drag-drop-header dark-blue\">Available Super-Types</mat-card> \r\n        <cdk-virtual-scroll-viewport id=\"sub-type-viewport\" itemSize=\"\">\r\n            <mat-card id=\"sub-type-container\" [cdkDropListData]=\"possibleSubs\" (cdkDropListDropped)=\"dropIntoSubs($event)\" cdkDropList>\r\n                <mat-card class=\"sub-type-card type-name\" *ngFor=\"let subType of possibleSubs\" cdkDrag>{{subType.typeName}}<div class=\"in-shop\" *ngIf=\"getInShopStatus(subType)\">In Shop</div></mat-card>\r\n            </mat-card>\r\n        </cdk-virtual-scroll-viewport>\r\n        <cdk-virtual-scroll-viewport id=\"super-type-viewport\" itemSize=\"\">  \r\n            <mat-card id=\"super-type-container\">\r\n                <ng-container *ngFor=\"let superType of possibleSupers\">\r\n                    <mat-card class=\"super-type-card-container\" [cdkDropListData]=\"superType.subTypes\" (cdkDropListDropped)=\"dropIntoSupers($event, superType)\" cdkDropList>\r\n                        <span class=\"type-name\">{{superType.typeName}}<div class=\"in-shop\" *ngIf=\"getInShopStatus(superType)\">In Shop</div></span>\r\n                        <mat-card class=\"super-type-card type-name margin-top-2\" *ngFor=\"let subType of superType.subTypes\" cdkDrag>\r\n                            {{subType.typeName}}\r\n                        </mat-card>\r\n                    </mat-card>\r\n                </ng-container>\r\n            </mat-card>\r\n        </cdk-virtual-scroll-viewport>\r\n    </div>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { TypeService } from 'src/app/services/type.service';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { ShopType } from 'src/app/models/shop-type.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Subscription, forkJoin, from as ObservableFrom, combineLatest } from 'rxjs';\r\nimport { concatMap } from 'rxjs/operators';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n// REFACTOR ME PLEASE (08/09/2020)\r\n\r\n@Component({\r\n  selector: 'app-sub-type-edit',\r\n  templateUrl: './sub-type-edit.component.html',\r\n  styleUrls: ['./sub-type-edit.component.css']\r\n})\r\nexport class SubTypeEditComponent implements OnInit, OnDestroy {\r\n  loading = true;\r\n  possibleSubs: ShopType[];\r\n  possibleSupers: ShopType[];\r\n  shop: Shop;\r\n  private subscription = new Subscription();\r\n  types: Type[];\r\n\r\n  constructor(private dataService: DataService, private router: Router, private snackBar: MatSnackBar,\r\n              private typeService: TypeService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getShop(),\r\n        this.dataService.getTypes(),\r\n      ]).subscribe(([shop, types]) => {\r\n          this.shop = shop;\r\n          this.initComponentVariables(shop);\r\n          this.types = types;\r\n          this.initDragDropArrays();\r\n          this.initDragDropValues();\r\n          this.sortTypesByName(this.possibleSubs);\r\n          this.sortTypesByName(this.possibleSupers);\r\n          this.possibleSupers.forEach((superType: ShopType) => {\r\n            this.sortTypesByName(superType.subTypes);\r\n          });\r\n          this.loading = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  dropIntoSubs(event: CdkDragDrop<ShopType[]>) {\r\n    const superTypeToAdd: ShopType = event.previousContainer.data[event.previousIndex];\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n      this.dropIntoSubsSetArrayValues(superTypeToAdd);\r\n    }\r\n    this.sortTypesByName(this.possibleSubs);\r\n    this.sortTypesByName(this.possibleSupers);\r\n  }\r\n\r\n  private dropIntoSubsSetArrayValues(superTypeToAdd: ShopType) {\r\n    this.possibleSupers.push(superTypeToAdd);\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      if (!superType.subTypes.length  && !this.possibleSubs.some((subType: ShopType) => subType._id === superType._id)\r\n       && superType.products.length) {\r\n        this.possibleSubs.push(superType);\r\n      }\r\n    });\r\n    this.filterIneligibleSubTypes(this.possibleSubs);\r\n  }\r\n\r\n  dropIntoSupers(event: CdkDragDrop<ShopType[]>, newSuperType: ShopType) {\r\n    const typeToMove: ShopType = event.previousContainer.data[event.previousIndex];\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else if (typeToMove._id !== newSuperType._id  &&\r\n      (this.getInShopStatus(typeToMove) && this.getInShopStatus(newSuperType) ||\r\n      (!this.getInShopStatus(typeToMove) && !this.getInShopStatus(newSuperType)))) {\r\n        transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n        this.dropIntoSupersSetArrayValues(typeToMove);\r\n    } else if (typeToMove._id === newSuperType._id) {\r\n        this.snackBar.open('Cannot put a type within itself.', `Dismiss`, {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open('Both the super-type and sub-type must currently be in the shop.', `Dismiss`, {\r\n        duration: 4000,\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.sortTypesByName(this.possibleSupers);\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      this.sortTypesByName(superType.subTypes);\r\n    });\r\n  }\r\n\r\n  private dropIntoSupersSetArrayValues(typeToMove: ShopType) {\r\n    this.possibleSupers = this.possibleSupers.filter((superTypeToRemove: ShopType) => superTypeToRemove._id !== typeToMove._id);\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      if (superType.subTypes.length || !superType.products.length) {\r\n        this.possibleSubs = this.possibleSubs.filter((subType: ShopType) => subType._id !== superType._id);\r\n      }\r\n      if (!superType.subTypes.length  && !this.possibleSubs.some((subType: ShopType) => subType._id === superType._id)\r\n      && superType.products.length) {\r\n        this.possibleSubs.push(superType);\r\n      }\r\n    });\r\n    this.filterIneligibleSubTypes(this.possibleSubs);\r\n  }\r\n\r\n  private filterIneligibleSubTypes(types: Type[]) {\r\n    types.forEach((type: Type) => {\r\n      if (!type.products.length || !type.typeLimits || (type.typeLimits && !type.typeLimits.enableTypeTracking)) {\r\n        this.possibleSubs = this.possibleSubs.filter((ineligibleType: ShopType) => type._id !== ineligibleType._id);\r\n      }\r\n    });\r\n  }\r\n\r\n  getInShopStatus(typeToCheck: Type) {\r\n    let inShop = false;\r\n    this.shop.shop.forEach((type: Type) => {\r\n      if (type._id === typeToCheck._id) {\r\n        inShop = true;\r\n      }\r\n    });\r\n    return inShop;\r\n  }\r\n\r\n  initComponentVariables(shop: Shop) {\r\n    this.possibleSubs = [];\r\n    this.possibleSupers = [];\r\n    const shopClone = cloneDeep(shop);\r\n    this.shop = shopClone;\r\n  }\r\n\r\n  /* Adds all types to possible sub-types and possible super-types arrays.\r\n  // All types are inserted into both arrays so that sub-types can be put in super-types.\r\n  */\r\n  private initDragDropArrays() {\r\n    this.types.forEach((type: Type) => {\r\n      const emptyArray: ShopType[] = [];\r\n      this.possibleSubs.push(\r\n        {_id: type._id, typeName: type.typeName, typeLimits: type.typeLimits, subTypes: emptyArray, products: type.products}\r\n      );\r\n      this.possibleSupers.push(\r\n        {_id: type._id, typeName: type.typeName, typeLimits: type.typeLimits, subTypes: emptyArray, products: type.products}\r\n      );\r\n    });\r\n  }\r\n\r\n  private initDragDropValues() {\r\n    // sets possible sub-types\r\n    this.filterIneligibleSubTypes(this.types);\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      this.types.forEach((type: Type) => {\r\n        if (type.superTypeId === superType._id) {\r\n          // find sub-types of super-types\r\n          const newSubType = this.possibleSubs.find((subType: ShopType) => subType._id === type._id);\r\n          // add sub-type to super-type\r\n          superType.subTypes.push(newSubType);\r\n          // remove sub-type from possible sub-types\r\n          this.possibleSubs = this.possibleSubs.filter((subType: ShopType) => subType._id !== newSubType._id);\r\n          // remove super-type from possible sub-types\r\n          this.possibleSubs = this.possibleSubs.filter((subType: ShopType) => subType._id !== superType._id);\r\n          // remove sub-type from possible super-types\r\n          this.possibleSupers = this.possibleSupers.filter((superTypeRemove: ShopType) => superTypeRemove._id !== newSubType._id);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private showResponseStatus(status: number) {\r\n    if (status === 200) {\r\n      this.snackBar.open('Types updated successfully', 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open('Types update failed.', 'Dismiss', {\r\n        duration: 2000,\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateShop();\r\n    this.dataService.updateProducts();\r\n  }\r\n\r\n  sortTypesByName(dragDropArray: ShopType[]) {\r\n    dragDropArray.sort((before, after) => before.typeName.trim().toLowerCase() > after.typeName.trim().toLowerCase() ? 1 : -1);\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  onSaveClick() {\r\n    this.loading = true;\r\n    if (this.getTypeIdsToUpdate().length) {\r\n      forkJoin([\r\n        this.typeService.removeSuperTypeIdMany(this.getTypeIdsToRemove()),\r\n        ObservableFrom(this.getTypeIdsToUpdate()).pipe(\r\n          concatMap((update: {\r\n            superTypeId: string,\r\n            updateIds: string[]\r\n          }) => this.typeService.updateSuperTypeIdMany(update.superTypeId, update.updateIds)))\r\n        ]).subscribe(([remove, update]) => {\r\n          let response: number;\r\n          const typedRemove: any = remove;\r\n          const typedUpdate: any = update;\r\n          typedRemove.status === 200 && typedUpdate.status === 200 ? response = 200 : response = 400;\r\n          this.showResponseStatus(response);\r\n          this.router.navigate([`/pantry`]);\r\n\r\n        });\r\n    } else {\r\n      this.typeService.removeSuperTypeIdMany(this.getTypeIdsToRemove()).subscribe((response: any) => {\r\n        this.showResponseStatus(response.status);\r\n        this.router.navigate([`/pantry`]);\r\n      });\r\n    }\r\n  }\r\n\r\n  private getTypeIdsToRemove(): string[] {\r\n    const typeIdsToRemove: string[] = [];\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      typeIdsToRemove.push(superType._id);\r\n    });\r\n    return typeIdsToRemove;\r\n  }\r\n\r\n  private getTypeIdsToUpdate(): any[] {\r\n    const updateObjects: {\r\n      superTypeId: string,\r\n      updateIds: string[]\r\n    }[] = [];\r\n    this.possibleSupers.forEach((superType: ShopType) => {\r\n      if (superType.subTypes.length) {\r\n        const idsToUpdate: string[] = [];\r\n        superType.subTypes.forEach((subType: ShopType) => {\r\n          idsToUpdate.push(subType._id);\r\n        });\r\n        updateObjects.push({superTypeId: superType._id, updateIds: idsToUpdate});\r\n      }\r\n    });\r\n    return updateObjects;\r\n  }\r\n}\r\n","<div id=\"spinner\" class=\"center-grid\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n\r\n\r\n<mat-card id=\"top-container\" class=\"margin-top-2\" [formGroup]=\"typeForm\" *ngIf=\"!loading\">\r\n\r\n    <!-- Top Buttons --> \r\n    <span id=\"top-buttons\">\r\n        <span *ngIf=\"!typeEdit\" class=\"type-title\">Type Create</span>\r\n        <span *ngIf=\"typeEdit\" class=\"type-title\">Type Edit</span>\r\n        <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n        <button mat-raised-button (click)=\"onSaveClick()\" *ngIf=\"!typeEdit\" [disabled]=\"!typeForm.valid\">Save Type and Exit</button>\r\n        <button mat-raised-button (click)=\"onSaveClick()\" *ngIf=\"typeEdit\" [disabled]=\"(typeForm.pristine && !deletedOrMoved) || !typeForm.valid\">Save Update and Exit</button>         \r\n    </span>\r\n\r\n    <!-- In Shop And Super Type Name --> \r\n    <span class=\"flex-space-evenly margin-top-2\">\r\n        <mat-card class=\"red\" *ngIf=\"inShop\">Currently in the Shop</mat-card>\r\n        <mat-card class=\"red\" *ngIf=\"(typeLimitsFormOpen && superTypeName && typeLimitsForm.get('enableTypeTracking').value)\">{{'Sub-type of ' + superTypeName}}</mat-card>  \r\n    </span>\r\n     \r\n    <!--- Name And Comments -->\r\n    <div id=\"name-container-grid\" class=\"margin-top-2\">\r\n        <mat-card class=\"center-grid blue\">\r\n            <div>\r\n                <mat-form-field>\r\n                    <mat-label>Type Name</mat-label>\r\n                    <input matInput formControlName=\"typeName\">\r\n                    <mat-error *ngIf=\"typeForm.get('typeName').hasError('required')\">{{requiredError}}</mat-error>\r\n                </mat-form-field>\r\n            </div> \r\n        </mat-card>\r\n        <div></div>\r\n        <mat-card class=\" flex-align-items blue\">\r\n            <mat-form-field class=\"full-width\">\r\n                <mat-label>Comment (optional)</mat-label>\r\n                <input matInput formControlName=\"typeComment\">\r\n            </mat-form-field>\r\n        </mat-card>\r\n    </div>\r\n\r\n    <!-- Add and Remove Products-->\r\n    <mat-expansion-panel class=\"blue margin-top-2 texture\" [expanded]=\"productPanelOpenState\" \r\n    (opened)=\"productPanelOpenState = true\" (closed)=\"productPanelOpenState = false\">\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Add and Remove Products</mat-panel-title>\r\n            <mat-panel-description>{{productPanelOpenState ? 'close' : 'open'}}</mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <mat-card class=\"dark-blue\">\r\n            <ul>\r\n                <li>Only products not already assigned to a type appear in the \"Available Products\" column.</li>\r\n                <li>Types without products will be automatically removed from the shop.</li>\r\n            </ul>\r\n        </mat-card>\r\n        <div id=\"add-product-container\" class=\"margin-top-1 blue texture\">\r\n            <mat-card id=\"available-container\" class=\"texture\">\r\n                <div class=\"margin-bottom-1\">Available Products</div>\r\n                <cdk-virtual-scroll-viewport class=\"add-remove-products-viewport margin-top-2\" itemSize=\"\" #productList=\"cdkDropList\" \r\n                [cdkDropListData]=\"availableProducts\" [cdkDropListConnectedTo]=\"[productTypeList]\" (cdkDropListDropped)=\"dropProduct($event)\" cdkDropList>\r\n                    <mat-card class=\"product-card margin-top-1-not-first dark-blue\" *ngFor=\"let product of availableProducts\" cdkDrag>{{product.productName}}</mat-card>\r\n                </cdk-virtual-scroll-viewport>\r\n            </mat-card>\r\n            <mat-card class=\"texture\">\r\n                <div class=\"margin-bottom-1\">Products in this Type</div>\r\n                <cdk-virtual-scroll-viewport class=\"add-remove-products-viewport margin-top-2\" itemSize=\"\" #productTypeList=\"cdkDropList\" \r\n                [cdkDropListData]=\"productsInType\" [cdkDropListConnectedTo]=\"[productList]\" (cdkDropListDropped)=\"dropProduct($event)\" cdkDropList>\r\n                    <mat-card class=\"product-card margin-top-1-not-first dark-blue\" *ngFor=\"let product of productsInType\" cdkDrag>{{product.productName}}</mat-card>\r\n                </cdk-virtual-scroll-viewport>  \r\n            </mat-card>\r\n        </div>\r\n    </mat-expansion-panel >\r\n    \r\n    <!-- Type Limits -->\r\n    <mat-expansion-panel class=\"blue margin-top-2 texture\" [expanded]=\"limitPanelOpenState\" \r\n    (opened)=\"limitPanelOpenState = true\" (closed)=\"limitPanelOpenState = false\">\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Set Type Limits (optional)</mat-panel-title>\r\n            <mat-panel-description>{{limitPanelOpenState ? 'close' : 'open'}}</mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n            <div class=\"margin-top-1 blue texture\">\r\n                <!-- Information -->\r\n                <mat-card class=\"margin-top-2 dark-blue\">\r\n                    <ul>\r\n                        <li>Only add type limits if the combined quantity of products selected by the user from this type cannot exceed a certain number per family size.</li>\r\n                        <li *ngIf=\"!typeEdit || (typeEdit && !superTypeName)\">Types without limits or with type tracking disabled cannot be a sub-type.</li>\r\n                        <li *ngIf=\"typeEdit && superTypeName && !inShop\">If all type limits are removed or type tracking disabled, this type will be automatically removed as a sub-type.</li>\r\n                        <li *ngIf=\"typeEdit && superTypeName && inShop\">If all type limits are removed or type tracking disabled, this type will be automatically removed as a sub-type but remain in the shop.</li>\r\n                    </ul>\r\n                </mat-card>\r\n                <button class=\"margin-top-2\" mat-raised-button (click)=\"initTypeLimitsForm()\" *ngIf=\"!typeLimitsFormOpen\">Create Limits</button>\r\n                <!-- Type Limits Form -->\r\n                <div formGroupName=\"typeLimitsForm\" *ngIf=\"typeLimitsFormOpen\">\r\n                    <!-- Enable Type Tracking Form -->\r\n                    <mat-card class=\"margin-top-2 dark-blue\" >\r\n                        <label>Enable type tracking?</label>\r\n                        <mat-radio-group matInput formControlName=\"enableTypeTracking\">\r\n                            <mat-radio-button [value]=true>Yes</mat-radio-button>\r\n                            <mat-radio-button [value]=false>No</mat-radio-button>\r\n                        </mat-radio-group>\r\n                        <ul>\r\n                            <li>Click \"Yes\" for types composed only of shelf stable items (e.g., canned goods, juice).</li>  \r\n                            <li>Click \"No\" for types composed only of shelf instable itmes (e.g. meat, fresh fruit).</li>  \r\n                            <li>If choosing \"No\", it's best to remove any product limits add a comment to the type explaining potential product scarcity.</li>\r\n                            <li>The max amount per family size will be shown to the user regardless of the above choice.</li>\r\n                        </ul>  \r\n                    </mat-card>\r\n                    <button class=\"margin-top-2\" mat-raised-button (click)=\"addSizeAmount()\">Add Another Limit</button>\r\n                    <!-- Type Size Amount Form -->\r\n                    <div class=\"margin-top-2\">\r\n                        <mat-card class=\"margin-top-2-not-first dark-blue\" *ngFor=\"let element of typeLimitsForm.get('typeSizeAmount')['controls']; let i = index\" formArrayName=\"typeSizeAmount\">\r\n                            <ng-container [formGroupName]=\"i\">\r\n                                <div id=\"type-size-amount-form\">\r\n                                    <span class=\"center-grid\">\r\n                                        <button mat-raised-button (click)=\"deleteSizeAmount(i)\">Delete Limit</button>\r\n                                    </span>    \r\n                                    <mat-form-field >\r\n                                    <mat-label>Minimum Family Size</mat-label>\r\n                                    <mat-select matInput formControlName=\"minFamSize\">\r\n                                        <mat-option [value]=1>1</mat-option>\r\n                                        <mat-option [value]=2>2</mat-option>\r\n                                        <mat-option [value]=3>3</mat-option>\r\n                                        <mat-option [value]=4>4</mat-option>\r\n                                        <mat-option [value]=5>5</mat-option>\r\n                                        <mat-option [value]=6>6</mat-option>\r\n                                        <mat-option [value]=7>7</mat-option>\r\n                                        <mat-option [value]=8>8</mat-option>\r\n                                        <mat-option [value]=9>9</mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"typeLimitsForm.get('typeSizeAmount')['controls'][i].get('minFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                                    </mat-form-field>\r\n                                    <mat-form-field>\r\n                                    <mat-label>Maximum Family Size</mat-label>\r\n                                    <mat-select matInput formControlName=\"maxFamSize\">\r\n                                        <mat-option [value]=1>1</mat-option>\r\n                                        <mat-option [value]=2>2</mat-option>\r\n                                        <mat-option [value]=3>3</mat-option>\r\n                                        <mat-option [value]=4>4</mat-option>\r\n                                        <mat-option [value]=5>5</mat-option>\r\n                                        <mat-option [value]=6>6</mat-option>\r\n                                        <mat-option [value]=7>7</mat-option>\r\n                                        <mat-option [value]=8>8</mat-option>\r\n                                        <mat-option [value]=9>9</mat-option>\r\n                                    </mat-select>    \r\n                                    <mat-error *ngIf=\"typeLimitsForm.get('typeSizeAmount')['controls'][i].get('maxFamSize').hasError('required')\">{{requiredError}}</mat-error>\r\n                                    </mat-form-field>        \r\n                                    <mat-form-field>\r\n                                    <mat-label>Type Limit</mat-label>\r\n                                    <mat-select matInput formControlName=\"maxAmount\">\r\n                                        <mat-option [value]=1>1</mat-option>\r\n                                        <mat-option [value]=2>2</mat-option>\r\n                                        <mat-option [value]=3>3</mat-option>\r\n                                        <mat-option [value]=4>4</mat-option>\r\n                                        <mat-option [value]=5>5</mat-option>\r\n                                        <mat-option [value]=6>6</mat-option>\r\n                                        <mat-option [value]=7>7</mat-option>\r\n                                        <mat-option [value]=8>8</mat-option>\r\n                                        <mat-option [value]=9>9</mat-option>\r\n                                        <mat-option [value]=10>10</mat-option>\r\n                                        <mat-option [value]=11>11</mat-option>\r\n                                        <mat-option [value]=12>12</mat-option>\r\n                                        <mat-option [value]=13>13</mat-option>\r\n                                        <mat-option [value]=14>14</mat-option>\r\n                                        <mat-option [value]=15>15</mat-option>\r\n                                    </mat-select>    \r\n                                    <mat-error *ngIf=\"typeLimitsForm.get('typeSizeAmount')['controls'][i].get('maxAmount').hasError('required')\">{{requiredError}}</mat-error>\r\n                                    </mat-form-field>    \r\n                                </div>\r\n                                <mat-error *ngIf=\"typeLimitsForm.get('typeSizeAmount')['controls'][i].hasError('minMax')\">Minimum size must be equal to or smaller than maximum size.</mat-error>     \r\n                            </ng-container>      \r\n                        </mat-card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n    </mat-expansion-panel>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder, FormControlName } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { minMaxValidator } from '../product-add/product-add.component';\r\nimport { Type } from '../../models/type.model';\r\nimport { TypeService } from 'src/app/services/type.service';\r\nimport { Product } from 'src/app/models/product.model';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { combineLatest, Subscription } from 'rxjs';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-type-add',\r\n  templateUrl: './type-add.component.html',\r\n  styleUrls: ['./type-add.component.css']\r\n})\r\n\r\nexport class TypeAddComponent implements OnInit, OnDestroy {\r\n  availableProducts: Product[] = [];\r\n  availableSubTypes: Type[] = [];\r\n  currentTypeName: string;\r\n  deletedOrMoved = false;\r\n  inShop = false;\r\n  limitPanelOpenState = false;\r\n  loading = true;\r\n  newSubTypes: Type[] = [];\r\n  products: Product[];\r\n  productPanelOpenState = false;\r\n  productsInType: Product[] = [];\r\n  requiredError = 'This field is required.';\r\n  enableTypeTracking: FormControl;\r\n  subscription = new Subscription();\r\n  superTypeName: string;\r\n  type = new Type();\r\n  typeEdit = false;\r\n  typeForm = new FormGroup({\r\n    typeName: new FormControl('', Validators.required),\r\n    typeComment: new FormControl('')\r\n  });\r\n  types: Type[];\r\n  typeLimitsForm: FormGroup;\r\n  typeLimitsFormOpen = false;\r\n  typeSizeAmount: FormArray;\r\n\r\n  constructor(protected dataService: DataService, protected formBuilder: FormBuilder, protected snackBar: MatSnackBar,\r\n              protected typeService: TypeService, protected router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getProducts(),\r\n        this.dataService.getTypes()\r\n      ]).subscribe(([products, types]) => {\r\n        this.products = products;\r\n        this.types = types;\r\n        this.initAvailableProducts();\r\n        this.loading = !this.loading;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  addSizeAmount() {\r\n    this.typeSizeAmount.push(this.formBuilder.group({\r\n      minFamSize: ['', [Validators.required]],\r\n      maxFamSize: ['', Validators.required],\r\n      maxAmount: ['', Validators.required]\r\n    }, { validator: minMaxValidator }\r\n    ));\r\n  }\r\n\r\n  deleteSizeAmount(index: number) {\r\n    this.deletedOrMoved = true;\r\n    this.typeSizeAmount.removeAt(index);\r\n    if (!this.typeSizeAmount.length) {\r\n      this.typeForm.removeControl('typeLimitsForm');\r\n      this.typeLimitsFormOpen = false;\r\n    }\r\n  }\r\n\r\n  dropProduct(event: CdkDragDrop<Product[]>) {\r\n    this.deletedOrMoved = true;\r\n    event.previousContainer === event.container ?\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex) :\r\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n    this.sortProductsByName(this.availableProducts);\r\n    this.sortProductsByName(this.productsInType);\r\n  }\r\n\r\n  initAvailableProducts() {\r\n    const unavailableProducts: Product[] = [];\r\n    this.types.forEach(type => type.products.forEach(product => unavailableProducts.push(product)));\r\n    this.products.forEach(product => {\r\n      if (!unavailableProducts.some(unavailable => unavailable._id === product._id)) {\r\n        this.availableProducts.push(product);\r\n      }\r\n    });\r\n    this.sortProductsByName(this.availableProducts);\r\n  }\r\n\r\n  initTypeLimitsForm() {\r\n    this.typeLimitsFormOpen = true;\r\n    this.typeLimitsForm = new FormGroup({});\r\n    this.enableTypeTracking = new FormControl(true);\r\n    this.typeLimitsForm.addControl('enableTypeTracking', this.enableTypeTracking);\r\n    this.typeSizeAmount = new FormArray([]);\r\n    this.addSizeAmount();\r\n    this.typeLimitsForm.addControl('typeSizeAmount', this.typeSizeAmount);\r\n    this.typeForm.addControl('typeLimitsForm', this.typeLimitsForm);\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  onSaveClick() {\r\n    if (this.typeForm.valid) {\r\n      this.setTypeValues();\r\n      if (!this.typeEdit) {\r\n        this.typeService.addType(this.type).subscribe((response: any) => this.showResponseStatus(response.status));\r\n      } else {\r\n        this.migrateTypeSizeAmount();\r\n        this.removeFromSuperType();\r\n        this.typeService.updateType(this.type._id, this.type).subscribe((response: any) => {\r\n          this.showResponseStatus(response.status);\r\n          this.dataService.updateTypes();\r\n          this.dataService.updateShop();\r\n          this.dataService.updateProducts();\r\n        });\r\n      }\r\n    }\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  removeFromSuperType() {\r\n    if (this.type.superTypeId && (!this.type.typeLimits || (this.type.typeLimits && !this.type.typeLimits.enableTypeTracking))) {\r\n      this.type.superTypeId = undefined;\r\n    }\r\n  }\r\n\r\n  setTypeValues() {\r\n    this.type.typeName = this.typeForm.get('typeName').value;\r\n    this.typeForm.get('typeComment').value.trim() !== '' ?\r\n      this.type.typeComment = this.typeForm.get('typeComment').value :\r\n      this.type.typeComment = undefined;\r\n    this.productsInType.length ?\r\n      this.type.products = this.productsInType :\r\n      this.type.products = [];\r\n    if (this.typeLimitsForm && this.typeSizeAmount.length) {\r\n      const addTypeLimits = {\r\n        typeLimits: {\r\n          enableTypeTracking: this.typeLimitsForm.get('enableTypeTracking').value,\r\n          typeSizeAmount:  this.typeLimitsForm.get('typeSizeAmount').value\r\n        }\r\n      };\r\n      this.type.typeLimits = addTypeLimits.typeLimits;\r\n    } else {\r\n      this.type.typeLimits = undefined;\r\n    }\r\n  }\r\n\r\n  showResponseStatus(status: any) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`${this.type.typeName} successfully updated.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`${this.type.typeName} failed to update.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateProducts();\r\n    this.dataService.updateShop();\r\n  }\r\n\r\n  sortProductsByName(dragDropCard: Product[]) {\r\n    dragDropCard.sort((before, after) => before.productName.trim().toLowerCase() > after.productName.trim().toLowerCase() ? 1 : -1);\r\n  }\r\n\r\n  // This is temporary.\r\n  // Take it out when we decide about migrating db or not.\r\n  private migrateTypeSizeAmount() {\r\n    if (this.type.typeSizeAmount) {\r\n      const addTypeLimits = {\r\n        typeLimits: {\r\n          enableTypeTracking: true,\r\n          typeSizeAmount:  this.type.typeSizeAmount\r\n        }\r\n      };\r\n      this.type.typeLimits = addTypeLimits.typeLimits;\r\n      this.type.typeSizeAmount = undefined;\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n    <p>This action will permanently delete {{type.typeName}}.  Permanently deleting a type removes it\r\n    from the shop and unassigns&mdash;but does not delete&mdash;any products currently assigned to it.</p>\r\n</mat-card>\r\n<p id=\"proceed-prompt\">Do you wish to proceed?</p>\r\n<span>\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button (click)=\"onProceedClick()\">Proceed</button>\r\n</span>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { TypeService } from 'src/app/services/type.service';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-type-delete-modal',\r\n  templateUrl: './type-delete-modal.component.html',\r\n  styleUrls: ['./type-delete-modal.component.css']\r\n})\r\nexport class TypeDeleteModalComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<TypeDeleteModalComponent>, @Inject (MAT_DIALOG_DATA) public type: Type,\r\n              private dataService: DataService, private router: Router, private snackBar: MatSnackBar,\r\n              private typeService: TypeService) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  private deleteType() {\r\n    this.typeService.deleteType(this.type._id).subscribe((response: any) => this.showResponseStatus(response.status));\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  onProceedClick() {\r\n    this.deleteType();\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/pantry`]);\r\n  }\r\n\r\n  private showResponseStatus(status: number) {\r\n    if (status === 200) {\r\n      this.snackBar.open(`${this.type.typeName} successfully deleted.`, 'Dismiss', {\r\n        panelClass: ['green-snackbar']\r\n      });\r\n    } else {\r\n      this.snackBar.open(`${this.type.typeName} failed to delete.`, 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    }\r\n    this.dataService.updateTypes();\r\n    this.dataService.updateShop();\r\n    this.dataService.updateProducts();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { TypeAddComponent } from '../type-add/type-add.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { TypeService } from 'src/app/services/type.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { minMaxValidator } from '../product-add/product-add.component';\r\nimport { combineLatest } from 'rxjs';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-type-edit',\r\n  templateUrl: '../type-add/type-add.component.html',\r\n  styleUrls: ['../type-add/type-add.component.css']\r\n})\r\nexport class TypeEditComponent extends TypeAddComponent implements OnInit, OnDestroy {\r\n  shop: Shop;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, protected dataService: DataService, protected formBuilder: FormBuilder,\r\n              protected typeService: TypeService, protected snackBar: MatSnackBar, protected router: Router) {\r\n      super(dataService, formBuilder, snackBar, typeService, router);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.typeEdit = true;\r\n    this.subscription.add(\r\n      combineLatest([\r\n        this.dataService.getShop(),\r\n        this.dataService.getTypes(),\r\n        this.activatedRoute.params.pipe(\r\n          switchMap(params => this.dataService.getTypeById(params.id)),\r\n          take(1)\r\n        ),\r\n        this.dataService.getProducts(),\r\n      ]).subscribe(([shop, types, type, products]) => {\r\n          this.rerouteOnEmptyType(type);\r\n          this.shop = shop;\r\n          this.types = types;\r\n          this.type = type;\r\n          this.products = products;\r\n          this.typeForm = new FormGroup({\r\n            typeName: new FormControl(this.type.typeName, Validators.required),\r\n            typeComment: new FormControl(this.initEditTypeCommentForm()),\r\n          });\r\n          this.initAvailableProducts();\r\n          this.initProductsInType();\r\n          this.initEditTypeLimitsForm();\r\n          this.setInShop();\r\n          this.setSuperTypeName();\r\n          this.loading = !this.loading;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private initProductsInType() {\r\n    this.productsInType = this.type.products;\r\n  }\r\n\r\n  private initEditTypeCommentForm(): string {\r\n    if (this.type.typeComment) {\r\n      return this.type.typeComment;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private initEditTypeLimitsForm() {\r\n    if (this.type.typeLimits) {\r\n      this.typeLimitsFormOpen = true;\r\n      this.typeLimitsForm = new FormGroup({});\r\n      this.enableTypeTracking = new FormControl(this.type.typeLimits.enableTypeTracking);\r\n      this.typeLimitsForm.addControl('enableTypeTracking', this.enableTypeTracking);\r\n      this.typeSizeAmount = new FormArray([]);\r\n      this.type.typeLimits.typeSizeAmount.forEach(element => {\r\n        this.typeSizeAmount.push(this.formBuilder.group({\r\n          minFamSize: [element.minFamSize, Validators.required],\r\n          maxFamSize: [element.maxFamSize, Validators.required],\r\n          maxAmount: [element.maxAmount, Validators.required]\r\n        },\r\n        { validator: minMaxValidator }\r\n        ));\r\n        this.typeLimitsForm.addControl('typeSizeAmount', this.typeSizeAmount);\r\n      });\r\n      this.typeForm.addControl('typeLimitsForm', this.typeLimitsForm);\r\n    }\r\n  }\r\n\r\n  private setInShop() {\r\n    this.shop.shop.forEach((type: Type) => {\r\n      if (type._id === this.type._id) {\r\n        this.inShop = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  private setSuperTypeName() {\r\n    if (this.type.superTypeId) {\r\n      this.superTypeName = this.types.find((superType) => superType._id === this.type.superTypeId).typeName;\r\n    }\r\n  }\r\n\r\n  private rerouteOnEmptyType(type: any) {\r\n    if (type === undefined || Object.entries(type).length === 0 && type.constructor === Object) {\r\n      this.snackBar.open('Type not found. Please try again.', 'Dismiss', {\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      this.router.navigate([`/pantry`]);\r\n    }\r\n  }\r\n}\r\n","<button id=\"edit-button\" (click)=\"onEditClick()\">Edit</button>\r\n<button id=\"delete-button\" (click)=\"onDeleteClick()\">Delete</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TypeDeleteModalComponent } from '../type-delete-modal/type-delete-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-type-grid-buttons',\r\n  templateUrl: './type-grid-buttons.component.html',\r\n  styleUrls: ['./type-grid-buttons.component.css']\r\n})\r\nexport class TypeGridButtonsComponent implements OnInit {\r\n  data: any;\r\n  params: any;\r\n\r\n  constructor(private dialog: MatDialog, private router: Router) { }\r\n\r\n  agInit(params) {\r\n    this.data =  params.data;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onDeleteClick() {\r\n    this.dialog.open(TypeDeleteModalComponent, {\r\n      data: this.data,\r\n      disableClose: true,\r\n      panelClass: ['delete-dialog-container'],\r\n      width: '34rem'\r\n    });\r\n  }\r\n\r\n  onEditClick() {\r\n    this.router.navigate(['/type', this.data._id]);\r\n  }\r\n}\r\n","<div id=\"spinner\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div id=\"ag-grid-super-container\">\r\n    <mat-card id=\"ag-grid-sub-container\" *ngIf=\"!loading\">\r\n        <span id=\"button-grid-container\">\r\n            <span id=\"types-title\">Types</span>\r\n            <button mat-raised-button (click)=\"onSubTypesClick()\">Set Sub-Types</button>\r\n            <button mat-raised-button (click)=\"onCreateTypeClick()\">Create Type</button>\r\n        </span>\r\n        <ag-grid-angular \r\n        style=\"width: 760px; height: 500px;\" \r\n        class=\"ag-theme-balham\"\r\n        [columnDefs]=\"columnDefs\"\r\n        [defaultColDef]=\"defaultColDef\"\r\n        [suppressCellSelection]=\"true\"\r\n        [pagination]=\"true\"\r\n        [paginationAutoPageSize]=\"true\"\r\n        [rowData]=\"rowData\"\r\n        (gridReady)=\"onGridReady($event)\"\r\n        >\r\n        </ag-grid-angular>\r\n    </mat-card>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Type } from 'src/app/models/type.model';\r\nimport { TypeGridButtonsComponent } from '../type-grid-buttons/type-grid-buttons.component';\r\nimport { Shop } from 'src/app/models/shop.model';\r\nimport { combineLatest, Subscription } from 'rxjs';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-types',\r\n  templateUrl: './types.component.html',\r\n  styleUrls: ['./types.component.css']\r\n})\r\nexport class TypesComponent implements OnInit, OnDestroy {\r\n  columnDefs = [\r\n    {headerName: 'Type Name', field: 'typeName', sort: 'asc'},\r\n    {headerName: 'Product Count', field: 'productCount'},\r\n    {headerName: 'Type Limit', field: 'typeLimit'},\r\n    {headerName: 'Super Type', field: 'superType'},\r\n    {headerName: 'In Shop', field: 'inShop'},\r\n    {headerName: '', field: 'action', filter: false, sortable: false, width: 150, cellRendererFramework: TypeGridButtonsComponent}\r\n  ];\r\n  defaultColDef = {\r\n    filter: true,\r\n    filterParams: {\r\n      suppressAndOrCondition: true\r\n    },\r\n    resizable: true,\r\n    sortable: true,\r\n    width: 120\r\n  };\r\n  private gridApi;\r\n  loading = true;\r\n  rowData = [];\r\n  shop: Shop;\r\n  subscription = new Subscription();\r\n  types: Type[];\r\n\r\n  constructor(private dataService: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([\r\n      this.dataService.getShop(),\r\n      this.dataService.getTypes()\r\n      ]).subscribe(([shop, types]) => {\r\n        this.shop = shop;\r\n        this.types = types;\r\n        this.rowData = this.getFormattedFields();\r\n        this.loading = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridApi.setRowData(this.rowData);\r\n  }\r\n\r\n  private getInShopStatus(typeToCheck: Type) {\r\n    let inShop = false;\r\n    this.shop.shop.forEach((type: Type) => {\r\n      if (type._id === typeToCheck._id) {\r\n        inShop = true;\r\n      }\r\n    });\r\n    return inShop;\r\n  }\r\n\r\n  private getSuperTypeName(typeToCheck: Type) {\r\n    let superTypeName = 'None';\r\n    this.types.forEach((type: Type) => {\r\n      if (type._id === typeToCheck.superTypeId) {\r\n        superTypeName = type.typeName;\r\n      }\r\n    });\r\n    return superTypeName;\r\n  }\r\n\r\n  private getFormattedFields() {\r\n    const rowData = [];\r\n    this.types.forEach((type: Type) => {\r\n      const rowEntry = {};\r\n      Object.defineProperty(rowEntry, '_id', {value: type._id});\r\n      Object.defineProperty(rowEntry, 'typeName', {value: type.typeName});\r\n      type.products ?\r\n        Object.defineProperty(rowEntry, 'productCount', {value: type.products.length}) :\r\n        Object.defineProperty(rowEntry, 'productCount', {value: 0});\r\n      type.typeLimits ?\r\n        Object.defineProperty(rowEntry, 'typeLimit', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'typeLimit', {value: 'No'});\r\n      Object.defineProperty(rowEntry, 'superType', {value: this.getSuperTypeName(type)});\r\n      this.getInShopStatus(type) ?\r\n        Object.defineProperty(rowEntry, 'inShop', {value: 'Yes'}) :\r\n        Object.defineProperty(rowEntry, 'inShop', {value: 'No'});\r\n      rowData.push(rowEntry);\r\n    });\r\n    return rowData;\r\n  }\r\n\r\n  onCreateTypeClick() {\r\n    this.router.navigate(['/type']);\r\n  }\r\n\r\n  onRowClicked() {\r\n    this.router.navigate(['/product']);\r\n  }\r\n\r\n  onSubTypesClick() {\r\n    this.router.navigate(['/sub-types']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean|UrlTree> | boolean {\r\n    return this.authService.isAuthenticated.pipe(\r\n      tap(loggedIn => {\r\n        if (!loggedIn) {\r\n          this.authService.login(state.url);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","export class Product {\r\n    // tslint:disable-next-line:variable-name\r\n    _id: string;\r\n    productName: string;\r\n    prodSizeAmount?: {\r\n        minFamSize: number;\r\n        maxFamSize: number;\r\n        maxAmount: number;\r\n    } [];\r\n    points?: number;\r\n    school?: boolean;\r\n    infant?: boolean;\r\n}\r\n","import { Product } from './product.model';\r\n\r\nexport class Type {\r\n    // tslint:disable-next-line:variable-name\r\n    _id: string;\r\n    typeName: string;\r\n    products: Product[];\r\n    typeComment?: string;\r\n    typeSizeAmount?: {\r\n        minFamSize: number;\r\n        maxFamSize: number;\r\n        maxAmount: number;\r\n    } [];\r\n    typeLimits?: {\r\n        enableTypeTracking: boolean;\r\n        typeSizeAmount: {\r\n            minFamSize: number;\r\n            maxFamSize: number;\r\n            maxAmount: number;\r\n        } []\r\n    };\r\n    superTypeId?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { from, of, Observable, BehaviorSubject, combineLatest, throwError } from 'rxjs';\r\nimport { tap, catchError, concatMap, shareReplay } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport authConfig from '../../../auth.config';\r\nimport Auth0Client from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  loggedIn: boolean = null;\r\n\r\n  logOutClick = false;\r\n  private logOutClickSource = new BehaviorSubject(this.logOutClick);\r\n  currentLogOutClick = this.logOutClickSource.asObservable();\r\n\r\n  auth0Client = (from(createAuth0Client(authConfig)) as Observable<Auth0Client>).pipe(\r\n    shareReplay(1),\r\n    catchError(err => throwError(err))\r\n  );\r\n  isAuthenticated = this.auth0Client.pipe(\r\n    concatMap((client: Auth0Client) => from(client.isAuthenticated())),\r\n    tap(res => this.loggedIn = res)\r\n  );\r\n  handleRedirectCallback = this.auth0Client.pipe(\r\n    concatMap((client: Auth0Client) => from(client.handleRedirectCallback()))\r\n  );\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  getTokenSilently$(options?): Observable<string> {\r\n    return this.auth0Client.pipe(\r\n      concatMap((client: Auth0Client) => from(client.getTokenSilently(options)))\r\n    );\r\n  }\r\n\r\n  localAuthSetup() {\r\n    const checkAuth = this.isAuthenticated.pipe(\r\n      concatMap((loggedIn: boolean) => {\r\n        return of(loggedIn);\r\n      })\r\n    );\r\n    checkAuth.subscribe((response: { [key: string]: any } | boolean) => {\r\n      this.loggedIn = !!response;\r\n    });\r\n  }\r\n\r\n  login(redirectPath: string = `/orders`) {\r\n    this.auth0Client.subscribe((client: Auth0Client) => {\r\n      client.loginWithRedirect({\r\n        redirect_uri: `${window.location.origin}/callback`,\r\n        appState: { target: redirectPath }\r\n      });\r\n    });\r\n  }\r\n\r\n  handleAuthCallback() {\r\n    let targetRoute: string;\r\n    const authComplete = this.handleRedirectCallback.pipe(\r\n      tap(cbRes => {\r\n        targetRoute = cbRes.appState && cbRes.appState.target ? cbRes.appState.target : '/';\r\n      }),\r\n      concatMap(() => {\r\n        return combineLatest([\r\n          this.isAuthenticated\r\n        ]);\r\n      })\r\n    );\r\n    authComplete.subscribe(([loggedIn]) => {\r\n      this.router.navigate([targetRoute]);\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.auth0Client.subscribe((client: Auth0Client) => {\r\n      client.logout({\r\n        client_id: authConfig.client_id,\r\n        returnTo: `${window.location.origin}`\r\n      });\r\n    });\r\n  }\r\n\r\n  getLogOutClicked(): Observable<boolean> {\r\n    return this.currentLogOutClick;\r\n  }\r\n\r\n  logOutClicked() {\r\n    this.logOutClickSource.next(true);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TypeService } from './type.service';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { Type } from '../models/type.model';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductService } from './product.service';\r\nimport { Product } from '../models/product.model';\r\nimport { Shop } from '../models/shop.model';\r\nimport { ShopService } from './shop.service';\r\nimport { OrderService } from './order.service';\r\nimport { Order } from '../models/order.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  orders: Order[] = [];\r\n  products: Product[] = [];\r\n  shop: Shop = {_id: null, shop: []};\r\n  types: Type[] = [];\r\n\r\n  constructor(private snackBar: MatSnackBar, private orderService: OrderService, private productService: ProductService, \r\n              private shopService: ShopService, private typeService: TypeService) {\r\n                this.updateShop();\r\n                this.updateTypes();\r\n                this.updateProducts();\r\n                this.updateOrders();\r\n               }\r\n\r\n  private ordersSource = new BehaviorSubject(this.orders);\r\n  currentOrders = this.ordersSource.asObservable();\r\n\r\n  private productsSource = new BehaviorSubject(this.products);\r\n  currentProducts = this.productsSource.asObservable();\r\n\r\n  private shopSource = new BehaviorSubject(this.shop);\r\n  currentShop = this.shopSource.asObservable();\r\n\r\n  private typesSource = new BehaviorSubject(this.types);\r\n  currentTypes = this.typesSource.asObservable();\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    return this.currentOrders;\r\n  }\r\n\r\n  getOrderById(orderId: string) {\r\n    return this.currentOrders.pipe(map(\r\n      (orders: Order[]) => orders.find((order: Order) => order._id === orderId)\r\n    ));\r\n  }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.currentProducts;\r\n  }\r\n\r\n  getProductById(productId: string): Observable<Product> {\r\n    return this.currentProducts.pipe(map(\r\n      (products: Product[]) => products.find((product: Product) => product._id === productId)\r\n    ));\r\n  }\r\n\r\n  getShop(): Observable<Shop> {\r\n    return this.currentShop;\r\n  }\r\n\r\n  getTypes(): Observable<Type[]> {\r\n    return this.currentTypes;\r\n  }\r\n\r\n  getTypeById(typeId: string) {\r\n    return this.currentTypes.pipe(map(\r\n      (types: Type[]) => types.find((type: Type) => type._id === typeId)\r\n    ));\r\n  }\r\n\r\n  updateOrders() {\r\n    this.orderService.getOrders().subscribe((orders: Order[]) => {\r\n      this.ordersSource.next(orders);\r\n    });\r\n  }\r\n\r\n  updateProducts() {\r\n    this.productService.getProducts().subscribe((products: Product[]) => {\r\n      this.productsSource.next(products);\r\n    });\r\n  }\r\n\r\n  /** Removes any empty types from the shop and updates shop in db if empty types are removed.\r\n   *  Updates shopSource behavior subject.\r\n   *  @param shop the current shop observable.\r\n   */\r\n  updateShop() {\r\n    this.shopService.getShop().subscribe((shop: Shop) => {\r\n      shop = this.updateShopRemoveEmptyTypes(shop);\r\n      this.shopSource.next(shop);\r\n    });\r\n  }\r\n\r\n  /** Collects all type ids that have subtypes and then removes all types\r\n   *  from the passed in shop object if both (a) a type does not contain products\r\n   *  and (b) a type does not contain subTypes. Updates db if types are removed.\r\n   *  Called in updateShop().\r\n   *  @param shop the current shop observable.\r\n   *  @returns the shop with epmty types removed.\r\n   */\r\n  private updateShopRemoveEmptyTypes(shop: Shop): Shop {\r\n    const preFilterShopLength: number = shop.shop.length;\r\n    const superTypeIds: string[] = [];\r\n    shop.shop.forEach((subType: Type) => {\r\n      if (subType.superTypeId) {\r\n        superTypeIds.push(subType.superTypeId);\r\n      }\r\n    });\r\n    shop.shop.forEach((currentType: Type) => {\r\n      if (!currentType.products.length && !superTypeIds.includes(currentType._id)) {\r\n        shop.shop = shop.shop.filter((type: Type) => type._id !== currentType._id);\r\n      }\r\n    });\r\n    if (preFilterShopLength > shop.shop.length) {\r\n      this.updateShopService(shop);\r\n    }\r\n    return shop;\r\n  }\r\n\r\n  /** Updates the shop in the db.  Called in updateShopRemoveEmptTypes() when empty types\r\n   *  are removed from the passed in shop object.  If the db update fails, the shop view will\r\n   *  be misaligned with the db.  A refresh will align the view with the db, however.  May\r\n   *  improve this in the future.\r\n   *  @param shop the current shop observable.\r\n   */\r\n  private updateShopService(shop: Shop) {\r\n    this.shopService.updateShop(shop._id, shop).subscribe((response: any) => {\r\n      if (response.status === 200) {\r\n        this.snackBar.open('Empty type removed.', 'Dismiss', {\r\n          panelClass: ['green-snackbar']});\r\n      } else {\r\n        this.snackBar.open('Empty type failed to be removed. Please refresh screen.', 'Dismiss', {\r\n          panelClass: ['red-snackbar']});\r\n      }\r\n    });\r\n  }\r\n\r\n  updateTypes() {\r\n    this.typeService.getTypes().subscribe((types: Type[]) => {\r\n      this.typesSource.next(types);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { mergeMap, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return this.authService.getTokenSilently$().pipe(\r\n      mergeMap(token => {\r\n        const tokenReq = req.clone({\r\n          setHeaders: { Authorization: `Bearer ${token}` }\r\n        });\r\n        return next.handle(tokenReq);\r\n      }),\r\n      catchError(err => throwError(err))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Order } from '../models/order.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  url = environment.apiUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getOrderById(orderId: string) {\r\n    return this.httpClient.get<Order>(`${this.url}/orders/${orderId}`);\r\n  }\r\n\r\n  getOrders() {\r\n    return this.httpClient.get<Order[]>(`${this.url}/orders/`);\r\n  }\r\n\r\n  updateOrderReceived(orderId: string, received: object) {\r\n    return this.httpClient.put(`${this.url}/orders/update-received/${orderId}`, received);\r\n  }\r\n\r\n  deleteOrder(orderId: string) {\r\n    return this.httpClient.delete(`${this.url}/orders/delete/${orderId}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PantryPanelService {\r\n  panelOpenStates = new Map <string, boolean>([\r\n    ['product', false],\r\n    ['type', false],\r\n    ['shop', false]\r\n  ]);\r\n\r\n  private panelOpenSource = new BehaviorSubject(this.panelOpenStates);\r\n  currentPanelOpen = this.panelOpenSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  getPanelOpenStates(): Observable<Map<string, boolean>> {\r\n    return this.currentPanelOpen;\r\n  }\r\n\r\n  setPanelOpenStates(panel: string, state: boolean) {\r\n    this.panelOpenStates.set(panel, state);\r\n    this.panelOpenSource.next(this.panelOpenStates);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Product } from '../models/product.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  url = environment.apiUrl;\r\n  products: Product[] = [];\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getProductById(productId: string) {\r\n    return this.httpClient.get<Product>(`${this.url}/products/${productId}`);\r\n  }\r\n\r\n  getProducts() {\r\n    return this.httpClient.get<Product[]>(`${this.url}/products`);\r\n  }\r\n\r\n  addProduct(product: object) {\r\n    return this.httpClient.post(`${this.url}/products/add`, product);\r\n  }\r\n\r\n  updateProduct(productId: string, product: object) {\r\n    return this.httpClient.put(`${this.url}/products/update/${productId}`, product);\r\n  }\r\n\r\n  deleteProduct(productId: string) {\r\n    return this.httpClient.delete(`${this.url}/products/delete/${productId}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Shop } from '../models/shop.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { entriesIn } from 'lodash';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShopService {\r\n  url = environment.apiUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getShop() {\r\n    return this.httpClient.get<Shop>(`${this.url}/shop`).pipe(\r\n      map(result => result[0])\r\n    );\r\n  }\r\n\r\n  updateShop(shopId: string, shop: Shop) {\r\n    return this.httpClient.put<Shop>(`${this.url}/shop/update/${shopId}`, shop);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Type } from '../models/type.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TypeService {\r\n  url = environment.apiUrl;\r\n  types: Type[] = [];\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  addType(type: object) {\r\n    return this.httpClient.post(`${this.url}/types/add`, type);\r\n  }\r\n\r\n  deleteType(typeId: string) {\r\n    return this.httpClient.delete(`${this.url}/types/delete/${typeId}`);\r\n  }\r\n\r\n  getTypeById(typeId: string) {\r\n    return this.httpClient.get<Type>(`${this.url}/types/${typeId}`);\r\n  }\r\n\r\n  getTypes() {\r\n    return this.httpClient.get<Type[]>(`${this.url}/types`);\r\n  }\r\n\r\n  removeSuperTypeIdMany(removeIds: string[]) {\r\n    return this.httpClient.post(`${this.url}/types/remove-super-type-many`, removeIds);\r\n  }\r\n\r\n  updateSuperTypeIdMany(superTypeId: string, updateIds: string[]) {\r\n    return this.httpClient.post(`${this.url}/types/update-super-type-many/${superTypeId}`, updateIds);\r\n  }\r\n\r\n  updateType(typeId: string, type: object) {\r\n    return this.httpClient.put(`${this.url}/types/update/${typeId}`, type);\r\n  }\r\n\r\n}\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:4201/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}